
/usr/lib/libmachine.so:     file format elf32-littlearm

DYNAMIC SYMBOL TABLE:
00033f84 l    d  .init	00000000              .init
000b0bf0 l    d  .jcr	00000000              .jcr
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t>::consume(boost::log::v2_mt_posix::record_view const&, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&)
000b24c0  w   DO .data.rel.ro	00000020  Base        vtable for boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> >*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> > > >
000890b4 g    DF .text	00000008  Base        AccelerationManagerImpl::BufferSize() const
00000000      DF *UND*	00000000  GLIBC_2.4   pthread_cond_init
000402d8  w   DF .text	00000024  Base        boost::detail::sp_counted_impl_pd<std::ostream*, boost::log::v2_mt_posix::empty_deleter>::~sp_counted_impl_pd()
00064080  w   DF .text	00000058  Base        boost::log::v2_mt_posix::aux::light_function<bool (boost::log::v2_mt_posix::attribute_value_set const&)>::impl<boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not, boost::proto::argsns_::list1<boost::phoenix::actor<boost::log::v2_mt_posix::expressions::aux::unary_function_terminal<boost::log::v2_mt_posix::expressions::has_attribute<std::string> > > >, 1l> > >::clone_impl(boost::log::v2_mt_posix::aux::light_function<bool (boost::log::v2_mt_posix::attribute_value_set const&)>::impl_base const*)
00092178  w   DF .text	00000300  Base        boost::log::v2_mt_posix::sources::aux::logger_singleton<telem_obj>::construct_logger()
000557e8  w   DF .text	000000d8  Base        boost::exception_detail::error_info_injector<std::out_of_range>::error_info_injector(boost::exception_detail::error_info_injector<std::out_of_range> const&)
0008ecdc g    DF .text	00000100  Base        UnitConverter::FloorTicks(float) const
0009ebac  w   DO .rodata	00000065  Base        typeinfo name for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_month> >
000408ec  w   DF .text	00000024  Base        boost::exception_detail::clone_base::~clone_base()
000b0de8  w   DO .data.rel.ro	00000008  Base        typeinfo for AbstractTransceiver
0003f5a4  w   DF .text	00000070  Base        boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::text_file_backend>*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::text_file_backend> > >::~sp_counted_impl_pd()
000405d4  w   DF .text	00000008  Base        boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char>*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> > >::get_untyped_deleter()
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::aux::stream_provider<char>::release_compound(boost::log::v2_mt_posix::aux::stream_provider<char>::stream_compound*)
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::ostream::put(char)
00054888 g    DF .text	000001a8  Base        I2C::ConfigureDevice(i2c_rdwr_ioctl_data*)
00044900  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::condition_error> >::~clone_impl()
00061a94  w   DF .text	000000a0  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<std::out_of_range> >::~clone_impl()
00000000      DF *UND*	00000000              Json::ValueIteratorBase::isEqual(Json::ValueIteratorBase const&) const
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::sinks::text_file_backend::consume(boost::log::v2_mt_posix::record_view const&, std::string const&)
000b1b98  w   DO .data.rel.ro	00000008  Base        VTT for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_weekday> >
0009f3a0  w   DO .rodata	00000093  Base        typeinfo name for boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> >*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> > > >
0003db64  w   DF .text	00000024  Base        boost::log::v2_mt_posix::sinks::file::collector::~collector()
00000000      DF *UND*	00000000  GCC_3.5     __aeabi_d2uiz
00040204  w   DF .text	000000a0  Base        boost::log::v2_mt_posix::sinks::basic_sink_frontend::will_consume(boost::log::v2_mt_posix::attribute_value_set const&)
0004c064 g    DF .text	0000005c  Base        BronxToolheadManager::UploadAccelSettings()
0006d2f4  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::condition_error> >::clone() const
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::uncaught_exception()
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_ofstream<char, std::char_traits<char> >::open(char const*, std::_Ios_Openmode)
000b1cd0  w   DO .data.rel.ro	00000014  Base        vtable for boost::gregorian::bad_day_of_month
000b2430  w   DO .data.rel.ro	00000008  Base        typeinfo for boost::exception_detail::clone_base
00094384  w   DO .rodata	0000001c  Base        typeinfo name for boost::bad_function_call
00000000      DF *UND*	00000000  GLIBCXX_3.4 operator new(unsigned int)
00047088 g    DF .text	00000070  Base        PowerMonitor::PowerMonitor(std::unique_ptr<I2C, std::default_delete<I2C> >)
00046fb8 g    DF .text	0000006c  Base        BirdwingTransceiver::BirdwingTransceiver()
00066c0c g    DF .text	00000018  Base        ChamberToolheadManager::ProgramReset()
000405bc  w   DF .text	00000008  Base        boost::detail::sp_counted_impl_pd<std::ostream*, boost::log::v2_mt_posix::empty_deleter>::get_untyped_deleter()
00000000      DF *UND*	00000000  GLIBC_2.4   pthread_mutex_lock
00000000      DF *UND*	00000000  GLIBC_2.4   localtime_r
0005c3c4 g    DF .text	00000d2c  Base        ToolheadManager::GetStatusResponse(toolhead::Commands)
0007de8c  w   DF .text	000003e8  Base        boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::text_file_backend>::consume(boost::log::v2_mt_posix::record_view const&)
0004c7e4 g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::ChangeHESSampleRate(float, float*)
0009f524  w   DO .rodata	0000004d  Base        typeinfo name for boost::detail::sp_counted_impl_pd<std::ostream*, boost::log::v2_mt_posix::empty_deleter>
00049b54 g    DF .text	00000194  Base        Machine::ToolheadError(unsigned char) const
000b4d70 g    DO .bss	00000028  Base        axisConfigurations
0007fb20 g    DF .text	00000014  Base        Machine::MotorAbort(bool)
00046b5c g    DF .text	00000034  Base        BronxToolheadManager::BronxSelfCheckState::succeeded()
00000000      DF *UND*	00000000  GLIBC_2.4   pthread_mutex_init
00040564  w   DF .text	00000034  Base        boost::log::v2_mt_posix::aux::locking_ptr_counter_base::~locking_ptr_counter_base()
000390e0 g    DF .text	00000058  Base        ChamberToolheadManager::ChamberSelfCheckState::succeeded()
0004066c  w   DF .text	000000fc  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_weak_ptr> >::rethrow() const
000956a8  w   DO .rodata	00000044  Base        typeinfo name for boost::log::v2_mt_posix::aux::visible_type<boost::log::v2_mt_posix::aux::id<boost::log::v2_mt_posix::aux::thread> >
00066060 g    DF .text	00000028  Base        Machine::HomingSettings::~HomingSettings()
0009f324  w   DO .rodata	0000007a  Base        typeinfo name for boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t>*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> > >
000688d8  w   DF .text	00000108  Base        boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<wchar_t>::~basic_formatting_sink_frontend()
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::underflow()
000433e8 g    DF .text	00000098  Base        Machine::SetLedBlink(unsigned char, unsigned char, float)
000b3ef8 g    DO .data	00000004  Base        libstepper::lockFd
0007cdbc g    DF .text	00000024  Base        HesLogLoaded
000b0c10  w   DO .data.rel.ro	0000000c  Base        typeinfo for MachineTransceiverInterface
00044f68  w   DF .text	00000118  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::condition_error> >::~clone_impl()
00039600 g    DF .text	00000008  Base        BronxToolheadManager::HESConfigured()
00055dac  w   DF .text	00000008  Base        non-virtual thunk to boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> >::lock()
00065e98 g    DF .text	000000d4  Base        Machine::LoadDefaultState()
00000000      DF *UND*	00000000  GLIBC_2.4   ftruncate
000559b8  w   DF .text	0000002c  Base        boost::mutex::~mutex()
0007ce0c g    DF .text	00000020  Base        EndHesLog
00046c7c g    DF .text	00000050  Base        BirdwingTransceiver::GetMoveSteps(int, int, unsigned int) const
0004ef0c g    DF .text	00000014  Base        gpio::GPIO::GPIO(int, int)
0007cfc0 g    DF .text	00000014  Base        EnableZPause
0006224c  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::error_info_injector<boost::gregorian::bad_weekday>::~error_info_injector()
000402a4  w   DF .text	00000034  Base        boost::detail::sp_counted_impl_pd<std::ostream*, boost::log::v2_mt_posix::empty_deleter>::~sp_counted_impl_pd()
000b22dc  w   DO .data.rel.ro	00000020  Base        typeinfo for boost::exception_detail::error_info_injector<std::out_of_range>
0005e9e4 g    DF .text	00000104  Base        ChamberToolheadManager::SetFilamentFan(bool)
000b1b28  w   DO .data.rel.ro	00000054  Base        vtable for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_month> >
00040160  w   DF .text	00000034  Base        boost::log::v2_mt_posix::aux::basic_ostringstreambuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::~basic_ostringstreambuf()
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::aux::attach_attribute_name_info(boost::exception&, boost::log::v2_mt_posix::attribute_name const&)
000620fc  w   DF .text	000000b4  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_weekday> >::~clone_impl()
0006ad90  w   DF .text	00000048  Base        std::_Deque_base<char, std::allocator<char> >::~_Deque_base()
00054650 g    DF .text	00000008  Base        Machine::SetKnobColor(float, float, float, float)
00055d14  w   DF .text	00000098  Base        boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> >::lock()
00000000      DF *UND*	00000000  GLIBC_2.4   getpid
0007ef78 g    DF .text	0000016c  Base        AccelerationManager::Abort()
0004ecf4 g    DF .text	00000008  Base        ToolheadManager::EnableSPI()
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
0004ede0 g    DF .text	0000000c  Base        HAL::ToolheadSPI::DisableSPI()
000b0c68  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::equality_comparable<boost::posix_time::ptime, boost::posix_time::ptime, boost::detail::empty_base<boost::posix_time::ptime>, boost::detail::false_t>
00000000      DF *UND*	00000000  CXXABI_ARM_1.3.3 __aeabi_atexit
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::basic_ostream(std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >*)
0004eb1c g    DF .text	00000014  Base        gpio::GPIO::GPIO(GpioId const*)
000624d4  w   DF .text	00000078  Base        boost::exception_detail::error_info_injector<std::out_of_range>::~error_info_injector()
00000000      DF *UND*	00000000  GLIBC_2.4   pthread_rwlock_destroy
000b2698  w   DO .data.rel.ro	00000020  Base        vtable for boost::detail::sp_counted_base
000b1ea0  w   DO .data.rel.ro	00000054  Base        vtable for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::lock_error> >
00054d04 g    DF .text	00000194  Base        PowerMonitor::SwitchPowerChip(machine::PowerMonitorRail)
0003fe4c  w   DF .text	00000038  Base        boost::log::v2_mt_posix::attribute::impl::~impl()
00000000      DF *UND*	00000000  GLIBC_2.4   gettimeofday
0007c520 g    DF .text	00000020  Base        InitializeFromSettings
000889c4  w   DF .text	0000009c  Base        boost::condition_variable::~condition_variable()
00039608 g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::HESConfigured()
0004f278 g    DF .text	00000024  Base        operator+(q14 const&, q14 const&)
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_iostream<char, std::char_traits<char> >::~basic_iostream()
00045914 g    DF .text	00000140  Base        HeaterManager::ClearHeaters()
00061b3c  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<std::out_of_range> >::~clone_impl()
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::aux::this_thread::get_id()
000b275c g    DO .data.rel.ro	0000000c  Base        typeinfo for NullTransceiver
00000000      DF *UND*	00000000  GLIBC_2.4   pthread_cond_destroy
00000000      DF *UND*	00000000  GLIBCXX_3.4.15 std::overflow_error::~overflow_error()
00086d60 g    DF .text	00000108  Base        libstepper::BufferIsTrapezoidFull(bool)
0007cc74 g    DF .text	00000020  Base        QuickPause
000b0dfc  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::detail::thread_data<StatusThread>
0009f988  w   DO .rodata	0000004a  Base        typeinfo name for boost::log::v2_mt_posix::aux::visible_type<std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > >
0003dcbc  w   DF .text	000000ac  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_year> >::~clone_impl()
000b21f8  w   DO .data.rel.ro	00000008  Base        VTT for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::thread_resource_error> >
0006d304  w   DF .text	00000190  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::lock_error> >::clone() const
0006d8b4  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_month> >::clone() const
0007ca80 g    DF .text	00000038  Base        WaitForHeatersAtTarget
00000000      DO *UND*	00000000  GLIBCXX_3.4 vtable for std::basic_ios<char, std::char_traits<char> >
000b1a08  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::log::v2_mt_posix::sinks::basic_sink_frontend
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::imbue(std::locale const&)
00064610  w   DF .text	000001f0  Base        boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>::basic_formatting_sink_frontend(bool)
00061c78  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_month> >::~clone_impl()
00062668  w   DF .text	0000008c  Base        boost::exception_detail::error_info_injector<boost::gregorian::bad_year>::~error_info_injector()
0009e634  w   DO .rodata	00000025  Base        typeinfo name for boost::log::v2_mt_posix::sinks::sink
0003e3a4  w   DF .text	00000034  Base        boost::bad_lexical_cast::~bad_lexical_cast()
000b1a28  w   DO .data.rel.ro	00000020  Base        typeinfo for boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> >
0009f080  w   DO .rodata	00000047  Base        typeinfo name for boost::exception_detail::error_info_injector<boost::condition_error>
0009e80c  w   DO .rodata	0000001d  Base        typeinfo name for boost::thread_interrupted
00045dbc g    DF .text	000000d8  Base        HeaterManager::HeatersAtTarget(unsigned char, bool)
00000000      DF *UND*	00000000              Json::ValueIteratorBase::increment()
0007c488 g    DF .text	00000014  Base        ResetExtrusionDistance
0004bd50 g    DF .text	00000028  Base        BronxToolheadManager::RetrievePosition()
000894e8 g    DF .text	00000214  Base        SimpleRotatingLogger::Update(bool)
00000000      DO *UND*	00000000              vtable for Json::StyledWriter
000832ec  w   DF .text	000000f8  Base        boost::unique_lock<boost::mutex>::try_lock()
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_ifstream<char, std::char_traits<char> >::close()
000453e4  w   DF .text	000000a4  Base        boost::condition_error::~condition_error()
000620f4  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_year>::~error_info_injector()
0003f37c  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<std::runtime_error> >::rethrow() const
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::sinks::text_file_backend::construct(boost::filesystem::path const&, std::_Ios_Openmode, unsigned long long, boost::log::v2_mt_posix::aux::light_function<bool ()> const&, bool)
0007cbf4 g    DF .text	00000020  Base        SetExtruderDelay
0003940c g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::FilamentIsPresent()
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::string::_M_leak_hard()
0003f674  w   DF .text	00000030  Base        boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> >*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> > > >::dispose()
00089038 g    DF .text	0000007c  Base        AccelerationManagerImpl::ScaleStartSpeed(acceleration::Block&, float)
00094dcc  w   DO .rodata	0000003a  Base        typeinfo name for boost::log::v2_mt_posix::attributes::counter<unsigned int>::impl_inc
000b1aa0  w   DO .data.rel.ro	00000008  Base        typeinfo for boost::log::v2_mt_posix::aux::visible_type<log_obj>
00082048 g    DF .text	00000058  Base        L3RAMMap::BufferPosition(int, unsigned int)
0007ca48 g    DF .text	00000038  Base        WaitForHeatersAtLeastTarget
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_streambuf<char, std::char_traits<char> >::pbackfail(int)
0007c5a8 g    DF .text	0000003c  Base        GetToolheadFirmwareVersion
000b25c0  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::lock_error
0003a6c8 g    DF .text	000000a0  Base        Machine::ClearZPauseMm(float)
0004799c g    DF .text	00000010  Base        Machine::Heat()
000b1dc8  w   DO .data.rel.ro	00000054  Base        vtable for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::condition_error> >
000b2348  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::gregorian::bad_day_of_year
0008e938 g    DF .text	00000178  Base        libstepper::GetStatusFlags(machine::AxisName)
0003db5c  w   DF .text	00000008  Base        boost::log::v2_mt_posix::aux::light_function<bool (boost::log::v2_mt_posix::attribute_value_set const&)>::impl<boost::log::v2_mt_posix::filter::default_filter>::invoke_impl(boost::log::v2_mt_posix::aux::light_function<bool (boost::log::v2_mt_posix::attribute_value_set const&)>::impl_base*, boost::log::v2_mt_posix::attribute_value_set const&)
0004fb30 g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::~BronxToolheadManager()
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::string::replace(unsigned int, unsigned int, char const*, unsigned int)
00045294  w   DF .text	000000a4  Base        boost::thread_resource_error::~thread_resource_error()
00089a70 g    DF .text	000000e8  Base        AccelerationManagerImpl::SmoothTriangleMove(acceleration::Block&, std::vector<acceleration::ModifiedJerkFunctor, std::allocator<acceleration::ModifiedJerkFunctor> > const&)
00000000      DF *UND*	00000000              Json::Value::operator[](int) const
00000000      DO *UND*	00000000  GLIBCXX_3.4 typeinfo for std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >
0003b19c g    DF .text	00000100  Base        Machine::GetExtendedToolheadSelfCheckResults(unsigned char, char*, unsigned short*) const
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::string::compare(char const*) const
0007cbd4 g    DF .text	00000020  Base        ToggleToolheadSyncing
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_filebuf<char, std::char_traits<char> >::close()
0004f29c g    DF .text	0000001c  Base        common::Direction(float)
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::__basic_file<char>::is_open() const
0007cfac g    DF .text	00000014  Base        DisableZPause
00040194  w   DF .text	0000003c  Base        boost::log::v2_mt_posix::aux::basic_ostringstreambuf<char, std::char_traits<char>, std::allocator<char> >::~basic_ostringstreambuf()
0007c584 g    DF .text	00000024  Base        ProgramToolhead
0003f8e8  w   DF .text	00000008  Base        non-virtual thunk to boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> >::try_lock()
000b1ab0  w   DO .data.rel.ro	00000054  Base        vtable for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_year> >
0004ef0c g    DF .text	00000014  Base        gpio::GPIO::GPIO(int, int)
0009e5f0  w   DO .rodata	00000043  Base        typeinfo name for boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<wchar_t>
00080c18  w   DF .text	00000300  Base        boost::log::v2_mt_posix::sources::aux::logger_singleton<log_obj>::construct_logger()
0009434c  w   DO .rodata	00000008  Base        typeinfo name for Heater
000b3efc g    D  .data	00000000  Base        _edata
0009518c  w   DO .rodata	0000008c  Base        typeinfo name for boost::log::v2_mt_posix::sources::basic_logger<char, boost::log::v2_mt_posix::sources::severity_channel_logger<boost::log::v2_mt_posix::trivial::severity_level, std::string>, boost::log::v2_mt_posix::sources::single_thread_model>
000b2890  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::log::v2_mt_posix::aux::basic_ostringstreambuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
000b22fc  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::gregorian::bad_day_of_month
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_ifstream<char, std::char_traits<char> >::~basic_ifstream()
0003e17c  w   DF .text	00000034  Base        boost::bad_function_call::~bad_function_call()
0009e6b4  w   DO .rodata	0000004c  Base        typeinfo name for boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::text_file_backend>
00000000      DO *UND*	00000000  GLIBCXX_3.4 std::string::_Rep::_S_empty_rep_storage
00049ec4 g    DF .text	00000050  Base        ToolheadManager::SaveCurrentCommand()
000621c8  w   DF .text	00000084  Base        boost::exception_detail::error_info_injector<boost::gregorian::bad_weekday>::~error_info_injector()
0004a088 g    DF .text	00000008  Base        ToolheadManager::MightBlock() const
00093d84 g    DF .text	00000310  Base        __prussdrv_memmap_init
000b28b0  w   DO .data.rel.ro	00000008  Base        typeinfo for boost::log::v2_mt_posix::aux::visible_type<std::string>
000554c4 g    DF .text	0000003c  Base        DebugGPIO::ToggleGpio(int, bool)
0007c368 g    DF .text	00000014  Base        ClearAllBuffers
000404e8  w   DF .text	00000024  Base        boost::detail::tss_cleanup_function::~tss_cleanup_function()
00091ca4 g    DF .text	000003a4  Base        AccelerationManagerImpl::AddMove(std::vector<float, std::allocator<float> > const&, float, float, int)
000517bc g    DF .text	00000130  Base        ToolheadProgrammer::GetHexFile(char const*, ToolheadProgrammer::Target)
0004bee4 g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::QueryRawHESVal()
00044180  w   DF .text	0000001c  Base        std::ctype<char>::do_narrow(char const*, char const*, char, char*) const
0008c808 g    DF .text	00000038  Base        L3RAMMap::AxisBuffer::AxisBuffer(unsigned char*)
000b4e88  w   DO .bss	00000004  Base        boost::log::v2_mt_posix::aux::lazy_singleton<boost::log::v2_mt_posix::sources::aux::logger_singleton<telem_obj>, boost::shared_ptr<boost::log::v2_mt_posix::sources::aux::logger_holder<boost::log::v2_mt_posix::sources::severity_channel_logger<boost::log::v2_mt_posix::trivial::severity_level, std::string> > > >::get()::_boost_log_once_block_flag_43
000b0e80  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::posix_time::ptime
00046ccc g    DF .text	0000019c  Base        BirdwingTransceiver::GetPositionCorrection(std::vector<AbstractTransceiver::ConvertedMove, std::allocator<AbstractTransceiver::ConvertedMove> > const&) const
0003e554  w   DF .text	00000084  Base        boost::exception_detail::error_info_injector<boost::bad_weak_ptr>::~error_info_injector()
0007ce7c g    DF .text	00000060  Base        Move
00088e0c g    DF .text	0000014c  Base        AccelerationManagerImpl::AdjustExtrusionSpeeds(acceleration::Move&)
000403e0  w   DF .text	00000024  Base        boost::detail::sp_counted_impl_pd<boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<wchar_t>::formatting_context>::delete_data*, boost::detail::do_heap_delete<boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<wchar_t>::formatting_context>::delete_data> >::~sp_counted_impl_pd()
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_ios<char, std::char_traits<char> >::imbue(std::locale const&)
00080990 g    DF .text	00000268  Base        acceleration::Block::initialize(std::vector<float, std::allocator<float> >, std::vector<float, std::allocator<float> >, std::vector<float, std::allocator<float> >, float, float, bool, int)
00000000      DF *UND*	00000000  GCC_3.5     __aeabi_fcmple
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_M_destroy(std::allocator<wchar_t> const&)
00040808  w   DF .text	00000034  Base        boost::log::v2_mt_posix::intrusive_ref_counter::~intrusive_ref_counter()
0006d780  w   DF .text	00000134  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_month> >::clone() const
0004e59c g    DF .text	00000560  Base        gpio::GPIO::SetDirection(bool)
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::terminate()
00049994 g    DF .text	000001a8  Base        ToolheadManager::GetPrintLogTitles() const
0009f830 g    DO .rodata	00000016  Base        typeinfo name for BirdwingTransceiver
00065364 g    DF .text	00000014  Base        ToolheadProgrammer::~ToolheadProgrammer()
00000000      DF *UND*	00000000  GLIBC_2.4   free
0003e140  w   DF .text	0000003c  Base        boost::bad_function_call::~bad_function_call()
0007cf00 g    DF .text	00000044  Base        HomeAxis
0004be3c g    DF .text	0000002c  Base        BronxToolheadManager::SetLEDBrightness(unsigned char)
000b1150 g    DO .data.rel.ro	00000010  Base        vtable for BronxToolheadManager::BronxSelfCheckState
0006acb4  w   DF .text	000000dc  Base        std::_Deque_base<char, std::allocator<char> >::_Deque_base()
000936fc g    DF .text	000000dc  Base        prussdrv_get_virt_addr
0003e880  w   DF .text	000000e4  Base        boost::log::v2_mt_posix::aux::basic_ostringstreambuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::xsputn(wchar_t const*, int)
00049fcc g    DF .text	00000008  Base        ToolheadManager::IsInitialized() const
0003e964  w   DF .text	00000074  Base        boost::log::v2_mt_posix::aux::basic_ostringstreambuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::sync()
00045c10 g    DF .text	00000014  Base        Machine::LoadTemperatureSettings(short const*)
000b2540  w   DO .data.rel.ro	00000020  Base        vtable for boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> >*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> > > >
00040160  w   DF .text	00000034  Base        boost::log::v2_mt_posix::aux::basic_ostringstreambuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::~basic_ostringstreambuf()
000a098c  w   DO .rodata	00000029  Base        typeinfo name for boost::log::v2_mt_posix::attribute::impl
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::ios_base::ios_base()
00000000      DF *UND*	00000000  GLIBC_2.4   modff
0004be70 g    DF .text	0000003c  Base        BronxToolheadManager::ToggleSyncing(bool)
0009f02c  w   DO .rodata	00000051  Base        typeinfo name for boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_year>
000b2418  w   DO .data.rel.ro	00000014  Base        vtable for boost::system::system_error
00000000      DO *UND*	00000000  GLIBCXX_3.4 vtable for std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >
00099228  w   DO .rodata	00000031  Base        typeinfo name for boost::exception_detail::error_info_container
00070c54 g    DF .text	00000068  Base        StepperConversions::StepperConversions(std::shared_ptr<AbstractTransceiver>)
00040d30 g    DF .text	0000025c  Base        Machine::ChangeHesSampleRate(unsigned char, float, float*)
000443f4  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::lock_error> >::~clone_impl()
0007c6e8 g    DF .text	00000058  Base        GetMoveBufferPosition
000891cc g    DF .text	00000018  Base        Machine::AccelerationBufferSize() const
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_streambuf<char, std::char_traits<char> >::imbue(std::locale const&)
00093498 g    DF .text	0000003c  Base        prussdrv_pru_disable
00000000      DF *UND*	00000000  GLIBC_2.4   fseek
000b4e64  w   DO .bss	00000004  Base        boost::array<std::pair<boost::log::v2_mt_posix::type_info_wrapper, void*>, 2u> const& boost::log::v2_mt_posix::aux::type_sequence_dispatcher<boost::mpl::vector2<std::string, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > > >::get_dispatching_map<boost::log::v2_mt_posix::binder1st<boost::log::v2_mt_posix::output_fun, boost::log::v2_mt_posix::basic_formatting_ostream<char, std::char_traits<char>, std::allocator<char> >&> >()::_boost_log_once_block_flag_160
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_streambuf<char, std::char_traits<char> >::uflow()
00094fbc  w   DO .rodata	00000054  Base        typeinfo name for std::_Sp_counted_ptr<acceleration::FanDutyCommand*, (__gnu_cxx::_Lock_policy)1>
00065bd0 g    DF .text	00000018  Base        Machine::ClearPosition()
0007d1ec g    DF .text	00000020  Base        ImmediateToolheadError
0004440c  w   DF .text	000000f0  Base        boost::exception_detail::error_info_injector<boost::lock_error>::~error_info_injector()
0008113c g    DF .text	0000006c  Base        libstepper::UpdatePruLog()
00000000      DF *UND*	00000000              Json::Value::isDouble() const
000991b0  w   DO .rodata	00000040  Base        typeinfo name for boost::log::v2_mt_posix::attributes::attribute_value_impl<std::string>
0003e7fc  w   DF .text	00000084  Base        boost::log::v2_mt_posix::sinks::basic_sink_frontend::~basic_sink_frontend()
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char>::basic_text_ostream_backend()
00000000      DF *UND*	00000000  GLIBC_2.4   atanf
000889c4  w   DF .text	0000009c  Base        boost::condition_variable::~condition_variable()
000405ec  w   DF .text	00000008  Base        boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> >*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> > > >::get_untyped_deleter()
0008e1a4 g    DF .text	00000004  Base        BirdwingTransceiver::Halted() const
0003e340  w   DF .text	00000028  Base        boost::log::v2_mt_posix::attribute_value::impl::detach_from_thread()
0009c2a0 g    DO .rodata	0000002e  Base        typeinfo name for BronxToolheadManager::BronxSelfCheckState
0007eb84 g    DF .text	0000002c  Base        accel_log::telem_channel_name()
000395d0 g    DF .text	00000028  Base        BronxToolheadManager::LoadAccelSettings(unsigned char, unsigned char, int, unsigned char, unsigned char)
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::reserve(unsigned int)
0004caac g    DF .text	000000f0  Base        BronxToolheadManager::CheckToolEEPROMVersion()
0009ed1c  w   DO .rodata	0000005a  Base        typeinfo name for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::condition_error> >
0003df08  w   DF .text	000000ac  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_month> >::~clone_impl()
000b1140 g    DO .data.rel.ro	00000010  Base        vtable for ChamberToolheadManager::ChamberSelfCheckState
00045294  w   DF .text	000000a4  Base        boost::thread_resource_error::~thread_resource_error()
0009f1e0  w   DO .rodata	00000015  Base        typeinfo name for boost::lock_error
00089e68 g    DF .text	0000021c  Base        Machine::HomingDone(machine::AxisName)
000b2d08  w   DO .data.rel.ro	00000020  Base        vtable for boost::log::v2_mt_posix::attribute_value::impl
00052130 g    DF .text	00000008  Base        Machine::PowerMonitorClose()
00095134  w   DO .rodata	00000019  Base        typeinfo name for acceleration::Command
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::ios_base::~ios_base()
00064148  w   DF .text	00000004  Base        boost::log::v2_mt_posix::aux::light_function<bool (boost::log::v2_mt_posix::attribute_value_set const&)>::impl<boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_and, boost::proto::argsns_::list2<boost::phoenix::actor<boost::log::v2_mt_posix::expressions::aux::unary_function_terminal<boost::log::v2_mt_posix::expressions::has_attribute<std::string> > >, boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::log::v2_mt_posix::expressions::attribute_actor<std::string, boost::log::v2_mt_posix::fallback_to_none, tag::tag_attr, boost::phoenix::actor>, boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<char const*>, 0l> > >, 2l> > >, 2l> > >::destroy_impl(boost::log::v2_mt_posix::aux::light_function<bool (boost::log::v2_mt_posix::attribute_value_set const&)>::impl_base*)
00088a84 g    DF .text	00000120  Base        AccelerationManagerImpl::ScaleToDirection(float const*, float const*, float*)
000b1fe8  w   DO .data.rel.ro	00000020  Base        typeinfo for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<std::out_of_range> >
0007c37c g    DF .text	00000024  Base        FindKnobZ
00000000      DF *UND*	00000000  GCC_3.3.1   __gcc_personality_v0
00000000      DF *UND*	00000000  GLIBCXX_3.4.11 std::chrono::system_clock::now()
00054778 g    DF .text	00000108  Base        InterfaceLED::Wake()
0003ffd4  w   DF .text	00000038  Base        boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t>*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> > >::get_deleter(std::type_info const&)
000827b0  w   DF .text	00000040  Base        std::set<machine::AxisName, std::less<machine::AxisName>, std::allocator<machine::AxisName> >::~set()
0003ec10  w   DF .text	000000d4  Base        boost::log::v2_mt_posix::aux::basic_ostringstreambuf<char, std::char_traits<char>, std::allocator<char> >::xsputn(char const*, int)
00000000      DF *UND*	00000000              Json::Value::isMember(std::string const&) const
0005af18 g    DF .text	0000011c  Base        HexParser::char2binary(char)
000b2600  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t>*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> > >
0005e7f8 g    DF .text	00000044  Base        ToolheadManager::SelfCheck()
000b1f78  w   DO .data.rel.ro	00000024  Base        vtable for boost::exception_detail::error_info_injector<boost::gregorian::bad_month>
00069fd0 g    DF .text	00000384  Base        AccelerationManagerImpl::~AccelerationManagerImpl()
00048f90 g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::GetRawHESVal(bool*, short*)
00095218  w   DO .rodata	000000ab  Base        typeinfo name for boost::log::v2_mt_posix::sources::basic_channel_logger<boost::log::v2_mt_posix::sources::basic_logger<char, boost::log::v2_mt_posix::sources::severity_channel_logger<boost::log::v2_mt_posix::trivial::severity_level, std::string>, boost::log::v2_mt_posix::sources::single_thread_model>, std::string>
00045fe0 g    DF .text	000002e8  Base        BronxToolheadManager::ToolSelfCheckState::stringify_results()
000b28c0  w   DO .data.rel.ro	00000040  Base        vtable for boost::log::v2_mt_posix::aux::basic_ostringstreambuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
00000000      DF *UND*	00000000  GCC_3.5     __aeabi_i2f
0004739c g    DF .text	000000d4  Base        HeaterManager::HeaterManager()
000b0f84  w   DO .data.rel.ro	00000020  Base        typeinfo for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<std::length_error> >
0004f254 g    DF .text	00000024  Base        operator-(q14 const&, q14 const&)
000899b8 g    DF .text	00000048  Base        SimpleRotatingLogger::SimpleRotatingLogger(unsigned char, int)
00085fb4  w   DF .text	0000000c  Base        void boost::log::v2_mt_posix::type_dispatcher::callback_base::trampoline<boost::log::v2_mt_posix::aux::value_ref_initializer<boost::log::v2_mt_posix::value_ref<std::string, void> >, std::string>(void*, std::string const&)
00045a54 g    DF .text	0000013c  Base        HeaterManager::AddHeater(std::shared_ptr<Heater>)
0005ef68 g    DF .text	000000d4  Base        Machine::GetToolId(unsigned char, unsigned char*) const
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::__throw_bad_alloc()
0009ede8  w   DO .rodata	00000055  Base        typeinfo name for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::lock_error> >
000b13b0 g    DO .data.rel.ro	00000014  Base        vtable for acceleration::TemperatureCommand
000535cc g    DF .text	00000114  Base        PowerMonitor::SetConfigurationRegister()
00069cc4 g    DF .text	000002e0  Base        AccelerationManagerImpl::ClearBuffer()
0003e488  w   DF .text	000000b4  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_weak_ptr> >::~clone_impl()
000b1950  w   DO .data.rel.ro	00000020  Base        vtable for boost::log::v2_mt_posix::sinks::basic_sink_frontend
00000000      DF *UND*	00000000              Json::Reader::getFormattedErrorMessages() const
00000000      DF *UND*	00000000  GLIBCXX_3.4.14 std::__throw_bad_function_call()
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::attribute_name::get_id_from_string(char const*)
0007c49c g    DF .text	00000020  Base        ToggleExtrusionPercentUpdate
0007cb54 g    DF .text	00000024  Base        SetFanDuty
00045f54 g    DF .text	0000001c  Base        Machine::AnyHeaterAboveTemp(unsigned short, bool*) const
000448f8  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::condition_error> >::~clone_impl()
000b4e4c  w   DO .bss	00000004  Base        boost::array<std::pair<boost::log::v2_mt_posix::type_info_wrapper, void*>, 2u> const& boost::log::v2_mt_posix::aux::type_sequence_dispatcher<boost::mpl::vector2<std::string, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > > >::get_dispatching_map<boost::log::v2_mt_posix::binder1st<boost::log::v2_mt_posix::output_fun, boost::log::v2_mt_posix::basic_formatting_ostream<char, std::char_traits<char>, std::allocator<char> >&> >()::pinstance
00000000      DF *UND*	00000000  GLIBC_2.4   strncmp
000b0f20  w   DO .data.rel.ro	00000008  Base        typeinfo for boost::log::v2_mt_posix::aux::visible_type<unsigned int>
0008923c g    DF .text	00000010  Base        AccelerationManager::ToggleExpendBuffer(bool)
00055e4c  w   DF .text	00000008  Base        non-virtual thunk to boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::text_file_backend>::lock()
0003efa4  w   DF .text	0000009c  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_month> >::rethrow() const
00053c48 g    DF .text	00000050  Base        InterfaceLED::SetKnobBlink(float)
00055754  w   DF .text	00000094  Base        boost::system::system_error::system_error(boost::system::system_error const&)
00041640 g    DF .text	000001e8  Base        Machine::ToggleExtrusionPercentUpdate(bool)
0006155c  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::condition_error> >::rethrow() const
00047918 g    DF .text	00000010  Base        Machine::Cool()
000b25f4  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::detail::sp_counted_impl_pd<boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<wchar_t>::formatting_context>::delete_data*, boost::detail::do_heap_delete<boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<wchar_t>::formatting_context>::delete_data> >
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::sinks::text_file_backend::~text_file_backend()
00053900 g    DF .text	00000348  Base        InterfaceLED::SetBlink(float, InterfaceLED::Channel)
00044f58  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::lock_error> >::~clone_impl()
00061dd4  w   DF .text	00000070  Base        boost::exception_detail::error_info_injector<std::runtime_error>::~error_info_injector()
000b0d14  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::log::v2_mt_posix::attributes::constant<boost::log::v2_mt_posix::aux::id<boost::log::v2_mt_posix::aux::process> >::impl
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_ostream<char, std::char_traits<char> >::basic_ostream(std::basic_streambuf<char, std::char_traits<char> >*)
00089d64 g    DF .text	00000018  Base        Machine::MoveBufferEmpty(bool, bool*) const
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::string::assign(char const*, unsigned int)
00000000      DF *UND*	00000000              Json::Value::operator[](char const*)
00094094 g    DF .text	0000004c  Base        prussdrv_open
0004c2c0 g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::Idle()
000689e0 g    DF .text	000003ac  Base        AccelerationManagerImpl::QueueFilamentFanDuty(unsigned char, float, unsigned int)
000743c4  w   DF .text	0000013c  Base        void boost::algorithm::detail::insert<std::string, std::_Deque_iterator<char, char&, char*> >(std::string&, std::string::iterator, std::_Deque_iterator<char, char&, char*>, std::_Deque_iterator<char, char&, char*>)
000b1b20  w   DO .data.rel.ro	00000008  Base        VTT for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_month> >
000b2500  w   DO .data.rel.ro	00000020  Base        vtable for boost::detail::sp_counted_impl_pd<std::basic_ostream<wchar_t, std::char_traits<wchar_t> >*, boost::log::v2_mt_posix::empty_deleter>
00040540  w   DF .text	00000024  Base        boost::log::v2_mt_posix::sinks::sink::~sink()
000b21b8  w   DO .data.rel.ro	00000024  Base        vtable for boost::exception_detail::error_info_injector<boost::lock_error>
000a0958  w   DO .rodata	00000031  Base        typeinfo name for boost::log::v2_mt_posix::intrusive_ref_counter
00082a84  w   DF .text	0000007c  Base        boost::log::v2_mt_posix::basic_formatting_ostream<char, std::char_traits<char>, std::allocator<char> >::~basic_formatting_ostream()
0004fafc g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::~BronxToolheadManager()
00045098  w   DF .text	000000ac  Base        boost::lock_error::~lock_error()
00038b50 g    DF .text	00000008  Base        NullTransceiver::SetPosition(machine::AxisName, int)
0004f104 g    DF .text	00000010  Base        std::abs(q14 const&)
000833e4  w   DF .text	000001a4  Base        void boost::log::v2_mt_posix::sinks::basic_sink_frontend::flush_backend_impl<boost::mutex, boost::log::v2_mt_posix::sinks::text_file_backend>(boost::mutex&, boost::log::v2_mt_posix::sinks::text_file_backend&, mpl_::bool_<true>)
000b0ca4  w   DO .data.rel.ro	00000008  Base        typeinfo for boost::noncopyable_::noncopyable
00089114 g    DF .text	00000018  Base        Machine::AccelerationBufferEmpty(bool*) const
00000000      DF *UND*	00000000  GCC_3.5     __aeabi_dmul
000b2520  w   DO .data.rel.ro	00000020  Base        vtable for boost::detail::sp_counted_impl_pd<std::ostream*, boost::log::v2_mt_posix::empty_deleter>
00000000      DF *UND*	00000000  CXXABI_1.3  __cxa_begin_catch
0003aca4 g    DF .text	0000006c  Base        NullTransceiver::GetRadices() const
000b0d94  w   DO .data.rel.ro	00000008  Base        typeinfo for acceleration::Command
0005bdc8 g    DF .text	000005fc  Base        ToolheadManager::GetResponse(unsigned char)
0004a030 g    DF .text	00000050  Base        ToolheadManager::ClearBuffer()
000479d8 g    DF .text	00000280  Base        BronxToolheadManager::UpdateCurrentUID(unsigned int)
0009eab4  w   DO .rodata	0000001d  Base        typeinfo name for boost::gregorian::bad_month
000b0dd4  w   DO .data.rel.ro	00000008  Base        typeinfo for boost::log::v2_mt_posix::sources::aux::logger_holder_base
0007cb1c g    DF .text	00000014  Base        Cool
00000000      DF *UND*	00000000  GCC_3.5     __aeabi_uidivmod
0006e554 g    DF .text	00000054  Base        AccelerationManagerImpl::LimitEndSpeed(acceleration::Block&)
000b0e2c  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::log::v2_mt_posix::attributes::attribute_value_impl<unsigned int>
0003f38c  w   DF .text	00000068  Base        boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> >*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> > > >::~sp_counted_impl_pd()
0006d9ec  w   DF .text	00000134  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_weekday> >::clone() const
00000000      DO *UND*	00000000  GLIBCXX_3.4 VTT for std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >
0006be20 g    DF .text	000001fc  Base        BronxToolheadManager::VerifyToolUsageStatsRetrieved(unsigned char) const
0003f0ec  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_year> >::rethrow() const
00000000      DF *UND*	00000000  GLIBC_2.4   pthread_join
00070fbc g    DF .text	0000001c  Base        UnitConverter::SecondsToTicks(machine::AxisName, float) const
000b11b8  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<wchar_t>::formatting_context>::delete_data
0003a5a4 g    DF .text	0000007c  Base        NullTransceiver::Move(std::vector<AbstractTransceiver::ConvertedMove, std::allocator<AbstractTransceiver::ConvertedMove> > const&)
0005e8b4 g    DF .text	00000130  Base        ChamberToolheadManager::SetFanDuty(float, unsigned char)
0009cedc g    DO .rodata	0000001d  Base        typeinfo name for acceleration::FanCommand
00075a7c g    DF .text	00000df8  Base        ToolheadProgrammer::Program(std::unique_ptr<HAL::ToolheadSPI, std::default_delete<HAL::ToolheadSPI> > const&)
00060394 g    DF .text	000000d8  Base        BirdwingTransceiver::~BirdwingTransceiver()
000b0dbc  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::log::v2_mt_posix::sources::basic_severity_logger<boost::log::v2_mt_posix::sources::basic_channel_logger<boost::log::v2_mt_posix::sources::basic_logger<char, boost::log::v2_mt_posix::sources::severity_channel_logger<boost::log::v2_mt_posix::trivial::severity_level, std::string>, boost::log::v2_mt_posix::sources::single_thread_model>, std::string>, boost::log::v2_mt_posix::trivial::severity_level>
00000000      DF *UND*	00000000              Json::Value::Value(Json::ValueType)
000b1d50  w   DO .data.rel.ro	00000054  Base        vtable for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_year> >
000405d0  w   DF .text	00000004  Base        boost::detail::sp_counted_impl_pd<std::basic_ostream<wchar_t, std::char_traits<wchar_t> >*, boost::log::v2_mt_posix::empty_deleter>::dispose()
0003db64  w   DF .text	00000024  Base        boost::log::v2_mt_posix::sinks::file::collector::~collector()
000b2258  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::gregorian::bad_year
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_iostream<char, std::char_traits<char> >::basic_iostream()
000b4d54 g    DO .bss	00000018  Base        all_axes_
000402d8  w   DF .text	00000024  Base        boost::detail::sp_counted_impl_pd<std::ostream*, boost::log::v2_mt_posix::empty_deleter>::~sp_counted_impl_pd()
00048a54 g    DF .text	000002a0  Base        Machine::GetRawHesValue(unsigned char, bool*, short*)
0007cffc g    DF .text	00000020  Base        ClearZPauseMm
000b0f58  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::log::v2_mt_posix::sources::severity_channel_logger<boost::log::v2_mt_posix::trivial::severity_level, std::string>
00094968  w   DO .rodata	00000068  Base        typeinfo name for boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::text_file_backend> >
0003e5e0  w   DF .text	0000008c  Base        boost::exception_detail::error_info_injector<boost::bad_weak_ptr>::~error_info_injector()
0004aca4 g    DF .text	000001f8  Base        JsonTools::ReadFileString(char const*, Json::Value*)
0008dd54 g    DF .text	00000450  Base        libstepper::CheckAxesComplete()
00000000      DF *UND*	00000000              Json::Value::isInt() const
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::setbuf(wchar_t*, int)
00069b58 g    DF .text	00000124  Base        AccelerationManagerImpl::TestExtrudersMove(acceleration::Block const&)
00087e3c g    DF .text	00000b88  Base        Machine::Iterate(machine::MachineResponseStatus*)
00094324  w   DO .rodata	00000013  Base        typeinfo name for MachineInterface
00065f90 g    DF .text	00000008  Base        Machine::IsInitialized() const
0006e5a8 g    DF .text	00000054  Base        AccelerationManagerImpl::LimitStartSpeed(acceleration::Block&)
0004beb4 g    DF .text	00000030  Base        BronxToolheadManager::QueryRawHESVal()
0007cd90 g    DF .text	0000002c  Base        GetRawHesValue
0008c640 g    DF .text	00000058  Base        libstepper::SetVref(machine::AxisName, bool)
00000000      DF *UND*	00000000  GCC_3.5     __aeabi_ui2f
00045bdc g    DF .text	00000034  Base        HeaterManager::LoadTemperatureSettings(short const*)
000408ec  w   DF .text	00000024  Base        boost::exception_detail::clone_base::~clone_base()
0004beac g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::ToggleSyncing(bool)
0009361c g    DF .text	000000e0  Base        prussdrv_get_phys_addr
0009ec94  w   DO .rodata	00000064  Base        typeinfo name for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_year> >
0008221c g    DF .text	00000078  Base        BirdwingTransceiver::SetPosition(machine::AxisName, int)
000542dc g    DF .text	00000008  Base        Machine::SetChamberColor(float, float, float, float)
0003fcdc  w   DF .text	00000034  Base        boost::gregorian::bad_year::~bad_year()
00000000      DF *UND*	00000000              boost::detail::get_tss_data(void const*)
0006e354 g    DF .text	0000019c  Base        AccelerationMath::GetAxisAccelerationRates(std::vector<float, std::allocator<float> > const&, float, float, std::vector<float, std::allocator<float> > const&)
00052c4c g    DF .text	0000018c  Base        I2C::SetAddress(unsigned char)
0007c8a4 g    DF .text	00000014  Base        Abort
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::string::insert(unsigned int, std::string const&, unsigned int, unsigned int)
00062790 g    DF .text	000012b8  Base        Logging::Initialize(char const*, char const*, char const*, bool)
00064000  w   DF .text	0000000c  Base        void boost::log::v2_mt_posix::type_dispatcher::callback_base::trampoline<boost::log::v2_mt_posix::aux::value_ref_initializer<boost::log::v2_mt_posix::value_ref<boost::log::v2_mt_posix::trivial::severity_level, boost::log::v2_mt_posix::trivial::tag::severity> >, boost::log::v2_mt_posix::trivial::severity_level>(void*, boost::log::v2_mt_posix::trivial::severity_level const&)
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_ios<wchar_t, std::char_traits<wchar_t> >::imbue(std::locale const&)
000404b4  w   DF .text	00000034  Base        boost::detail::tss_cleanup_function::~tss_cleanup_function()
000b2560  w   DO .data.rel.ro	00000020  Base        vtable for boost::detail::sp_counted_impl_pd<boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>::formatting_context>::delete_data*, boost::detail::do_heap_delete<boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>::formatting_context>::delete_data> >
000616c4  w   DF .text	000000c0  Base        std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::~basic_stringbuf()
00067c48  w   DF .text	000000e8  Base        std::vector<std::string, std::allocator<std::string> >::~vector()
0008910c g    DF .text	00000008  Base        Machine::AccelerationBufferEmpty() const
0005d21c g    DF .text	00001388  Base        BronxToolheadManager::ProcessStatusBytes()
000b0d70  w   DO .data.rel.ro	00000018  Base        typeinfo for std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)1>
0006955c g    DF .text	00000008  Base        AccelerationManager::QueueFilamentFan(unsigned char, bool, unsigned int)
0004ee24 g    DF .text	000000e8  Base        HAL::Endstop::Endstop(int, HAL::Endstop::EndstopType, bool)
000864b0 g    DF .text	00000098  Base        PRUMap::ClearPosition()
00085fc0  w   DF .text	000000a4  Base        boost::log::v2_mt_posix::aux::light_function<bool (boost::log::v2_mt_posix::attribute_value_set const&)>::impl<boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_and, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater_equal, boost::proto::argsns_::list2<boost::log::v2_mt_posix::expressions::attribute_actor<boost::log::v2_mt_posix::trivial::severity_level, boost::log::v2_mt_posix::fallback_to_none, boost::log::v2_mt_posix::trivial::tag::severity, boost::phoenix::actor>, boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::log::v2_mt_posix::trivial::severity_level>, 0l> > >, 2l> >, boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::not_equal_to, boost::proto::argsns_::list2<boost::log::v2_mt_posix::expressions::attribute_actor<std::string, boost::log::v2_mt_posix::fallback_to_default<std::string>, void, boost::phoenix::actor>, boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<char [10]>, 0l> > >, 2l> > >, 2l> > >::clone_impl(boost::log::v2_mt_posix::aux::light_function<bool (boost::log::v2_mt_posix::attribute_value_set const&)>::impl_base const*)
000878e8 g    DF .text	0000000c  Base        BirdwingTransceiver::GetAvailableSpace(machine::AxisName, int*)
0006e4f0 g    DF .text	00000008  Base        acceleration::Block::EnforceExtruderSpeed() const
0007daa4  w   DF .text	000003e8  Base        boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> >::consume(boost::log::v2_mt_posix::record_view const&)
0007cad8 g    DF .text	00000020  Base        AccelerationBufferEmpty
0003ef94  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_year> >::rethrow() const
000b0c08  w   DO .data.rel.ro	00000008  Base        typeinfo for Heater
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)
000538f8 g    DF .text	00000008  Base        Machine::SetMooseChamberBrightness(float)
00065fb0 g    DF .text	000000b0  Base        Machine::InitializeParserInterface(BirdWing::ParserInterface*)
00000000      DF *UND*	00000000  CXXABI_1.3  __cxa_allocate_exception
00045c40 g    DF .text	00000104  Base        HeaterManager::GetProgressPercent(short*)
0004c05c g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::UpdateToolRefurbCount(bool)
0007d144 g    DF .text	0000002c  Base        GetToolUsageStats
00044e20  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::thread_resource_error> >::~clone_impl()
0005e848 g    DF .text	00000048  Base        ChamberToolheadManager::SetHeaterDuty(float)
000935e0 g    DF .text	0000003c  Base        prussdrv_map_prumem
000435f0 g    DF .text	00000090  Base        Machine::LoadFilamentJamSettings(unsigned char, float)
0004c5e8 g    DF .text	000001fc  Base        BronxToolheadManager::ChangeHESSampleRate(float, float*)
00047168 g    DF .text	00000234  Base        HeaterManager::LoadWatchdogSettings(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
00055500 g    DF .text	00000054  Base        DebugGPIO::PulseGpio(int)
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::aux::this_process::get_id()
000b0da4  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::log::v2_mt_posix::sources::basic_logger<char, boost::log::v2_mt_posix::sources::severity_channel_logger<boost::log::v2_mt_posix::trivial::severity_level, std::string>, boost::log::v2_mt_posix::sources::single_thread_model>
0004c2c8 g    DF .text	000001b0  Base        BronxToolheadManager::ReadHESLog()
0007cb9c g    DF .text	00000024  Base        SetTemperatureTarget
00065d2c g    DF .text	0000005c  Base        Machine::ConvertUnits(float, MakerBot::AxisUnit)
00090ef0 g    DF .text	00000374  Base        accel_log::telem()
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::core::open_record(boost::log::v2_mt_posix::attribute_set const&)
000b4e74 g    DO .bss	00000004  Base        MemRegion::ref_count
00039428 g    DF .text	00000018  Base        BronxToolheadManager::ResetExtrusionDistance()
00000000      DF *UND*	00000000  GLIBC_2.4   printf
0007fbb0 g    DF .text	00000008  Base        Machine::Shutdown()
000b0ed8  w   DO .data.rel.ro	00000008  Base        typeinfo for boost::detail::do_heap_delete<boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>::formatting_context>::delete_data>
0007c5e4 g    DF .text	00000024  Base        LoadFilamentJamSettings
00055db4  w   DF .text	00000098  Base        boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::text_file_backend>::lock()
00000000      DF *UND*	00000000  GLIBC_2.4   strerror
000b2078  w   DO .data.rel.ro	00000020  Base        typeinfo for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<std::runtime_error> >
00000000      DF *UND*	00000000              Json::Value::~Value()
0004bd48 g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::SetPosition(int)
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t>::~basic_text_ostream_backend()
000616b4  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::thread_resource_error> >::rethrow() const
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_ios<char, std::char_traits<char> >::fill() const
0004efac g    DF .text	00000054  Base        operator<=(q14, q14)
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::xsgetn(wchar_t*, int)
00000000      DF *UND*	00000000  GLIBC_2.4   cosf
0008c7a8 g    DF .text	00000060  Base        libstepper::TimedPause(machine::AxisName, unsigned int, bool)
000b0d88  w   DO .data.rel.ro	0000000c  Base        typeinfo for std::_Sp_counted_ptr<acceleration::FanCommand*, (__gnu_cxx::_Lock_policy)1>
00000000      DF *UND*	00000000              Json::Value::asUInt() const
00086bfc g    DF .text	00000024  Base        libstepper::DebugReadL3Byte(int)
00080bf8  w   DF .text	00000020  Base        boost::shared_ptr<boost::log::v2_mt_posix::sources::aux::logger_holder<boost::log::v2_mt_posix::sources::severity_channel_logger<boost::log::v2_mt_posix::trivial::severity_level, std::string> > >::~shared_ptr()
000441c8  w   DF .text	0000010c  Base        boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>::formatting_context>::delete_data::operator()(void*)
00000000      DF *UND*	00000000  GLIBC_2.4   pthread_attr_setschedpolicy
000b2cf0  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::log::v2_mt_posix::attribute::impl
000b4f2c g    D  .bss	00000000  Base        __end__
00094bec  w   DO .rodata	00000045  Base        typeinfo name for boost::log::v2_mt_posix::aux::visible_type<boost::log::v2_mt_posix::aux::id<boost::log::v2_mt_posix::aux::process> >
00046e68 g    DF .text	00000150  Base        BirdwingTransceiver::GetTrapezoidPositionCorrection(std::array<std::vector<AbstractTransceiver::ConvertedMove, std::allocator<AbstractTransceiver::ConvertedMove> >, 3u> const&) const
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::string::insert(unsigned int, char const*)
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::__throw_length_error(char const*)
00076f80 g    DF .text	0000024c  Base        BronxToolheadManager::Program(char const*)
00095678  w   DO .rodata	0000002d  Base        typeinfo name for boost::detail::thread_data<StatusThread>
000b1080  w   DO .data.rel.ro	00000008  Base        typeinfo for boost::exception_detail::error_info_container
0004a0f8 g    DF .text	00000024  Base        Machine::SetToolheadIdleUpdatePeriod(unsigned char, float)
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::aux::default_attribute_names::message()
00071984 g    DF .text	00000148  Base        CreateBirdwingMachine
000b4d9c g    DO .bss	00000008  Base        DebugGPIO::debug_gpio_
0004c1a4 g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::Move(short, int, int, unsigned int, int)
000b0bf8  w   DO .data.rel.ro	00000008  Base        typeinfo for MachineInterface
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::push_back(wchar_t)
00072a40 g    DF .text	00000134  Base        AccelerationManager::AddMove(std::vector<float, std::allocator<float> > const&, float, float, int, std::vector<MakerBot::ToolpathTag, std::allocator<MakerBot::ToolpathTag> > const&)
0005565c  w   DF .text	000000f8  Base        boost::thread_exception::thread_exception(int, char const*)
0006516c  w   DF .text	000001b0  Base        boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> >::flush()
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::aux::default_attribute_names::channel()
00040894  w   DF .text	00000024  Base        boost::detail::sp_counted_base::~sp_counted_base()
00070f28 g    DF .text	00000044  Base        StepperConversions::SetPosition(machine::AxisName, float)
000b4da8  w   DO .bss	000000a4  Base        boost::detail::spinlock_pool<1>::pool_
000558c0  w   DF .text	0000009c  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<std::out_of_range> >::rethrow() const
0007992c g    DF .text	00000034  Base        AbstractTransceiver::ConvertedMove::ConvertedMove()
00045144  w   DF .text	000000a4  Base        boost::lock_error::~lock_error()
000b2354  w   DO .data.rel.ro	00000020  Base        typeinfo for boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_year>
00046bac g    DF .text	00000048  Base        BronxToolheadManager::BronxSelfCheckState::BronxSelfCheckState()
00000000      DF *UND*	00000000  GCC_3.5     __aeabi_i2d
0005edb8 g    DF .text	000000d4  Base        Machine::SyncStateConfirmed(unsigned char, bool*) const
0009caec  w   DO .rodata	0000007f  Base        typeinfo name for boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>::formatting_context>::delete_data
0008d550 g    DF .text	00000024  Base        libstepper::QuickPause(bool)
00079e34 g    DF .text	00000a14  Base        StepperConversions::MoveTrapezoid(std::tuple<acceleration::Move, acceleration::Move, acceleration::Move> const&, double*)
0003e470  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<std::out_of_range> >::~clone_impl()
0003e090  w   DF .text	00000098  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<std::runtime_error> >::~clone_impl()
0003ee6c  w   DF .text	00000128  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_year> >::rethrow() const
000443fc  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::lock_error> >::~clone_impl()
00000000      DO *UND*	00000000  GLIBCXX_3.4 VTT for std::iostream
00089b58 g    DF .text	0000020c  Base        Machine::MoveBufferEmpty(bool) const
00052f28 g    DF .text	0000017c  Base        I2C::GetData(unsigned char*, int)
00000000      DF *UND*	00000000  GLIBC_2.4   puts
00000000      DO *UND*	00000000  CXXABI_1.3  typeinfo for char const*
00000000      DF *UND*	00000000  GCC_3.5     __aeabi_ddiv
000554bc g    DF .text	00000008  Base        Machine::PowerMonitorInit()
000b263c  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> >*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> > > >
000b0f50  w   DO .data.rel.ro	00000008  Base        typeinfo for std::string
00039338 g    DF .text	0000001c  Base        Machine::GetHeaterProgressPercent(float*) const
00000000      DF *UND*	00000000  GLIBC_2.4   perror
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&)
00000000      DO *UND*	00000000  GLIBCXX_3.4 typeinfo for std::overflow_error
0004140c g    DF .text	00000234  Base        Machine::EndHesLog(unsigned char)
0009fa40  w   DO .rodata	00000050  Base        typeinfo name for boost::log::v2_mt_posix::aux::basic_ostringstreambuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
00039054 g    DF .text	00000034  Base        ToolheadManager::BufferIsFull() const
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_streambuf<char, std::char_traits<char> >::setbuf(char*, int)
000b0e70  w   DO .data.rel.ro	00000008  Base        typeinfo for boost::log::v2_mt_posix::aux::id<boost::log::v2_mt_posix::aux::process>
00094af0  w   DO .rodata	00000074  Base        typeinfo name for boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> > >
000945f8  w   DO .rodata	00000082  Base        typeinfo name for boost::less_than_comparable1<boost::posix_time::ptime, boost::equality_comparable<boost::posix_time::ptime, boost::posix_time::ptime, boost::detail::empty_base<boost::posix_time::ptime>, boost::detail::false_t> >
000683f0  w   DF .text	00000108  Base        boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>::~basic_formatting_sink_frontend()
000672e8 g    DF .text	0000003c  Base        Machine::WaitForHeatersAtTarget(unsigned char, bool const*)
00059014 g    DF .text	0000015c  Base        BronxToolheadManager::BronxToolheadManager(unsigned char)
00080f18 g    DF .text	00000224  Base        L3RAMMap::PruLogBuffer::FlushLog(int, std::vector<unsigned int, std::allocator<unsigned int> >&, std::vector<unsigned int, std::allocator<unsigned int> >&)
0003e25c  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_weak_ptr> >::~clone_impl()
000623ac  w   DF .text	0000008c  Base        boost::exception_detail::error_info_injector<boost::gregorian::bad_weekday>::~error_info_injector()
0003e17c  w   DF .text	00000034  Base        boost::bad_function_call::~bad_function_call()
000b0d08  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::log::v2_mt_posix::attributes::attribute_value_impl<boost::log::v2_mt_posix::aux::id<boost::log::v2_mt_posix::aux::process> >
000b138c g    DO .data.rel.ro	0000000c  Base        typeinfo for acceleration::FanDutyCommand
000940e0 g    DF .text	0000007c  Base        prussdrv_pru_send_wait_clear_event
000442d4  w   DF .text	00000120  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::lock_error> >::~clone_impl()
000626fc  w   DF .text	0000008c  Base        boost::exception_detail::error_info_injector<boost::gregorian::bad_month>::~error_info_injector()
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::istream::getline(char*, int, char)
000b0e08  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::log::v2_mt_posix::attributes::attribute_value_impl<boost::log::v2_mt_posix::trivial::severity_level>
00000000      DF *UND*	00000000  GLIBC_2.4   flock
0004f228 g    DF .text	0000002c  Base        operator-=(q14&, q14 const&)
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::aux::unhandled_exception_count()
00070ef8 g    DF .text	00000018  Base        StepperConversions::AxisCount() const
00091be0 g    DF .text	000000c4  Base        AccelerationManagerImpl::AddRawMoves()
000b17f4 g    DO .data.rel.ro	0000000c  Base        typeinfo for ToolheadManager
0008d804 g    DF .text	00000550  Base        libstepper::WaitForCompletion(std::set<machine::AxisName, std::less<machine::AxisName>, std::allocator<machine::AxisName> > const&, float)
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::seekoff(long long, std::_Ios_Seekdir, std::_Ios_Openmode)
00040910  w   DF .text	0000001c  Base        boost::detail::sp_counted_base::destroy()
000b4e78 g    DO .bss	00000002  Base        status_count
0007d2fc  w   DF .text	000003d4  Base        void boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>::feed_record<boost::mutex, boost::log::v2_mt_posix::sinks::text_file_backend>(boost::log::v2_mt_posix::record_view const&, boost::mutex&, boost::log::v2_mt_posix::sinks::text_file_backend&)
0007cd54 g    DF .text	0000003c  Base        MoveAxis
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::aux::default_attribute_names::thread_id()
0007cf44 g    DF .text	00000024  Base        MotorEnable
0003dfcc  w   DF .text	000000ac  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_weekday> >::~clone_impl()
0003fc30  w   DF .text	0000003c  Base        boost::gregorian::bad_month::~bad_month()
000b4ce5 g    DO .bss	00000001  Base        initialized_
0009345c g    DF .text	0000003c  Base        prussdrv_pru_enable
000937d8 g    DF .text	00000084  Base        prussdrv_start_irqthread
00045338  w   DF .text	000000ac  Base        boost::condition_error::~condition_error()
00000000      DF *UND*	00000000              Json::Value::asCString() const
0004bf20 g    DF .text	0000002c  Base        BronxToolheadManager::SetFilamentFan(bool)
0003e674  w   DF .text	000000fc  Base        boost::system::system_error::what() const
0009062c g    DF .text	00000214  Base        acceleration::Block::Block(unsigned int)
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::string::insert(unsigned int, char const*, unsigned int)
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_streambuf<char, std::char_traits<char> >::seekoff(long long, std::_Ios_Seekdir, std::_Ios_Openmode)
0006400c  w   DF .text	00000004  Base        void boost::log::v2_mt_posix::type_dispatcher::callback_base::trampoline<boost::log::v2_mt_posix::nop, std::string>(void*, std::string const&)
0005211c g    DF .text	00000014  Base        PowerMonitor::Close()
000b0df0  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::detail::sp_counted_impl_p<boost::detail::thread_data<StatusThread> >
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::istream::operator>>(int&)
00094c34  w   DO .rodata	0000002f  Base        typeinfo name for boost::log::v2_mt_posix::aux::visible_type<unsigned int>
0006827c  w   DF .text	00000008  Base        non-virtual thunk to boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> >::~synchronous_sink()
00082a34  w   DF .text	00000028  Base        boost::log::v2_mt_posix::aux::cleanup_guard<std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > >::~cleanup_guard()
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::string::_Rep::_M_dispose(std::allocator<char> const&)
000623a4  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::error_info_injector<boost::gregorian::bad_month>::~error_info_injector()
00040f8c g    DF .text	00000240  Base        Machine::BeginHesLog(unsigned char, unsigned short, bool)
00068764  w   DF .text	00000008  Base        non-virtual thunk to boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> >::~synchronous_sink()
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::locale::locale(std::locale const&)
00045088  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::condition_error> >::~clone_impl()
00056410  w   DF .text	00000080  Base        boost::date_time::c_time::localtime(long const*, tm*)
000404e8  w   DF .text	00000024  Base        boost::detail::tss_cleanup_function::~tss_cleanup_function()
000576b8 g    DF .text	0000018c  Base        Machine::QuickPause(bool)
00061e44  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::error_info_injector<std::runtime_error>::~error_info_injector()
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_ifstream<char, std::char_traits<char> >::open(char const*, std::_Ios_Openmode)
000726d0 g    DF .text	0000034c  Base        Machine::MoveAxis(machine::AxisName, float, float, bool, MakerBot::AxisUnit)
0004083c  w   DF .text	00000024  Base        boost::log::v2_mt_posix::intrusive_ref_counter::~intrusive_ref_counter()
0007d098 g    DF .text	00000020  Base        UpdateToolUsageStats
0005aa4c g    DF .text	00000220  Base        ToolheadManager::InitializeCommandBuffer()
000b2290  w   DO .data.rel.ro	00000020  Base        typeinfo for boost::exception_detail::error_info_injector<boost::gregorian::bad_month>
00000000      DF *UND*	00000000  CXXABI_1.3  __cxa_guard_abort
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char>::~basic_text_ostream_backend()
000b0ef0  w   DO .data.rel.ro	00000008  Base        typeinfo for boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> > >
0003fa70  w   DF .text	00000060  Base        boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t>*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> > >::~sp_counted_impl_pd()
0003f4cc  w   DF .text	00000070  Base        boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> >*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> > > >::~sp_counted_impl_pd()
00000000      DO *UND*	00000000  GLIBCXX_3.4 std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_S_empty_rep_storage
0004a13c g    DF .text	00000018  Base        Machine::ToolheadAcknowledgedHes(unsigned char, bool*) const
0009ec14  w   DO .rodata	00000025  Base        typeinfo name for boost::gregorian::bad_day_of_month
000b2150  w   DO .data.rel.ro	00000020  Base        typeinfo for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_weak_ptr> >
0005595c  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<std::out_of_range> >::rethrow() const
0005596c  w   DF .text	0000004c  Base        std::logic_error::logic_error(std::logic_error const&)
0003f918  w   DF .text	00000068  Base        boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char>*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> > >::~sp_counted_impl_pd()
000776cc g    DF .text	000001bc  Base        json_config::safe_get(Json::Value const&, std::string const&, int&)
00047e08 g    DF .text	00000304  Base        HAL::ToolheadSPI::Transact(unsigned char const*, unsigned short)
0004bf18 g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::ToggleJamDetection(bool)
000b4e50  w   DO .bss	00000010  Base        boost::array<std::pair<boost::log::v2_mt_posix::type_info_wrapper, void*>, 2u> const& boost::log::v2_mt_posix::aux::type_sequence_dispatcher<boost::mpl::vector2<std::string, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > > >::get_dispatching_map<boost::log::v2_mt_posix::binder1st<boost::log::v2_mt_posix::output_fun, boost::log::v2_mt_posix::basic_formatting_ostream<char, std::char_traits<char>, std::allocator<char> >&> >()::instance
0008c840 g    DF .text	00000014  Base        Timer64P::start()
00000000      DF *UND*	00000000  GCC_3.5     __aeabi_f2d
00000000      DO *UND*	00000000  GLIBCXX_3.4 vtable for std::basic_streambuf<char, std::char_traits<char> >
00000000      DF *UND*	00000000  CXXABI_1.3  __cxa_guard_release
00049f84 g    DF .text	00000038  Base        Machine::GetToolheadFirmwareVersion(unsigned char, unsigned char*, unsigned char*, unsigned short*) const
000811bc g    DF .text	00000050  Base        L3RAMMap::BufferOff(int)
00088ba4 g    DF .text	00000128  Base        AccelerationManagerImpl::GetSlipCompensationSpeed(machine::AxisName, float) const
00040778  w   DF .text	00000020  Base        boost::log::v2_mt_posix::attribute_value::impl::get_type() const
00045080  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::condition_error> >::~clone_impl()
0007c668 g    DF .text	00000014  Base        PowerMonitorClose
00074b28 g    DF .text	000005d8  Base        gpio::GPIO::WaitOnEdge(unsigned int)
0003f2e0  w   DF .text	0000009c  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<std::runtime_error> >::rethrow() const
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(wchar_t const*, unsigned int)
00049d50 g    DF .text	00000038  Base        ToolheadManager::LocalBufferIsEmpty() const
000947a0  w   DO .rodata	0000001b  Base        typeinfo name for boost::posix_time::ptime
0003ff2c  w   DF .text	00000038  Base        boost::detail::sp_counted_impl_pd<std::basic_ostream<wchar_t, std::char_traits<wchar_t> >*, boost::log::v2_mt_posix::empty_deleter>::get_deleter(std::type_info const&)
0009f7f8  w   DO .rodata	00000021  Base        typeinfo name for boost::detail::sp_counted_base
000407d4  w   DF .text	00000034  Base        boost::bad_weak_ptr::~bad_weak_ptr()
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::aux::code_convert(wchar_t const*, unsigned int, std::string&, std::locale const&)
00039458 g    DF .text	0000002c  Base        BronxToolheadManager::GetToolUsageStats() const
00061dc4  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<std::runtime_error> >::~clone_impl()
00061608  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::lock_error> >::rethrow() const
00000000      DF *UND*	00000000  GLIBC_2.4   strtoul
00044c00  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::error_info_injector<boost::lock_error>::~error_info_injector()
000958a0  w   DO .rodata	0000003f  Base        typeinfo name for boost::log::v2_mt_posix::attributes::attribute_value_impl<unsigned int>
00000000      DF *UND*	00000000  GLIBC_2.4   nanosleep
00095738  w   DO .rodata	0000005b  Base        typeinfo name for boost::log::v2_mt_posix::attributes::attribute_value_impl<boost::log::v2_mt_posix::trivial::severity_level>
0006183c  w   DF .text	00000258  Base        void boost::log::v2_mt_posix::type_dispatcher::callback_base::trampoline<boost::log::v2_mt_posix::binder1st<boost::log::v2_mt_posix::output_fun, boost::log::v2_mt_posix::basic_formatting_ostream<char, std::char_traits<char>, std::allocator<char> >&>, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > >(void*, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&)
00082294 g    DF .text	00000210  Base        BirdwingTransceiver::Move(std::vector<AbstractTransceiver::ConvertedMove, std::allocator<AbstractTransceiver::ConvertedMove> > const&)
00000000      DF *UND*	00000000  GLIBC_2.4   strftime
000b24a0  w   DO .data.rel.ro	00000020  Base        vtable for boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t>*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> > >
0007c540 g    DF .text	00000020  Base        LoadPrintMetaSettings
000898bc g    DF .text	00000030  Base        SimpleRotatingLogger::Open(std::string const&)
0009d624 g    DO .rodata	00000019  Base        typeinfo name for ChamberToolheadManager
000b2128  w   DO .data.rel.ro	00000024  Base        vtable for boost::exception_detail::error_info_injector<boost::condition_error>
00054658 g    DF .text	00000118  Base        InterfaceLED::Sleep()
0003faf8  w   DF .text	00000068  Base        boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::text_file_backend*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::text_file_backend> >::~sp_counted_impl_pd()
000827b0  w   DF .text	00000040  Base        std::set<machine::AxisName, std::less<machine::AxisName>, std::allocator<machine::AxisName> >::~set()
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::aux::once_block_sentry::commit()
00043f20  w   DF .text	00000054  Base        boost::exception::~exception()
00047928 g    DF .text	00000074  Base        HeaterManager::Heat()
00000000      DF *UND*	00000000  GLIBC_2.4   memset
000b2394  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::bad_weak_ptr
00000000      DF *UND*	00000000  GLIBCXX_3.4.9 std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::ostream::flush()
00070be8 g    DF .text	0000006c  Base        UnitConverter::UnitConverter()
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::core::flush()
0009f268  w   DO .rodata	000000bb  Base        typeinfo name for boost::detail::sp_counted_impl_pd<boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<wchar_t>::formatting_context>::delete_data*, boost::detail::do_heap_delete<boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<wchar_t>::formatting_context>::delete_data> >
000b28a8  w   DO .data.rel.ro	00000008  Base        typeinfo for boost::log::v2_mt_posix::aux::visible_type<std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > >
00048f98 g    DF .text	000005c0  Base        Machine::LoadPrintMetaSettings(char const*)
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::string::push_back(char)
00087c58 g    DF .text	000000bc  Base        AccelerationManagerImpl::Iterate()
00055bcc  w   DF .text	00000008  Base        non-virtual thunk to boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> >::unlock()
0009ea38  w   DO .rodata	0000001c  Base        typeinfo name for boost::gregorian::bad_year
0006f974 g    DF .text	00000ce0  Base        AccelerationManagerImpl::LookAhead()
0009f0c8  w   DO .rodata	00000044  Base        typeinfo name for boost::exception_detail::error_info_injector<boost::bad_weak_ptr>
0008372c  w   DF .text	000001a4  Base        void boost::log::v2_mt_posix::sinks::basic_sink_frontend::flush_backend_impl<boost::mutex, boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> >(boost::mutex&, boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t>&, mpl_::bool_<true>)
0004f1e4 g    DF .text	00000030  Base        operator+(q14 const&)
0007c7c4 g    DF .text	00000038  Base        LoadTemperatureSettings
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::runtime_error::runtime_error(std::string const&)
00067fa4  w   DF .text	00000164  Base        boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::text_file_backend>::~synchronous_sink()
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::_Rb_tree_increment(std::_Rb_tree_node_base*)
00071144 g    DF .text	00000054  Base        UnitConverter::StepsToMMPrecise(machine::AxisName, long long) const
00055554  w   DF .text	00000020  Base        std::vector<short, std::allocator<short> >::~vector()
0003fad0  w   DF .text	00000028  Base        boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::text_file_backend*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::text_file_backend> >::dispose()
0007c834 g    DF .text	00000014  Base        EnableSpi
0003e3a4  w   DF .text	00000034  Base        boost::bad_lexical_cast::~bad_lexical_cast()
000b170c g    DO .data.rel.ro	00000028  Base        typeinfo for BronxToolheadManager
000b3f4c  w   DO .bss	00000004  Base        boost::log::v2_mt_posix::aux::lazy_singleton<boost::log::v2_mt_posix::sources::aux::logger_singleton<log_obj>, boost::shared_ptr<boost::log::v2_mt_posix::sources::aux::logger_holder<boost::log::v2_mt_posix::sources::severity_channel_logger<boost::log::v2_mt_posix::trivial::severity_level, std::string> > > >::get()::_boost_log_once_block_flag_43
00049f1c g    DF .text	00000030  Base        ToolheadManager::SetFilepath(char const*)
0007cab8 g    DF .text	00000020  Base        LogToolEeprom
000b20c0  w   DO .data.rel.ro	00000020  Base        typeinfo for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_year> >
00000000      DO *UND*	00000000  CXXABI_1.3  vtable for __cxxabiv1::__class_type_info
00069178 g    DF .text	00000014  Base        Machine::SetTemperatureTarget(unsigned char, short, int)
00000000      DF *UND*	00000000              Json::Value::asDouble() const
00072598 g    DF .text	00000138  Base        AccelerationManager::AddMove(std::vector<float, std::allocator<float> > const&, float)
0009f734  w   DO .rodata	00000087  Base        typeinfo name for boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::text_file_backend>*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::text_file_backend> > >
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::__throw_logic_error(char const*)
00044d00  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::error_info_injector<boost::condition_error>::~error_info_injector()
0007ccdc g    DF .text	0000002c  Base        GetExtendedToolheadSelfCheckResults
0004a2f8 g    DF .text	0000028c  Base        ToolheadManager::GetSelfCheckResults(char const*) const
00042940 g    DF .text	00000044  Base        crc32
000420cc g    DF .text	000002d8  Base        ChamberToolheadManager::SpecificPrintLogLine() const
00065380 g    DF .text	00000130  Base        Machine::ProcessMoveTags(MakerBot::ToolpathTag const*, int)
00054a30 g    DF .text	000001a0  Base        InterfaceLED::Initialize()
000876d0 g    DF .text	00000218  Base        libstepper::GetAvailableSpace(machine::AxisName, int*)
00000000      DF *UND*	00000000  CXXABI_1.3  __cxa_free_exception
00000000      DF *UND*	00000000              Json::Value::begin() const
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_mutate(unsigned int, unsigned int, unsigned int)
00040438  w   DF .text	00000024  Base        boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<wchar_t>::formatting_context>::delete_data::~delete_data()
0006deec  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_year> >::clone() const
00061bbc  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::error_info_injector<std::out_of_range>::~error_info_injector()
000b14d0 g    DO .data.rel.ro	000001d8  Base        vtable for BronxToolheadManager
00039440 g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::ResetExtrusionDistance()
0008c510 g    DF .text	0000002c  Base        L3RAMMap::PruLogBuffer::PruLogBuffer(unsigned char*)
00086548 g    DF .text	00000234  Base        PRUMap::ClearCommandBuffer(bool)
00064d74  w   DF .text	00000098  Base        boost::mutex::unlock()
0009431c g    DF .fini	00000000  Base        _fini
000b2814 g    DO .data.rel.ro	0000000c  Base        typeinfo for BirdwingTransceiver
00078088 g    DF .text	000018a4  Base        AccelerationManagerImpl::LoadSettings(Json::Value const&)
0009f7bc  w   DO .rodata	0000001b  Base        typeinfo name for boost::thread_exception
0008915c g    DF .text	00000008  Base        AccelerationManagerImpl::BufferFillCount() const
000559b8  w   DF .text	0000002c  Base        boost::mutex::~mutex()
0006ccec g    DF .text	000000e4  Base        BronxToolheadManager::IsHESLogged() const
00065f98 g    DF .text	00000018  Base        Machine::IsInitialized(bool*) const
000745ec g    DF .text	0000053c  Base        gpio::GPIO::SetEdge(std::string)
000b2630  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::detail::sp_counted_impl_pd<std::ostream*, boost::log::v2_mt_posix::empty_deleter>
000b1dc0  w   DO .data.rel.ro	00000008  Base        VTT for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::condition_error> >
000b2678  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::thread_exception
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const
000562f4  w   DF .text	0000011c  Base        void boost::throw_exception<std::runtime_error>(std::runtime_error const&)
0008c97c g    DF .text	00000088  Base        getBaseAddr(int)
00000000      DF *UND*	00000000  GLIBC_2.4   pthread_rwlock_rdlock
00000000      DO *UND*	00000000  GLIBCXX_3.4 VTT for std::basic_ofstream<char, std::char_traits<char> >
00095794  w   DO .rodata	000000b1  Base        typeinfo name for boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sources::aux::logger_holder<boost::log::v2_mt_posix::sources::severity_channel_logger<boost::log::v2_mt_posix::trivial::severity_level, std::string> >*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sources::aux::logger_holder<boost::log::v2_mt_posix::sources::severity_channel_logger<boost::log::v2_mt_posix::trivial::severity_level, std::string> > > >
0007cd08 g    DF .text	0000002c  Base        GetToolheadSelfCheckResults
000b2624  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::detail::sp_counted_impl_pd<std::basic_ostream<wchar_t, std::char_traits<wchar_t> >*, boost::log::v2_mt_posix::empty_deleter>
0003e274  w   DF .text	00000058  Base        boost::log::v2_mt_posix::aux::light_function<void (boost::log::v2_mt_posix::record_view const&, boost::log::v2_mt_posix::basic_formatting_ostream<char, std::char_traits<char>, std::allocator<char> >&)>::impl<boost::log::v2_mt_posix::basic_formatter<char>::default_formatter>::clone_impl(boost::log::v2_mt_posix::aux::light_function<void (boost::log::v2_mt_posix::record_view const&, boost::log::v2_mt_posix::basic_formatting_ostream<char, std::char_traits<char>, std::allocator<char> >&)>::impl_base const*)
00064144  w   DF .text	00000004  Base        boost::log::v2_mt_posix::aux::light_function<bool (boost::log::v2_mt_posix::attribute_value_set const&)>::impl<boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not, boost::proto::argsns_::list1<boost::phoenix::actor<boost::log::v2_mt_posix::expressions::aux::unary_function_terminal<boost::log::v2_mt_posix::expressions::has_attribute<std::string> > > >, 1l> > >::destroy_impl(boost::log::v2_mt_posix::aux::light_function<bool (boost::log::v2_mt_posix::attribute_value_set const&)>::impl_base*)
0009467c  w   DO .rodata	00000090  Base        typeinfo name for boost::less_than_comparable<boost::posix_time::ptime, boost::equality_comparable<boost::posix_time::ptime, boost::posix_time::ptime, boost::detail::empty_base<boost::posix_time::ptime>, boost::detail::false_t>, boost::detail::empty_base<boost::posix_time::ptime>, boost::detail::true_t>
0007c608 g    DF .text	00000024  Base        GetFilamentPresence
000b1ce8  w   DO .data.rel.ro	00000008  Base        VTT for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<std::runtime_error> >
00094f4c  w   DO .rodata	00000057  Base        typeinfo name for std::_Sp_counted_ptr_inplace<BirdwingTransceiver, std::allocator<BirdwingTransceiver>, (__gnu_cxx::_Lock_policy)1>
0004cde4 g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::ResetToolUsage()
0009e890  w   DO .rodata	00000009  Base        typeinfo name for log_obj
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::sinks::text_file_backend::scan_for_files(boost::log::v2_mt_posix::sinks::file::scan_method, bool)
00094594  w   DO .rodata	00000062  Base        typeinfo name for boost::equality_comparable<boost::posix_time::ptime, boost::posix_time::ptime, boost::detail::empty_base<boost::posix_time::ptime>, boost::detail::false_t>
00038b34 g    DF .text	00000008  Base        NullTransceiver::BufferIsFull(bool) const
000559e4  w   DF .text	00000038  Base        boost::log::v2_mt_posix::intrusive_ptr_release(boost::log::v2_mt_posix::intrusive_ref_counter const*)
000405c4  w   DF .text	00000004  Base        boost::detail::sp_counted_impl_pd<std::ostream*, boost::log::v2_mt_posix::empty_deleter>::dispose()
000934d4 g    DF .text	00000094  Base        prussdrv_pru_write_memory
00094eb8  w   DO .rodata	0000003e  Base        typeinfo name for boost::log::v2_mt_posix::attributes::current_thread_id::impl
00086444 g    DF .text	00000050  Base        PRUMap::CheckStatus()
0008c724 g    DF .text	00000084  Base        libstepper::On(std::set<machine::AxisName, std::less<machine::AxisName>, std::allocator<machine::AxisName> > const&)
0003de34  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_year> >::~clone_impl()
00045f00 g    DF .text	00000054  Base        HeaterManager::AnyHeaterAboveTemp(unsigned short) const
000b2684  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::thread_resource_error
00065364 g    DF .text	00000014  Base        ToolheadProgrammer::~ToolheadProgrammer()
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_ios<wchar_t, std::char_traits<wchar_t> >::fill() const
0008ec04 g    DF .text	000000d8  Base        Machine::GetAxesPosition(float*) const
00081c4c g    DF .text	00000038  Base        BirdwingTransceiver::Abort(bool)
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::aux::default_attribute_names::severity()
000470f8 g    DF .text	00000024  Base        InterfaceLED::period_uint8_to_ms(unsigned char) const
0004fb28 g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::~BronxToolheadManager()
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::string::reserve(unsigned int)
00095154  w   DO .rodata	00000037  Base        typeinfo name for boost::log::v2_mt_posix::sources::single_thread_model
00075100 g    DF .text	0000097c  Base        ToolheadProgrammer::SendPage(unsigned char const*, unsigned char, std::unique_ptr<HAL::ToolheadSPI, std::default_delete<HAL::ToolheadSPI> > const&)
00068d8c g    DF .text	00000008  Base        AccelerationManager::QueueFilamentFanDuty(unsigned char, float, unsigned int)
00069fc8 g    DF .text	00000008  Base        AccelerationManager::ClearBuffer()
0009ee40  w   DO .rodata	00000027  Base        typeinfo name for boost::exception_detail::clone_base
00000000      DF *UND*	00000000  GLIBC_2.4   pthread_mutex_trylock
0006aaec g    DF .text	0000001c  Base        Machine::~Machine()
0006d644  w   DF .text	0000012c  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<std::out_of_range> >::clone() const
0009ef00  w   DO .rodata	0000004d  Base        typeinfo name for boost::exception_detail::error_info_injector<boost::gregorian::bad_weekday>
000b4f2c g    D  .bss	00000000  Base        __bss_end__
00000000      DF *UND*	00000000  GLIBC_2.4   close
0008ae10  w   DF .text	00000054  Base        std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
0007c640 g    DF .text	00000014  Base        QueryPowerInfo
00064cdc  w   DF .text	00000098  Base        boost::mutex::lock()
00041a10 g    DF .text	000001d0  Base        Machine::ResetExtrusionDistance()
00000000      DF *UND*	00000000  GLIBCXX_3.4.9 std::ostream& std::ostream::_M_insert<void const*>(void const*)
000b0ee0  w   DO .data.rel.ro	00000008  Base        typeinfo for boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::text_file_backend> >
0006959c g    DF .text	0000057c  Base        AccelerationManagerImpl::AccelerationManagerImpl(std::shared_ptr<StepperConversions>&&)
000b13c8 g    DO .data.rel.ro	00000014  Base        vtable for acceleration::FanDutyCommand
00061bc4  w   DF .text	000000b4  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_month> >::~clone_impl()
0003f050  w   DF .text	0000009c  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_year> >::rethrow() const
000557e8  w   DF .text	000000d8  Base        boost::exception_detail::error_info_injector<std::out_of_range>::error_info_injector(boost::exception_detail::error_info_injector<std::out_of_range> const&)
000b0f74  w   DO .data.rel.ro	00000008  Base        typeinfo for boost::log::v2_mt_posix::aux::visible_type<boost::log::v2_mt_posix::aux::id<boost::log::v2_mt_posix::aux::thread> >
00052138 g    DF .text	0000004c  Base        GpioMem::GetValue(int)
0006414c  w   DF .text	0000004c  Base        boost::log::v2_mt_posix::aux::single_type_dispatcher<std::string>::get_callback(boost::log::v2_mt_posix::type_dispatcher*, std::type_info const&)
00091264 g    DF .text	0000097c  Base        AccelerationManagerImpl::AddMovePrivate(acceleration::RawMove&)
00000000      DF *UND*	00000000  GLIBC_2.4   fopen
00068284  w   DF .text	00000164  Base        boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> >::~synchronous_sink()
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::core::add_global_attribute(boost::log::v2_mt_posix::attribute_name const&, boost::log::v2_mt_posix::attribute const&)
00053f70 g    DF .text	0000036c  Base        InterfaceLED::SetChamberColor(float, float, float, float)
0004bddc g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::BeginHESLog(unsigned short, bool)
00000000      DF *UND*	00000000  GLIBCXX_3.4 operator new[](unsigned int)
0004ef20 g    DF .text	00000034  Base        operator<<(std::ostream&, q14 const&)
00061dbc  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<std::runtime_error> >::~clone_impl()
0009f218  w   DO .rodata	0000004d  Base        typeinfo name for boost::exception_detail::error_info_injector<boost::thread_resource_error>
0009e7b4  w   DO .rodata	00000058  Base        typeinfo name for boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> >
0006d770  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<std::out_of_range> >::clone() const
0009ead4  w   DO .rodata	00000060  Base        typeinfo name for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_weekday> >
0005eae8 g    DF .text	00000100  Base        ToolheadManager::ClearToolheadBuffer()
00043348 g    DF .text	000000a0  Base        Machine::GetToolUid(unsigned char, unsigned int*)
0005b06c g    DF .text	00000048  Base        HexParser::VerifyLine(char*, unsigned int)
00082a5c  w   DF .text	00000028  Base        boost::log::v2_mt_posix::aux::cleanup_guard<std::string>::~cleanup_guard()
0007c8fc g    DF .text	00000020  Base        SetChamberBlink
000b0e20  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::log::v2_mt_posix::attributes::attribute_value_impl<boost::log::v2_mt_posix::aux::id<boost::log::v2_mt_posix::aux::thread> >
0003908c g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::BufferIsFull() const
0009415c g    DF .text	000001c0  Base        prussdrv_exec_program
00064010  w   DF .text	0000000c  Base        void boost::log::v2_mt_posix::type_dispatcher::callback_base::trampoline<boost::log::v2_mt_posix::aux::value_ref_initializer<boost::log::v2_mt_posix::value_ref<std::string, tag::tag_attr> >, std::string>(void*, std::string const&)
00000000      DF *UND*	00000000  GLIBC_2.4   read
0003a620 g    DF .text	0000007c  Base        NullTransceiver::GetTickTimes() const
000b260c  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> >*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> > > >
0006876c  w   DF .text	00000164  Base        boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> >::~synchronous_sink()
0009f608  w   DO .rodata	000000bb  Base        typeinfo name for boost::detail::sp_counted_impl_pd<boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>::formatting_context>::delete_data*, boost::detail::do_heap_delete<boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>::formatting_context>::delete_data> >
00000000      DF *UND*	00000000  GCC_3.5     __aeabi_dcmplt
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::string::_Rep::_M_destroy(std::allocator<char> const&)
00054770 g    DF .text	00000008  Base        Machine::LedSleep()
000b0f7c  w   DO .data.rel.ro	00000008  Base        typeinfo for boost::log::v2_mt_posix::aux::visible_type<boost::log::v2_mt_posix::trivial::severity_level>
00056b50 g    DF .text	00000960  Base        ToolheadManager::Iterate()
0004bd80 g    DF .text	0000005c  Base        BronxToolheadManager::BeginHESLog(unsigned short, bool)
0006156c  w   DF .text	0000009c  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::lock_error> >::rethrow() const
000446c8  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::thread_resource_error> >::~clone_impl()
00043e80  w   DF .text	00000044  Base        boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::adopt(boost::exception_detail::error_info_container*)
00055554  w   DF .text	00000020  Base        std::vector<short, std::allocator<short> >::~vector()
00093d20 g    DF .text	0000003c  Base        prussdrv_pru_wait_event
0007c93c g    DF .text	0000003c  Base        SetChamberColor
0008eab0 g    DF .text	00000154  Base        StepperConversions::GetAxesPositions(std::vector<float, std::allocator<float> >&) const
00042938 g    DF .text	00000008  Base        HAL::ToolheadSPI::initialized() const
00082a84  w   DF .text	0000007c  Base        boost::log::v2_mt_posix::basic_formatting_ostream<char, std::char_traits<char>, std::allocator<char> >::~basic_formatting_ostream()
000479ac g    DF .text	0000002c  Base        Machine::SetTemperatureTarget(unsigned char, short)
0006d170  w   DF .text	00000010  Base        void boost::log::v2_mt_posix::type_dispatcher::callback_base::trampoline<boost::log::v2_mt_posix::binder1st<boost::log::v2_mt_posix::output_fun, boost::log::v2_mt_posix::basic_formatting_ostream<char, std::char_traits<char>, std::allocator<char> >&>, std::string>(void*, std::string const&)
00055754  w   DF .text	00000094  Base        boost::system::system_error::system_error(boost::system::system_error const&)
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::aux::once_block_sentry::rollback()
000446e0  w   DF .text	000000f0  Base        boost::exception_detail::error_info_injector<boost::thread_resource_error>::~error_info_injector()
0008c468 g    DF .text	00000054  Base        L3RAMMap::Clear()
0003f734  w   DF .text	00000108  Base        boost::detail::thread_data_base::notify_all_at_thread_exit(boost::condition_variable*, boost::mutex*)
0006ab08  w   DF .text	000000e0  Base        std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::_Deque_iterator<char, char&, char*> >(std::_Deque_iterator<char, char&, char*>, std::_Deque_iterator<char, char&, char*>, std::allocator<char> const&)
0003f8ac  w   DF .text	00000008  Base        non-virtual thunk to boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> >::try_lock()
00043230 g    DF .text	00000090  Base        Machine::UpdateToolRefurbCount(unsigned char, bool)
00000000      DF *UND*	00000000  GLIBC_2.4   poll
000935b0 g    DF .text	00000018  Base        prussdrv_map_l3mem
00090840  w   DF .text	000001d4  Base        void std::deque<char, std::allocator<char> >::_M_range_insert_aux<char const*>(std::_Deque_iterator<char, char&, char*>, char const*, char const*, std::forward_iterator_tag)
00000000      DF *UND*	00000000  GLIBC_2.4   pow
00074550 g    DF .text	00000050  Base        GpioMem::SetDirection(int, bool)
00093420 g    DF .text	0000003c  Base        prussdrv_pru_reset
0003e9d8  w   DF .text	0000012c  Base        boost::log::v2_mt_posix::aux::basic_ostringstreambuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::overflow(unsigned int)
0004bfe8 g    DF .text	00000040  Base        BronxToolheadManager::ConfigureHES(unsigned char, unsigned short)
00040490  w   DF .text	00000024  Base        boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>::formatting_context>::delete_data::~delete_data()
00048cf4 g    DF .text	0000029c  Base        BronxToolheadManager::GetRawHESVal(bool*, short*)
0004eafc g    DF .text	00000020  Base        gpio::GPIO::~GPIO()
000b23d0  w   DO .data.rel.ro	00000020  Base        typeinfo for boost::exception_detail::error_info_injector<boost::lock_error>
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::replace(unsigned int, unsigned int, wchar_t const*, unsigned int)
000b1c78  w   DO .data.rel.ro	00000054  Base        vtable for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_month> >
00061784  w   DF .text	000000b8  Base        std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::~basic_stringbuf()
0004fb04 g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::~BronxToolheadManager()
00069fb8 g    DF .text	00000010  Base        AccelerationManagerImpl::Initialize()
0009062c g    DF .text	00000214  Base        acceleration::Block::Block(unsigned int)
0004bd78 g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::RetrievePosition()
0007d0b8 g    DF .text	00000020  Base        ResetToolUsage
000578a0 g    DF .text	00000020  Base        ToolheadManager::PowerData(bool)
00000000      DF *UND*	00000000  GLIBC_2.4   sinf
00087a70 g    DF .text	000001e8  Base        BirdwingTransceiver::BufferIsFull(bool) const
00043d30  w   DF .text	00000030  Base        boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::release()
00095584  w   DO .rodata	00000092  Base        typeinfo name for boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sources::aux::logger_holder<boost::log::v2_mt_posix::sources::severity_channel_logger<boost::log::v2_mt_posix::trivial::severity_level, std::string> > >
000392f0 g    DF .text	00000024  Base        Machine::GetCurrentCommandIndex(int*) const
00082a34  w   DF .text	00000028  Base        boost::log::v2_mt_posix::aux::cleanup_guard<std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > >::~cleanup_guard()
0007c9b4 g    DF .text	00000020  Base        SetInterfaceAddress
000b0db0  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::log::v2_mt_posix::sources::basic_channel_logger<boost::log::v2_mt_posix::sources::basic_logger<char, boost::log::v2_mt_posix::sources::severity_channel_logger<boost::log::v2_mt_posix::trivial::severity_level, std::string>, boost::log::v2_mt_posix::sources::single_thread_model>, std::string>
00040654  w   DF .text	00000018  Base        boost::log::v2_mt_posix::sinks::sink::try_consume(boost::log::v2_mt_posix::record_view const&)
0009fa90  w   DO .rodata	00000050  Base        typeinfo name for boost::log::v2_mt_posix::aux::basic_ostringstreambuf<char, std::char_traits<char>, std::allocator<char> >
00088f58 g    DF .text	00000064  Base        AccelerationManagerImpl::LimitNominalSpeed(acceleration::Block&)
0007c890 g    DF .text	00000014  Base        FastAbort
0006c200 g    DF .text	00000230  Base        BronxToolheadManager::IncrementExtrusionDistance(unsigned short)
0004beec g    DF .text	0000002c  Base        BronxToolheadManager::ToggleJamDetection(bool)
00000000      DF *UND*	00000000  GLIBC_2.4   memmove
0005ece4 g    DF .text	000000d4  Base        Machine::IsToolConnected(unsigned char, bool*) const
00053ca0 g    DF .text	00000050  Base        InterfaceLED::SetChamberBlink(float)
00061618  w   DF .text	0000009c  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::thread_resource_error> >::rethrow() const
0003fd10  w   DF .text	0000003c  Base        boost::gregorian::bad_weekday::~bad_weekday()
00081298 g    DF .text	00000734  Base        libstepper::Init()
000498c8  w   DF .text	000000cc  Base        char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag)
00044d08  w   DF .text	00000118  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::thread_resource_error> >::~clone_impl()
00053368 g    DF .text	00000150  Base        PowerMonitor::GetValue(machine::PowerMonitorValue, short&)
0009358c g    DF .text	00000024  Base        prussdrv_pru_clear_event
000b4f2c g    D  .bss	00000000  Base        _bss_end__
0006e704 g    DF .text	00000088  Base        AccelerationMath::GetAccelerationDistance(float, float, float)
00056b04 g    DF .text	0000004c  Base        ToolheadManager::MarkDisconnected()
000b0cd8  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::log::v2_mt_posix::attributes::counter<unsigned int>::impl_generic
00095848  w   DO .rodata	00000058  Base        typeinfo name for boost::log::v2_mt_posix::attributes::attribute_value_impl<boost::log::v2_mt_posix::aux::id<boost::log::v2_mt_posix::aux::thread> >
00086f1c g    DF .text	00000014  Base        libstepper::AxisConfiguration::AxisConfiguration()
00000000      DO *UND*	00000000              vtable for Json::FastWriter
0008ae64 g    DF .text	000000b8  Base        acceleration::RawMove::RawMove(std::vector<float, std::allocator<float> > const&, float, float, int, bool)
0004f054 g    DF .text	00000038  Base        operator!(q14 const&)
0003f2d0  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_month> >::rethrow() const
0007ebc4 g    DF .text	0000002c  Base        accel_log::log_channel_name()
00094354  w   DO .rodata	0000001e  Base        typeinfo name for MachineTransceiverInterface
00045bc8 g    DF .text	00000014  Base        Machine::GetTemperatureSettings(short*) const
0004987c  w   DF .text	0000004c  Base        std::runtime_error::runtime_error(std::runtime_error const&)
0007c4fc g    DF .text	00000024  Base        ToggleToolheadPower
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_iostream<char, std::char_traits<char> >::~basic_iostream()
00039448 g    DF .text	00000008  Base        BronxToolheadManager::GetExtrusionDistance() const
00000000      DO *UND*	00000000              typeinfo for boost::detail::thread_data_base
00000000      DF *UND*	00000000  CXXABI_1.3  __cxa_demangle
000b1e98  w   DO .data.rel.ro	00000008  Base        VTT for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::lock_error> >
0004a080 g    DF .text	00000008  Base        ToolheadManager::BufferClearDone() const
0003a84c g    DF .text	00000114  Base        Machine::SetZPauseMm(float)
00066f44 g    DF .text	00000010  Base        ToolheadProgrammer::SendData(unsigned char const*, unsigned int, std::unique_ptr<HAL::ToolheadSPI, std::default_delete<HAL::ToolheadSPI> > const&)
000b25cc  w   DO .data.rel.ro	00000008  Base        typeinfo for boost::exception
000441c0  w   DF .text	00000008  Base        std::ctype<char>::do_widen(char) const
0004705c g    DF .text	0000002c  Base        Machine::GetPowerValue(machine::PowerMonitorRail, machine::PowerMonitorValue, unsigned short*, float*, float*)
0006959c g    DF .text	0000057c  Base        AccelerationManagerImpl::AccelerationManagerImpl(std::shared_ptr<StepperConversions>&&)
0006635c g    DF .text	000007cc  Base        InitializationHelpers::IsToolheadStructureCorrect(Json::Value const&)
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::basic_stringstream(std::_Ios_Openmode)
0007d20c g    DF .text	00000024  Base        ToolheadOk
0005e78c g    DF .text	00000024  Base        ToolheadManager::RequestStatus()
000860f4  w   DF .text	00000144  Base        void std::__adjust_heap<std::pair<boost::log::v2_mt_posix::type_info_wrapper, void*>*, int, std::pair<boost::log::v2_mt_posix::type_info_wrapper, void*>, boost::log::v2_mt_posix::aux::dispatching_map_order>(std::pair<boost::log::v2_mt_posix::type_info_wrapper, void*>*, int, int, std::pair<boost::log::v2_mt_posix::type_info_wrapper, void*>, boost::log::v2_mt_posix::aux::dispatching_map_order)
000411cc g    DF .text	00000240  Base        Machine::ConfigureHes(unsigned char, unsigned char, unsigned short)
0003de2c  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_year> >::~clone_impl()
00000000      DF *UND*	00000000              Json::Writer::~Writer()
0006401c  w   DF .text	00000064  Base        boost::log::v2_mt_posix::aux::light_function<bool (boost::log::v2_mt_posix::attribute_value_set const&)>::impl<boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater_equal, boost::proto::argsns_::list2<boost::log::v2_mt_posix::expressions::attribute_actor<boost::log::v2_mt_posix::trivial::severity_level, boost::log::v2_mt_posix::fallback_to_none, boost::log::v2_mt_posix::trivial::tag::severity, boost::phoenix::actor>, boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::log::v2_mt_posix::trivial::severity_level>, 0l> > >, 2l> > >::clone_impl(boost::log::v2_mt_posix::aux::light_function<bool (boost::log::v2_mt_posix::attribute_value_set const&)>::impl_base const*)
00090a14  w   DF .text	000004dc  Base        void boost::algorithm::detail::find_format_all_impl2<std::string, boost::algorithm::detail::first_finderF<char const*, boost::algorithm::is_equal>, boost::algorithm::detail::const_formatF<boost::iterator_range<char const*> >, boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::string> >, boost::iterator_range<char const*> >(std::string&, boost::algorithm::detail::first_finderF<char const*, boost::algorithm::is_equal>, boost::algorithm::detail::const_formatF<boost::iterator_range<char const*> >, boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::string> >, boost::iterator_range<char const*>)
00077354 g    DF .text	000001bc  Base        json_config::safe_get(Json::Value const&, std::string const&, bool&)
00077510 g    DF .text	000001bc  Base        json_config::safe_get(Json::Value const&, std::string const&, unsigned int&)
000405f4  w   DF .text	00000008  Base        boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::text_file_backend*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::text_file_backend> >::get_untyped_deleter()
00079960 g    DF .text	000004d4  Base        StepperConversions::ConvertMove(acceleration::Move const&)
0007cfe8 g    DF .text	00000014  Base        ClearAllZPause
0007d194 g    DF .text	00000024  Base        GetToolUid
00086238  w   DF .text	0000020c  Base        boost::log::v2_mt_posix::aux::light_function<bool (boost::log::v2_mt_posix::attribute_value_set const&)>::impl<boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_and, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater_equal, boost::proto::argsns_::list2<boost::log::v2_mt_posix::expressions::attribute_actor<boost::log::v2_mt_posix::trivial::severity_level, boost::log::v2_mt_posix::fallback_to_none, boost::log::v2_mt_posix::trivial::tag::severity, boost::phoenix::actor>, boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::log::v2_mt_posix::trivial::severity_level>, 0l> > >, 2l> >, boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::not_equal_to, boost::proto::argsns_::list2<boost::log::v2_mt_posix::expressions::attribute_actor<std::string, boost::log::v2_mt_posix::fallback_to_default<std::string>, void, boost::phoenix::actor>, boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<char [10]>, 0l> > >, 2l> > >, 2l> > >::invoke_impl(boost::log::v2_mt_posix::aux::light_function<bool (boost::log::v2_mt_posix::attribute_value_set const&)>::impl_base*, boost::log::v2_mt_posix::attribute_value_set const&)
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::string::end()
0003f870  w   DF .text	00000008  Base        non-virtual thunk to boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::text_file_backend>::try_lock()
00049b3c g    DF .text	0000000c  Base        ToolheadManager::ResetLongestMove()
0007ce2c g    DF .text	0000002c  Base        BeginHesLog
00045c2c g    DF .text	00000014  Base        HeaterManager::GetError()
0003e080  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_weekday> >::~clone_impl()
0009f4b0  w   DO .rodata	00000071  Base        typeinfo name for boost::detail::sp_counted_impl_pd<std::basic_ostream<wchar_t, std::char_traits<wchar_t> >*, boost::log::v2_mt_posix::empty_deleter>
0007ca00 g    DF .text	00000024  Base        SetLedBrightness
0003dd70  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_year> >::~clone_impl()
0007cc54 g    DF .text	00000020  Base        ToggleAcceleration
000b2900  w   DO .data.rel.ro	00000040  Base        vtable for boost::log::v2_mt_posix::aux::basic_ostringstreambuf<char, std::char_traits<char>, std::allocator<char> >
000b1074  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::exception_detail::error_info_container_impl
00067e30  w   DF .text	0000016c  Base        boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::text_file_backend>::~synchronous_sink()
000478d4 g    DF .text	00000044  Base        HeaterManager::Cool()
00094a20  w   DO .rodata	00000074  Base        typeinfo name for boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> > >
000b1088  w   DO .data.rel.ro	00000008  Base        typeinfo for ToolheadManager::ToolheadSelfCheckState
00055574  w   DF .text	000000e8  Base        boost::detail::shared_count::shared_count(boost::detail::shared_count const&)
0004b944 g    DF .text	000003c0  Base        ToolheadManager::PrepareCommandPacket(unsigned char, unsigned char const*, unsigned char, bool)
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_filebuf<char, std::char_traits<char> >::open(char const*, std::_Ios_Openmode)
0007d254 g    DF .text	00000004  Base        DestroyParserInterface
00000000      DF *UND*	00000000  GLIBC_2.4   ioctl
00000000      DF *UND*	00000000              Json::Value::isMember(char const*) const
00000000      DF *UND*	00000000  GLIBC_2.4   pthread_yield
000b2d40  w   DO .data.rel.ro	00000010  Base        vtable for boost::log::v2_mt_posix::intrusive_ref_counter
00064198  w   DF .text	00000124  Base        boost::log::v2_mt_posix::aux::light_function<bool (boost::log::v2_mt_posix::attribute_value_set const&)>::impl<boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater_equal, boost::proto::argsns_::list2<boost::log::v2_mt_posix::expressions::attribute_actor<boost::log::v2_mt_posix::trivial::severity_level, boost::log::v2_mt_posix::fallback_to_none, boost::log::v2_mt_posix::trivial::tag::severity, boost::phoenix::actor>, boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::log::v2_mt_posix::trivial::severity_level>, 0l> > >, 2l> > >::invoke_impl(boost::log::v2_mt_posix::aux::light_function<bool (boost::log::v2_mt_posix::attribute_value_set const&)>::impl_base*, boost::log::v2_mt_posix::attribute_value_set const&)
000898ec g    DF .text	0000002c  Base        SimpleRotatingLogger::Close()
00070be8 g    DF .text	0000006c  Base        UnitConverter::UnitConverter()
00000000      DF *UND*	00000000  GLIBC_2.4   localtime
0004ee24 g    DF .text	000000e8  Base        HAL::Endstop::Endstop(int, HAL::Endstop::EndstopType, bool)
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::ostream::operator<<(short)
0007c85c g    DF .text	00000014  Base        CloseAndCleanup
00038b24 g    DF .text	00000008  Base        NullTransceiver::AxisCount() const
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_istream<char, std::char_traits<char> >::basic_istream()
000446e0  w   DF .text	000000f0  Base        boost::exception_detail::error_info_injector<boost::thread_resource_error>::~error_info_injector()
00089918 g    DF .text	000000a0  Base        SimpleRotatingLogger::~SimpleRotatingLogger()
0007d060 g    DF .text	00000024  Base        ConnectTool
000b1f58  w   DO .data.rel.ro	00000020  Base        typeinfo for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_month> >
0007caf8 g    DF .text	00000024  Base        MoveBufferEmpty
0003dc50  w   DF .text	00000004  Base        boost::log::v2_mt_posix::aux::light_function<bool (boost::log::v2_mt_posix::attribute_value_set const&)>::impl<boost::log::v2_mt_posix::filter::default_filter>::destroy_impl(boost::log::v2_mt_posix::aux::light_function<bool (boost::log::v2_mt_posix::attribute_value_set const&)>::impl_base*)
0009fa04  w   DO .rodata	0000003c  Base        typeinfo name for boost::log::v2_mt_posix::type_info_wrapper::uninitialized
000b1970  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<wchar_t>
0005ac6c g    DF .text	000002ac  Base        ToolheadManager::GetPrintLogLine() const
00049dac g    DF .text	00000020  Base        ToolheadManager::CheckLongestMove(unsigned char const*)
00049d38 g    DF .text	00000018  Base        Machine::ImmediateToolheadError(bool*) const
0008c4bc g    DF .text	00000054  Base        L3RAMMap::Init()
00045b90 g    DF .text	00000038  Base        HeaterManager::GetTemperatureSettings(short*) const
0007ab40 g    DF .text	000000a4  Base        StepperConversions::Move(acceleration::Move const&)
000685f8  w   DF .text	0000016c  Base        boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> >::~synchronous_sink()
0008ca04 g    DF .text	00000418  Base        PRUMap::DumpAxis(int)
00050664 g    DF .text	00000090  Base        ToolheadManager::Initialize()
000b4e7c  w   DO .bss	00000008  Base        boost::log::v2_mt_posix::aux::lazy_singleton<boost::log::v2_mt_posix::sources::aux::logger_singleton<telem_obj>, boost::shared_ptr<boost::log::v2_mt_posix::sources::aux::logger_holder<boost::log::v2_mt_posix::sources::severity_channel_logger<boost::log::v2_mt_posix::trivial::severity_level, std::string> > > >::get_instance()::instance
00000000      DO *UND*	00000000  GLIBCXX_3.4 vtable for std::out_of_range
0009f10c  w   DO .rodata	00000042  Base        typeinfo name for boost::exception_detail::error_info_injector<boost::lock_error>
0009efe8  w   DO .rodata	00000043  Base        typeinfo name for boost::exception_detail::error_info_injector<std::runtime_error>
00000000      DF *UND*	00000000  GLIBC_2.4   realloc
00000000      DF *UND*	00000000  GLIBC_2.4   strcpy
00000000      DF *UND*	00000000  GCC_3.5     __aeabi_fdiv
000b1398 g    DO .data.rel.ro	00000014  Base        vtable for acceleration::FanCommand
0007cfd4 g    DF .text	00000014  Base        ResetZPauseIndex
000950e4  w   DO .rodata	00000050  Base        typeinfo name for std::_Sp_counted_ptr<acceleration::FanCommand*, (__gnu_cxx::_Lock_policy)1>
000b1cf0  w   DO .data.rel.ro	00000054  Base        vtable for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<std::runtime_error> >
00089164 g    DF .text	00000024  Base        AccelerationManagerImpl::SlipCompensationCompare::operator()(std::pair<float, float> const&, std::pair<float, float> const&) const
0007992c g    DF .text	00000034  Base        AbstractTransceiver::ConvertedMove::ConvertedMove()
0007cd34 g    DF .text	00000020  Base        PerformToolheadSelfCheck
0008c854 g    DF .text	0000004c  Base        Timer64P::configure32WithPeriodTicks(unsigned int)
000b2cfc  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::log::v2_mt_posix::attribute_value::impl
00000000      DF *UND*	00000000  GLIBC_2.4   mmap
0006493c  w   DF .text	00000168  Base        boost::detail::sp_if_not_array<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> >::type boost::make_shared<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> >()
00000000      DF *UND*	00000000              Json::Value::operator[](unsigned int) const
0009eeb4  w   DO .rodata	0000004a  Base        typeinfo name for boost::exception_detail::error_info_injector<boost::gregorian::bad_month>
000b1f10  w   DO .data.rel.ro	00000020  Base        typeinfo for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_year> >
000643b8  w   DF .text	000001e4  Base        boost::log::v2_mt_posix::aux::light_function<bool (boost::log::v2_mt_posix::attribute_value_set const&)>::impl<boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_and, boost::proto::argsns_::list2<boost::phoenix::actor<boost::log::v2_mt_posix::expressions::aux::unary_function_terminal<boost::log::v2_mt_posix::expressions::has_attribute<std::string> > >, boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::log::v2_mt_posix::expressions::attribute_actor<std::string, boost::log::v2_mt_posix::fallback_to_none, tag::tag_attr, boost::phoenix::actor>, boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<char const*>, 0l> > >, 2l> > >, 2l> > >::invoke_impl(boost::log::v2_mt_posix::aux::light_function<bool (boost::log::v2_mt_posix::attribute_value_set const&)>::impl_base*, boost::log::v2_mt_posix::attribute_value_set const&)
00039618 g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::GetPosition() const
0004a09c g    DF .text	00000018  Base        Machine::ToolheadBlocking(unsigned char, bool*) const
00082d9c  w   DF .text	0000007c  Base        boost::log::v2_mt_posix::basic_formatting_ostream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::~basic_formatting_ostream()
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char>::consume(boost::log::v2_mt_posix::record_view const&, std::string const&)
00000000      DF *UND*	00000000  GLIBCXX_3.4 operator delete(void*)
0004f8a8 g    DF .text	00000254  Base        BronxToolheadManager::~BronxToolheadManager()
0006c024 g    DF .text	000001dc  Base        Machine::SetExtruderDelay(int)
00094454  w   DO .rodata	00000058  Base        typeinfo name for std::_Sp_counted_ptr_inplace<BronxToolheadManager, std::allocator<BronxToolheadManager>, (__gnu_cxx::_Lock_policy)1>
0006cdd0 g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::IsHESLogged() const
0006e090 g    DF .text	000002c4  Base        AccelerationMath::GetAxisFeedrates(std::vector<float, std::allocator<float> > const&, float, std::vector<float, std::allocator<float> > const&, float)
0003f464  w   DF .text	00000068  Base        boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> >*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> > > >::~sp_counted_impl_pd()
0006c01c g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::VerifyToolUsageStatsRetrieved(unsigned char) const
00069c7c g    DF .text	00000024  Base        AccelerationManagerImpl::TestOnlyExtruders(acceleration::RawMove const&)
0004c480 g    DF .text	00000160  Base        BronxToolheadManager::SetLEDBlink(unsigned char, float)
00095630  w   DO .rodata	00000047  Base        typeinfo name for boost::detail::sp_counted_impl_p<boost::detail::thread_data<StatusThread> >
00089d7c g    DF .text	000000ec  Base        Machine::ToggleExpendBuffer(bool)
0005e890 g    DF .text	00000024  Base        ChamberToolheadManager::Abort()
0007ca24 g    DF .text	00000024  Base        AnyHeaterAboveTemp
00000000      DF *UND*	00000000  GLIBC_2.4   __assert_fail
00040330  w   DF .text	00000024  Base        boost::detail::sp_counted_impl_pd<std::basic_ostream<wchar_t, std::char_traits<wchar_t> >*, boost::log::v2_mt_posix::empty_deleter>::~sp_counted_impl_pd()
0004c118 g    DF .text	0000008c  Base        BronxToolheadManager::Move(short, int, int, unsigned int, int)
00047470 g    DF .text	00000464  Base        HeaterManager::SetTemperatureTarget(unsigned char, short)
000734d0  w   DF .text	000000f4  Base        std::deque<char, std::allocator<char> >::_M_new_elements_at_back(unsigned int)
000392c0 g    DF .text	00000010  Base        Machine::DisableZPause()
000b25d4  w   DO .data.rel.ro	00000020  Base        typeinfo for boost::exception_detail::error_info_injector<boost::thread_resource_error>
00041db0 g    DF .text	0000031c  Base        ChamberToolheadManager::ChamberSelfCheckState::stringify_results()
00067f9c  w   DF .text	00000008  Base        non-virtual thunk to boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::text_file_backend>::~synchronous_sink()
0003fbfc  w   DF .text	00000034  Base        boost::gregorian::bad_day_of_year::~bad_day_of_year()
0005ee8c g    DF .text	000000dc  Base        Machine::GetFilamentPresence(unsigned char, bool*) const
00080bf8  w   DF .text	00000020  Base        boost::shared_ptr<boost::log::v2_mt_posix::sources::aux::logger_holder<boost::log::v2_mt_posix::sources::severity_channel_logger<boost::log::v2_mt_posix::trivial::severity_level, std::string> > >::~shared_ptr()
000403ac  w   DF .text	00000034  Base        boost::detail::sp_counted_impl_pd<boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<wchar_t>::formatting_context>::delete_data*, boost::detail::do_heap_delete<boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<wchar_t>::formatting_context>::delete_data> >::~sp_counted_impl_pd()
00050b28 g    DF .text	00000c94  Base        InitializationHelpers::BuildHomeSettings(Json::Value const&, Machine*)
0003fe28  w   DF .text	00000024  Base        boost::log::v2_mt_posix::attribute_value::impl::~impl()
00064800  w   DF .text	0000013c  Base        boost::date_time::counted_time_rep<boost::posix_time::millisec_posix_time_system_config>::counted_time_rep(boost::gregorian::date const&, boost::posix_time::time_duration const&)
00064aa4  w   DF .text	0000011c  Base        void boost::throw_exception<boost::gregorian::bad_month>(boost::gregorian::bad_month const&)
0004dd50 g    DF .text	000002f8  Base        gpio::GPIO::Initialize()
00045534  w   DF .text	000000a4  Base        boost::thread_exception::~thread_exception()
00079e34 g    DF .text	00000a14  Base        _ZN18StepperConversions13MoveTrapezoidERKSt5tupleIJN12acceleration4MoveES2_S2_EEPd
000578c0 g    DF .text	00000040  Base        Machine::LoadToolhead(unsigned char)
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::out_of_range::out_of_range(std::string const&)
0009545c  w   DO .rodata	0000005c  Base        typeinfo name for boost::log::v2_mt_posix::sources::severity_channel_logger<boost::log::v2_mt_posix::trivial::severity_level, std::string>
0004ebf0 g    DF .text	00000014  Base        ToolheadProgrammer::Power(bool)
00000000      DF *UND*	00000000  GLIBC_2.4   timer_create
0008eddc g    DF .text	000007ec  Base        UnitConverter::Initialize(unsigned int, std::vector<float, std::allocator<float> > const&, std::vector<double, std::allocator<double> > const&, std::vector<unsigned char, std::allocator<unsigned char> > const&)
00000000      DO *UND*	00000000  GLIBCXX_3.4 vtable for std::basic_ifstream<char, std::char_traits<char> >
0007cca8 g    DF .text	00000014  Base        LedSleep
000613f4  w   DF .text	00000168  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::condition_error> >::rethrow() const
0008aacc g    DF .text	00000324  Base        Machine::SetPrintContext(bool, char const*)
00000000      DF *UND*	00000000              Json::Value::end() const
00056490 g    DF .text	00000564  Base        gpio::GPIO::GetValue()
0004f1c0 g    DF .text	00000024  Base        operator-(q14 const&)
000b2690  w   DO .data.rel.ro	00000008  Base        typeinfo for boost::detail::sp_counted_base
0003dbe4  w   DF .text	0000005c  Base        boost::system::error_category::equivalent(int, boost::system::error_condition const&) const
00000000      DF *UND*	00000000  GLIBCXX_3.4.15 std::length_error::~length_error()
00000000      DF *UND*	00000000              Json::Value::isString() const
00038b3c g    DF .text	00000008  Base        NullTransceiver::SetFilamentFanDuty(unsigned char, float)
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)
00089430 g    DF .text	000000b8  Base        SimpleRotatingLogger::FileTooLarge(unsigned char)
0003f9e0  w   DF .text	00000028  Base        boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t>*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> > >::dispose()
0007e6fc  w   DF .text	00000488  Base        boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> >::try_consume(boost::log::v2_mt_posix::record_view const&)
000b2284  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::gregorian::bad_month
00000000      DO *UND*	00000000  GLIBCXX_3.4 vtable for std::overflow_error
00049fe0 g    DF .text	00000038  Base        Machine::ToolheadOk(unsigned char) const
0003dc4c  w   DF .text	00000004  Base        boost::log::v2_mt_posix::aux::light_function<void (boost::log::v2_mt_posix::record_view const&, boost::log::v2_mt_posix::basic_formatting_ostream<char, std::char_traits<char>, std::allocator<char> >&)>::impl<boost::log::v2_mt_posix::basic_formatter<char>::default_formatter>::destroy_impl(boost::log::v2_mt_posix::aux::light_function<void (boost::log::v2_mt_posix::record_view const&, boost::log::v2_mt_posix::basic_formatting_ostream<char, std::char_traits<char>, std::allocator<char> >&)>::impl_base*)
000b1a48  w   DO .data.rel.ro	00000048  Base        vtable for boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> >
000407d4  w   DF .text	00000034  Base        boost::bad_weak_ptr::~bad_weak_ptr()
00040438  w   DF .text	00000024  Base        boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<wchar_t>::formatting_context>::delete_data::~delete_data()
00059b88 g    DF .text	00000ec4  Base        InitializationHelpers::BuildToolheads(Json::Value const&, Machine*)
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char>::add_stream(boost::shared_ptr<std::ostream> const&)
00086f1c g    DF .text	00000014  Base        libstepper::AxisConfiguration::AxisConfiguration()
00065f6c g    DF .text	00000024  Base        Machine::FastAbort()
00045c24 g    DF .text	00000008  Base        HeaterManager::SetError(machine::Error)
0004edf4 g    DF .text	00000030  Base        Machine::DisableSpi()
0003919c g    DF .text	0000003c  Base        Machine::ToggleFan(unsigned char, bool)
00093568 g    DF .text	00000024  Base        prussdrv_pru_send_event
00095068  w   DO .rodata	00000015  Base        typeinfo name for __gnu_cxx::__mutex
00000000      DF *UND*	00000000              boost::detail::thread_data_base::~thread_data_base()
000b1440 g    DO .data.rel.ro	00000054  Base        vtable for ChamberToolheadManager
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::runtime_error::~runtime_error()
0007c67c g    DF .text	00000014  Base        Heat
0009eb34  w   DO .rodata	00000020  Base        typeinfo name for boost::gregorian::bad_weekday
00056a64 g    DF .text	00000024  Base        HAL::Endstop::Triggered()
0004ae9c g    DF .text	00000554  Base        InitializationHelpers::ContainsGantryAxes(Json::Value const&, std::string, std::function<bool (Json::Value const&)>)
0009ef94  w   DO .rodata	00000052  Base        typeinfo name for boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_month>
00000000  w   DF *UND*	00000000  GLIBC_2.4   __pthread_key_create
00062554  w   DF .text	0000008c  Base        boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_year>::~error_info_injector()
0008d4fc g    DF .text	00000030  Base        PRUMap::Init()
00094830  w   DO .rodata	0000009c  Base        typeinfo name for boost::detail::do_heap_delete<boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<wchar_t>::formatting_context>::delete_data>
00067324 g    DF .text	0000003c  Base        Machine::WaitForHeatersAtLeastTarget(unsigned char, bool const*)
000943a0  w   DO .rodata	00000056  Base        typeinfo name for std::_Sp_counted_ptr_inplace<StepperConversions, std::allocator<StepperConversions>, (__gnu_cxx::_Lock_policy)1>
000723f8 g    DF .text	000001a0  Base        Machine::SetPosition(machine::AxisName, float)
0003f38c  w   DF .text	00000068  Base        boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> >*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> > > >::~sp_counted_impl_pd()
0003f644  w   DF .text	00000030  Base        boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::text_file_backend>*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::text_file_backend> > >::dispose()
00094e64  w   DO .rodata	00000051  Base        typeinfo name for boost::log::v2_mt_posix::attributes::constant<boost::log::v2_mt_posix::aux::id<boost::log::v2_mt_posix::aux::process> >::impl
00000000      DF *UND*	00000000  GLIBC_2.4   open
00046bf4 g    DF .text	00000088  Base        BirdwingTransceiver::FixExtruderSign(AbstractTransceiver::ConvertedMove const&) const
000b23a0  w   DO .data.rel.ro	00000020  Base        typeinfo for boost::exception_detail::error_info_injector<boost::bad_weak_ptr>
00064800  w   DF .text	0000013c  Base        boost::date_time::counted_time_rep<boost::posix_time::millisec_posix_time_system_config>::counted_time_rep(boost::gregorian::date const&, boost::posix_time::time_duration const&)
0004cee8 g    DF .text	00000004  Base        BronxToolheadManager::Abort()
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::type_info::operator==(std::type_info const&) const
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_filebuf<char, std::char_traits<char> >::basic_filebuf()
00052114 g    DF .text	00000008  Base        I2C::Close()
0005600c  w   DF .text	0000011c  Base        void boost::throw_exception<boost::gregorian::bad_day_of_month>(boost::gregorian::bad_day_of_month const&)
00062440  w   DF .text	0000008c  Base        boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_month>::~error_info_injector()
0008c53c g    DF .text	000000a8  Base        L3RAMMap::AxisBuffer::BufferCommand(PRUCmd_s const&)
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_ios<wchar_t, std::char_traits<wchar_t> >::init(std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >*)
00000000      DF *UND*	00000000              Json::Value::getMemberNames() const
0008677c g    DF .text	00000014  Base        PRUMap::InitExtraPins(unsigned char, unsigned char, unsigned char)
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_streambuf<char, std::char_traits<char> >::underflow()
000b2050  w   DO .data.rel.ro	00000024  Base        vtable for boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_month>
00061fa4  w   DF .text	000000b4  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_year> >::~clone_impl()
0004f214 g    DF .text	00000014  Base        operator+=(q14&, q14 const&)
000944ac  w   DO .rodata	00000030  Base        typeinfo name for boost::log::v2_mt_posix::aux::id<boost::log::v2_mt_posix::aux::process>
000446d0  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::thread_resource_error> >::~clone_impl()
000b1e20  w   DO .data.rel.ro	00000008  Base        VTT for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_weak_ptr> >
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
00045eb8 g    DF .text	00000048  Base        Machine::GetTemperature(unsigned char, short*) const
000b2328  w   DO .data.rel.ro	00000020  Base        typeinfo for boost::exception_detail::error_info_injector<std::runtime_error>
00086d30 g    DF .text	00000030  Base        secondsToTicks(float)
0007c654 g    DF .text	00000014  Base        PowerMonitorInit
0004a0b4 g    DF .text	00000044  Base        ToolheadManager::SetStatusUpdateTime(float)
00058f34 g    DF .text	0000005c  Base        Machine::ToggleToolheadPower(unsigned char, bool)
00070f94 g    DF .text	00000018  Base        StepperConversions::SetFilamentFan(unsigned char, bool)
00081f4c g    DF .text	000000fc  Base        libstepper::Move(machine::AxisName, int, int, unsigned int, bool, bool, bool, int, int, unsigned int)
00094fa4  w   DO .rodata	00000018  Base        typeinfo name for std::_Sp_make_shared_tag
0003f3f4  w   DF .text	00000070  Base        boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> >*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> > > >::~sp_counted_impl_pd()
00039450 g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::GetExtrusionDistance() const
000b0c24  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::bad_function_call
000b1a98  w   DO .data.rel.ro	00000008  Base        typeinfo for log_obj
0008c698 g    DF .text	0000002c  Base        BirdwingTransceiver::Enable(machine::AxisName, bool)
00000000      DF *UND*	00000000  GLIBC_2.4   pthread_mutex_destroy
00046afc g    DF .text	00000008  Base        BronxToolheadManager::SetFanHeaterPreload(unsigned char)
0004c5e0 g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::SetLEDBlink(unsigned char, float)
00094e08  w   DO .rodata	00000059  Base        typeinfo name for boost::log::v2_mt_posix::attributes::attribute_value_impl<boost::log::v2_mt_posix::aux::id<boost::log::v2_mt_posix::aux::process> >
000642bc  w   DF .text	000000fc  Base        boost::log::v2_mt_posix::aux::light_function<bool (boost::log::v2_mt_posix::attribute_value_set const&)>::impl<boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_not, boost::proto::argsns_::list1<boost::phoenix::actor<boost::log::v2_mt_posix::expressions::aux::unary_function_terminal<boost::log::v2_mt_posix::expressions::has_attribute<std::string> > > >, 1l> > >::invoke_impl(boost::log::v2_mt_posix::aux::light_function<bool (boost::log::v2_mt_posix::attribute_value_set const&)>::impl_base*, boost::log::v2_mt_posix::attribute_value_set const&)
000b0c74  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::less_than_comparable1<boost::posix_time::ptime, boost::equality_comparable<boost::posix_time::ptime, boost::posix_time::ptime, boost::detail::empty_base<boost::posix_time::ptime>, boost::detail::false_t> >
0004a154 g    DF .text	00000028  Base        Heater::Heater()
00051fa4 g    DF .text	0000002c  Base        Logging::GetLevel()
000462c8 g    DF .text	00000338  Base        BronxToolheadManager::BronxSelfCheckState::stringify_results()
0005ebe8 g    DF .text	000000fc  Base        BirdwingTransceiver::ChangeTool(std::shared_ptr<ExtruderInterface>)
00000000      DF *UND*	00000000              Json::Reader::Reader()
00060474 g    DF .text	0000001c  Base        BirdwingTransceiver::~BirdwingTransceiver()
0007d1d8 g    DF .text	00000014  Base        ClearPositionReference
00045534  w   DF .text	000000a4  Base        boost::thread_exception::~thread_exception()
00064140  w   DF .text	00000004  Base        boost::log::v2_mt_posix::aux::light_function<bool (boost::log::v2_mt_posix::attribute_value_set const&)>::impl<boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater_equal, boost::proto::argsns_::list2<boost::log::v2_mt_posix::expressions::attribute_actor<boost::log::v2_mt_posix::trivial::severity_level, boost::log::v2_mt_posix::fallback_to_none, boost::log::v2_mt_posix::trivial::tag::severity, boost::phoenix::actor>, boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::log::v2_mt_posix::trivial::severity_level>, 0l> > >, 2l> > >::destroy_impl(boost::log::v2_mt_posix::aux::light_function<bool (boost::log::v2_mt_posix::attribute_value_set const&)>::impl_base*)
00041828 g    DF .text	000001e8  Base        Machine::ToggleFilamentJam(bool)
0003fb60  w   DF .text	00000060  Base        boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::text_file_backend*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::text_file_backend> >::~sp_counted_impl_pd()
0003fbfc  w   DF .text	00000034  Base        boost::gregorian::bad_day_of_year::~bad_day_of_year()
00086f30 g    DF .text	00000044  Base        libstepper::libUnlock()
00054bd0 g    DF .text	00000134  Base        Machine::SetInterfaceAddress(unsigned char)
000720ec g    DF .text	0000030c  Base        AccelerationManagerImpl::PopNonMoveCommands()
0009f434  w   DO .rodata	0000007a  Base        typeinfo name for boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char>*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> > >
0003a788 g    DF .text	0000004c  Base        BronxToolheadManager::GetHESLog(unsigned short, int*)
00089838 g    DF .text	00000084  Base        SimpleRotatingLogger::InitializeLogIndex()
000b1da8  w   DO .data.rel.ro	00000014  Base        vtable for boost::gregorian::bad_day_of_year
0003ff9c  w   DF .text	00000038  Base        boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> >*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> > > >::get_deleter(std::type_info const&)
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_ofstream<char, std::char_traits<char> >::basic_ofstream(char const*, std::_Ios_Openmode)
00042554 g    DF .text	00000328  Base        BronxToolheadManager::SpecificPrintLogLine() const
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::string::append(std::string const&)
00000000      DF *UND*	00000000  GLIBC_2.4   fread
00066c3c g    DF .text	0000010c  Base        Machine::ProgramToolheadReset(unsigned char)
00055c6c  w   DF .text	00000008  Base        non-virtual thunk to boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::text_file_backend>::unlock()
0004ef64 g    DF .text	00000010  Base        operator<(q14, q14)
00094c64  w   DO .rodata	00000044  Base        typeinfo name for boost::log::v2_mt_posix::aux::visible_type<boost::posix_time::ptime>
0004d1d4 g    DF .text	000005c8  Base        InitializationHelpers::InitializeHeaterFromSettings(Json::Value const&, unsigned char, Machine*)
0004062c  w   DF .text	00000008  Base        boost::detail::sp_counted_impl_pd<boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<wchar_t>::formatting_context>::delete_data*, boost::detail::do_heap_delete<boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<wchar_t>::formatting_context>::delete_data> >::get_untyped_deleter()
00062070  w   DF .text	00000084  Base        boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_year>::~error_info_injector()
00044a00  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::error_info_injector<boost::condition_error>::~error_info_injector()
0003fdf0  w   DF .text	00000038  Base        boost::log::v2_mt_posix::attribute_value::impl::~impl()
000484c8 g    DF .text	0000058c  Base        HAL::ToolheadSPI::Send(unsigned char const*, unsigned short)
0004cfe0 g    DF .text	0000018c  Base        ToolheadManager::Receive(unsigned short)
000b21e0  w   DO .data.rel.ro	00000014  Base        vtable for boost::condition_error
000b0ee8  w   DO .data.rel.ro	00000008  Base        typeinfo for boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::text_file_backend>
00061b4c  w   DF .text	00000070  Base        boost::exception_detail::error_info_injector<std::out_of_range>::~error_info_injector()
0005533c g    DF .text	00000008  Base        Machine::SamplePower(machine::PowerMonitorRail, machine::PowerMonitorValue, unsigned short)
000b3f48  w   DO .bss	00000004  Base        guard variable for boost::log::v2_mt_posix::aux::lazy_singleton<boost::log::v2_mt_posix::sources::aux::logger_singleton<log_obj>, boost::shared_ptr<boost::log::v2_mt_posix::sources::aux::logger_holder<boost::log::v2_mt_posix::sources::severity_channel_logger<boost::log::v2_mt_posix::trivial::severity_level, std::string> > > >::get_instance()::instance
00000000      DF *UND*	00000000  CXXABI_1.3  __cxa_bad_typeid
00000000      DF *UND*	00000000  GLIBC_2.4   pthread_rwlock_unlock
000b2438  w   DO .data.rel.ro	00000020  Base        typeinfo for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::thread_resource_error> >
0003fe84  w   DF .text	00000024  Base        boost::log::v2_mt_posix::attribute::impl::~impl()
000905a4 g    DF .text	00000088  Base        acceleration::RawMove::RawMove(unsigned int)
0005596c  w   DF .text	0000004c  Base        std::logic_error::logic_error(std::logic_error const&)
00045488  w   DF .text	000000ac  Base        boost::thread_exception::~thread_exception()
00055344 g    DF .text	000000f0  Base        PowerMonitor::QueryPowerInfo()
0006acb4  w   DF .text	000000dc  Base        std::_Deque_base<char, std::allocator<char> >::_Deque_base()
0007f648 g    DF .text	0000022c  Base        Machine::Shutdown(bool)
0003fd4c  w   DF .text	00000034  Base        boost::gregorian::bad_weekday::~bad_weekday()
00000000      DF *UND*	00000000              boost::thread::detach()
000405c8  w   DF .text	00000008  Base        boost::detail::sp_counted_impl_pd<std::basic_ostream<wchar_t, std::char_traits<wchar_t> >*, boost::log::v2_mt_posix::empty_deleter>::get_untyped_deleter()
00000000      DF *UND*	00000000  GLIBC_2.4   pthread_rwlock_wrlock
0004bf4c g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::SetFilamentFan(bool)
00000000      DF *UND*	00000000              boost::system::system_category()
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::runtime_error::~runtime_error()
0007f178 g    DF .text	000004d0  Base        Machine::FindKnobZ(float, float)
00000000      DO *UND*	00000000  GLIBCXX_3.4 vtable for std::ostream
00092048 g    DF .text	00000130  Base        AccelerationManager::LoadSettings(Json::Value)
00000000      DF *UND*	00000000  GLIBC_2.4   timer_settime
00033f84 g    DF .init	00000000  Base        _init
0007c690 g    DF .text	00000058  Base        GetAxesPosition
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::attribute_value_set::find(boost::log::v2_mt_posix::attribute_name) const
00052dd8 g    DF .text	00000150  Base        I2C::Open()
000b25a0  w   DO .data.rel.ro	00000020  Base        vtable for boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::text_file_backend>*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::text_file_backend> > >
00039628 g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::IsPositionRetrieved() const
0004ceec g    DF .text	00000060  Base        ToolheadManager::SetTemperatureTarget(short)
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::string::append(char const*, unsigned int)
000b28b8  w   DO .data.rel.ro	00000008  Base        typeinfo for boost::log::v2_mt_posix::type_info_wrapper::uninitialized
0003b0d0 g    DF .text	0000002c  Base        acceleration::FanCommand::ProcessCommand()
0003e554  w   DF .text	00000084  Base        boost::exception_detail::error_info_injector<boost::bad_weak_ptr>::~error_info_injector()
000b1ba0  w   DO .data.rel.ro	00000054  Base        vtable for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_weekday> >
0003b0a4 g    DF .text	0000002c  Base        acceleration::FanDutyCommand::ProcessCommand()
0006c8ec g    DF .text	00000160  Base        Machine::GetCachedToolUsageStats(unsigned char, machine::ToolUsage*)
00000000      DF *UND*	00000000  GCC_3.5     __aeabi_fmul
0007c3a0 g    DF .text	00000044  Base        GetPowerValue
0004007c  w   DF .text	00000038  Base        boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::text_file_backend>*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::text_file_backend> > >::get_deleter(std::type_info const&)
000405dc  w   DF .text	00000008  Base        boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> >*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> > > >::get_untyped_deleter()
0003e264  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_weak_ptr> >::~clone_impl()
0003fd4c  w   DF .text	00000034  Base        boost::gregorian::bad_weekday::~bad_weekday()
00000000      DF *UND*	00000000  CXXABI_1.3  __dynamic_cast
000735c4  w   DF .text	0000020c  Base        __gnu_cxx::__normal_iterator<char*, std::string> boost::algorithm::detail::process_segment_helper<false>::operator()<std::deque<char, std::allocator<char> >, std::string, __gnu_cxx::__normal_iterator<char*, std::string> >(std::deque<char, std::allocator<char> >&, std::string&, __gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>)
000b4e70 g    DO .bss	00000004  Base        MemRegion::mem_fd
0007e274  w   DF .text	00000488  Base        boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::text_file_backend>::try_consume(boost::log::v2_mt_posix::record_view const&)
0006dc64  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_year> >::clone() const
00065d88 g    DF .text	0000006c  Base        Machine::GetHGantryConversion(float const (&) [4], float*) const
0004eb30 g    DF .text	000000c0  Base        HAL::Power::TogglePower(HAL::Power::Powerable, unsigned char, bool)
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::sources::aux::get_severity_level()
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
0004cdec g    DF .text	000000fc  Base        ToolheadManager::Abort()
000891e8 g    DF .text	00000034  Base        AccelerationManager::BufferIsFull() const
0004045c  w   DF .text	00000034  Base        boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>::formatting_context>::delete_data::~delete_data()
0006dc74  w   DF .text	00000134  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_month> >::clone() const
0004a090 g    DF .text	0000000c  Base        Machine::ToolheadBlocking(unsigned char) const
00000000      DO *UND*	00000000  GLIBCXX_3.4 vtable for std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >
0009f7d8  w   DO .rodata	00000020  Base        typeinfo name for boost::thread_resource_error
00070654 g    DF .text	00000594  Base        AccelerationManagerImpl::ComputeTrapezoidLeg(acceleration::Block const&, float, float, float, int)
0007c848 g    DF .text	00000014  Base        DisableSpi
0009ea54  w   DO .rodata	0000005d  Base        typeinfo name for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_month> >
00000000      DF *UND*	00000000  GLIBCXX_3.4.11 std::ctype<char>::_M_widen_init() const
0007ec04 g    DF .text	00000374  Base        accel_log::log()
0007c9d4 g    DF .text	0000002c  Base        SetLedBlink
000b0f30  w   DO .data.rel.ro	00000014  Base        vtable for boost::bad_lexical_cast
00044f50  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::lock_error> >::~clone_impl()
00093af4 g    DF .text	0000022c  Base        prussdrv_exit
00000000      DF *UND*	00000000              Json::Value::operator[](std::string const&) const
000b11a0  w   DO .data.rel.ro	00000014  Base        vtable for boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<wchar_t>::formatting_context>::delete_data
00000000      DO *UND*	00000000  GLIBCXX_3.4 vtable for std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >
000b0e90  w   DO .data.rel.ro	00000024  Base        vtable for boost::system::error_category
00056128  w   DF .text	000001cc  Base        boost::gregorian::date::date(boost::gregorian::greg_year, boost::gregorian::greg_month, boost::gregorian::greg_day)
00000000      DF *UND*	00000000  GCC_3.5     __aeabi_dsub
0007c978 g    DF .text	0000003c  Base        SetKnobColor
0009385c g    DF .text	00000298  Base        prussdrv_pruintc_init
000933f8 g    DF .text	00000028  Base        __prussintc_set_hmr
000654b0 g    DF .text	000006c0  Base        InitializationHelpers::ShouldRebuildToolheads(Json::Value const&, std::map<std::string, std::vector<unsigned char, std::allocator<unsigned char> >, std::less<std::string>, std::allocator<std::pair<std::string const, std::vector<unsigned char, std::allocator<unsigned char> > > > > const&)
00066b28 g    DF .text	000000e4  Base        ToolheadProgrammer::Reset()
0003fa70  w   DF .text	00000060  Base        boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t>*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> > >::~sp_counted_impl_pd()
000b2008  w   DO .data.rel.ro	00000024  Base        vtable for boost::exception_detail::error_info_injector<std::out_of_range>
00055434 g    DF .text	00000008  Base        Machine::QueryPowerInfo()
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::core::get()
00000000      DO *UND*	00000000  GLIBCXX_3.4 vtable for std::length_error
00044e38  w   DF .text	00000118  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::lock_error> >::~clone_impl()
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::_Rb_tree_increment(std::_Rb_tree_node_base const*)
00000000      DF *UND*	00000000  GCC_3.5     __aeabi_ldivmod
000b2720 g    DO .data.rel.ro	0000003c  Base        vtable for NullTransceiver
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::replace(__gnu_cxx::__normal_iterator<wchar_t*, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > >, __gnu_cxx::__normal_iterator<wchar_t*, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > >, wchar_t*, wchar_t*)
00049b48 g    DF .text	0000000c  Base        ToolheadManager::GetError() const
0008ce1c g    DF .text	0000045c  Base        PRUMap::VerifyClearBuffer(bool)
0007c870 g    DF .text	00000020  Base        MotorAbort
000b0eb8  w   DO .data.rel.ro	00000018  Base        vtable for boost::log::v2_mt_posix::sinks::file::collector
0003fe84  w   DF .text	00000024  Base        boost::log::v2_mt_posix::attribute::impl::~impl()
00074500 g    DF .text	00000050  Base        GpioMem::SetValue(int, bool)
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::sinks::text_file_backend::flush()
00049d88 g    DF .text	00000024  Base        ToolheadManager::Unpack32BitFrom8Bit(unsigned char const*)
00040490  w   DF .text	00000024  Base        boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>::formatting_context>::delete_data::~delete_data()
0008c808 g    DF .text	00000038  Base        L3RAMMap::AxisBuffer::AxisBuffer(unsigned char*)
0003e53c  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_weak_ptr> >::~clone_impl()
00000000  w   D  *UND*	00000000              _Jv_RegisterClasses
0004987c  w   DF .text	0000004c  Base        std::runtime_error::runtime_error(std::runtime_error const&)
00044c08  w   DF .text	000000f8  Base        boost::exception_detail::error_info_injector<boost::condition_error>::~error_info_injector()
00061f18  w   DF .text	00000084  Base        boost::exception_detail::error_info_injector<boost::gregorian::bad_year>::~error_info_injector()
000b4e84  w   DO .bss	00000004  Base        guard variable for boost::log::v2_mt_posix::aux::lazy_singleton<boost::log::v2_mt_posix::sources::aux::logger_singleton<telem_obj>, boost::shared_ptr<boost::log::v2_mt_posix::sources::aux::logger_holder<boost::log::v2_mt_posix::sources::severity_channel_logger<boost::log::v2_mt_posix::trivial::severity_level, std::string> > > >::get_instance()::instance
00039494 g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::GetToolID() const
00088a78 g    DF .text	0000000c  Base        AccelerationManagerImpl::ToggleExpendBuffer(bool)
000838d0  w   DF .text	000006d0  Base        boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> >::try_consume(boost::log::v2_mt_posix::record_view const&)
00044504  w   DF .text	000000a4  Base        boost::system::system_error::~system_error()
0005565c  w   DF .text	000000f8  Base        boost::thread_exception::thread_exception(int, char const*)
00000000      DF *UND*	00000000  GCC_3.5     __aeabi_dadd
0003e770  w   DF .text	0000008c  Base        boost::log::v2_mt_posix::sinks::basic_sink_frontend::~basic_sink_frontend()
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::sources::aux::throw_odr_violation(std::type_info const&, std::type_info const&, boost::log::v2_mt_posix::sources::aux::logger_holder_base const&)
00043d60  w   DF .text	00000120  Base        boost::exception_detail::copy_boost_exception(boost::exception*, boost::exception const*)
0007b318 g    DF .text	0000003c  Base        AccelerationManagerImpl::PopMove()
00062438  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::error_info_injector<boost::gregorian::bad_weekday>::~error_info_injector()
0004e048 g    DF .text	00000554  Base        gpio::GPIO::SetValue(bool)
0007cc94 g    DF .text	00000014  Base        LedWake
0009ed78  w   DO .rodata	00000057  Base        typeinfo name for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_weak_ptr> >
000b1f30  w   DO .data.rel.ro	00000024  Base        vtable for boost::exception_detail::error_info_injector<boost::gregorian::bad_year>
000660dc g    DF .text	00000280  Base        InitializationHelpers::AddToolheadToSpecificArray(std::shared_ptr<ToolheadManager>, std::string, unsigned char, std::map<int, std::shared_ptr<ExtruderInterface>, std::less<int>, std::allocator<std::pair<int const, std::shared_ptr<ExtruderInterface> > > >&, std::map<int, std::shared_ptr<HESInterface>, std::less<int>, std::allocator<std::pair<int const, std::shared_ptr<HESInterface> > > >&)
0004cf4c g    DF .text	00000028  Base        ToolheadManager::ResetWatchdog()
00000000      DF *UND*	00000000  GCC_3.5     __aeabi_fcmpeq
0004a130 g    DF .text	0000000c  Base        Machine::ToolheadAcknowledgedHes(unsigned char) const
00000000      DF *UND*	00000000  GCC_3.5     __aeabi_f2uiz
00069170 g    DF .text	00000008  Base        AccelerationManager::QueueTemperatureTarget(unsigned char, short, unsigned int)
00067d30  w   DF .text	00000100  Base        boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>::~basic_formatting_sink_frontend()
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char>::flush()
000935c8 g    DF .text	00000018  Base        prussdrv_map_extmem
00070f10 g    DF .text	00000018  Base        StepperConversions::BufferIsFull(bool)
00043564 g    DF .text	0000008c  Base        Machine::ProgramYonkers(char const*, unsigned char)
00000000      DO *UND*	00000000  GLIBCXX_3.4 vtable for std::basic_ios<wchar_t, std::char_traits<wchar_t> >
000947bc  w   DO .rodata	00000024  Base        typeinfo name for boost::noncopyable_::noncopyable
0004ecfc g    DF .text	00000030  Base        Machine::EnableSpi()
0004000c  w   DF .text	00000038  Base        boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> >*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> > > >::get_deleter(std::type_info const&)
0007c4bc g    DF .text	00000020  Base        GetExtrusionDistancePercent
000b0d50  w   DO .data.rel.ro	0000000c  Base        typeinfo for std::_Sp_counted_ptr<acceleration::TemperatureCommand*, (__gnu_cxx::_Lock_policy)1>
0004f8a8 g    DF .text	00000254  Base        BronxToolheadManager::~BronxToolheadManager()
000905a4 g    DF .text	00000088  Base        acceleration::RawMove::RawMove(unsigned int)
00094cc4  w   DO .rodata	00000052  Base        typeinfo name for boost::log::v2_mt_posix::attributes::basic_clock<boost::log::v2_mt_posix::attributes::local_time_traits>::impl
000811a8 g    DF .text	00000014  Base        BirdwingTransceiver::UpdateStallStatus()
00000000      DO *UND*	00000000  GLIBCXX_3.4 vtable for std::exception
00058f90 g    DF .text	00000084  Base        ChamberToolheadManager::ChamberToolheadManager(unsigned char)
000624cc  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_month>::~error_info_injector()
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_M_dispose(std::allocator<wchar_t> const&)
0007cb30 g    DF .text	00000024  Base        SetHeaterDuty
0006d180  w   DF .text	00000174  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::condition_error> >::clone() const
000878f4 g    DF .text	00000168  Base        libstepper::IsRunning()
00000000      DF *UND*	00000000  GCC_3.5     __aeabi_f2iz
00049854  w   DF .text	00000014  Base        std::dec(std::ios_base&)
000890cc g    DF .text	0000002c  Base        AccelerationManagerImpl::HasSpaceFor(unsigned int) const
00044b08  w   DF .text	000000f8  Base        boost::exception_detail::error_info_injector<boost::lock_error>::~error_info_injector()
0003f8b4  w   DF .text	00000034  Base        boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> >::try_lock()
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::aux::default_attribute_names::process_id()
00000000      DF *UND*	00000000  GLIBC_2.4   sqrtf
000b0cfc  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::log::v2_mt_posix::attributes::counter<unsigned int>::impl_inc
000536e0 g    DF .text	00000218  Base        InterfaceLED::SetMooseChamberBrightness(float)
000b0c48  w   DO .data.rel.ro	0000000c  Base        typeinfo for std::_Sp_counted_ptr_inplace<BronxToolheadManager, std::allocator<BronxToolheadManager>, (__gnu_cxx::_Lock_policy)1>
0007d258 g    DF .text	00000020  Base        Iterate
0009f9d4  w   DO .rodata	00000030  Base        typeinfo name for boost::log::v2_mt_posix::aux::visible_type<std::string>
0006a354 g    DF .text	00000034  Base        AccelerationManager::~AccelerationManager()
000b0c00  w   DO .data.rel.ro	00000008  Base        typeinfo for ExtruderInterface
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::attribute_set::~attribute_set()
000b1908  w   DO .data.rel.ro	00000048  Base        vtable for boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::text_file_backend>
000b2660  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::text_file_backend>*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::text_file_backend> > >
00071198 g    DF .text	00000024  Base        UnitConverter::StepsToMM(machine::AxisName, int) const
000b0d2c  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::log::v2_mt_posix::attributes::attribute_value_impl<boost::posix_time::ptime>
00045f70 g    DF .text	00000068  Base        HeaterManager::ResetWatchdog()
00093d5c g    DF .text	00000028  Base        prussdrv_init
000738c8  w   DF .text	00000098  Base        std::deque<char, std::allocator<char> >::_M_reserve_elements_at_front(unsigned int)
00062660  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::error_info_injector<std::runtime_error>::~error_info_injector()
00062320  w   DF .text	00000084  Base        boost::exception_detail::error_info_injector<boost::gregorian::bad_month>::~error_info_injector()
0003f878  w   DF .text	00000034  Base        boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> >::try_lock()
00000000      DF *UND*	00000000  GLIBCXX_3.4.13 std::basic_ofstream<char, std::char_traits<char> >::open(std::string const&, std::_Ios_Openmode)
0008c6c4 g    DF .text	00000060  Base        L3RAMMap::BufferPause(int, unsigned int, bool)
000827f0  w   DF .text	00000014  Base        GpioMem::~GpioMem()
00000000      DF *UND*	00000000  CXXABI_1.3.1 __cxa_get_exception_ptr
0004f178 g    DF .text	00000024  Base        operator*=(q14&, q14 const&)
0006e78c g    DF .text	00000d88  Base        AccelerationManagerImpl::BlendBlocks(acceleration::Block&, acceleration::Block&, std::vector<acceleration::ModifiedJerkFunctor, std::allocator<acceleration::ModifiedJerkFunctor> > const&)
0005f110 g    DF .text	000000d4  Base        Machine::HesLogLoaded(unsigned char, bool*) const
000b1ef8  w   DO .data.rel.ro	00000018  Base        vtable for boost::exception_detail::clone_base
000b24e0  w   DO .data.rel.ro	00000020  Base        vtable for boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char>*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> > >
00040540  w   DF .text	00000024  Base        boost::log::v2_mt_posix::sinks::sink::~sink()
0004cf74 g    DF .text	0000006c  Base        ToolheadManager::LoadWatchdogSettings(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
0008adf0 g    DF .text	00000020  Base        GpioMem::GpioMem()
00061f18  w   DF .text	00000084  Base        boost::exception_detail::error_info_injector<boost::gregorian::bad_year>::~error_info_injector()
00065df4 g    DF .text	00000098  Base        Machine::GetMoveDelta(float const (&) [4], float*)
00040388  w   DF .text	00000024  Base        boost::detail::sp_counted_impl_pd<boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>::formatting_context>::delete_data*, boost::detail::do_heap_delete<boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>::formatting_context>::delete_data> >::~sp_counted_impl_pd()
0008f5c8 g    DF .text	000000cc  Base        StepperConversions::Initialize(std::vector<float, std::allocator<float> > const&)
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::__throw_bad_cast()
00064fbc  w   DF .text	000001b0  Base        boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> >::flush()
0007cf88 g    DF .text	00000024  Base        SetToolheadIdleUpdatePeriod
00043f74  w   DF .text	000001fc  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_weak_ptr> >::clone() const
00061c90  w   DF .text	00000084  Base        boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_month>::~error_info_injector()
000621b8  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_weekday> >::~clone_impl()
0009d658 g    DO .rodata	00000012  Base        typeinfo name for ToolheadManager
0007ebb0 g    DF .text	00000014  Base        AccelerationManager::TelemetryChannelName()
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::sinks::text_file_backend::set_file_collector(boost::shared_ptr<boost::log::v2_mt_posix::sinks::file::collector> const&)
00064bc0  w   DF .text	0000011c  Base        void boost::throw_exception<boost::gregorian::bad_year>(boost::gregorian::bad_year const&)
0003e544  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_weak_ptr> >::~clone_impl()
00051d7c g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::ProgramYonkers(char const*)
0007c1ac g    DF .text	00000110  Base        MemRegion::MemRegion(long, unsigned int)
00070c54 g    DF .text	00000068  Base        StepperConversions::StepperConversions(std::shared_ptr<AbstractTransceiver>)
000b4d98 g    DO .bss	00000004  Base        Logging::log_level_
000395f8 g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::LoadAccelSettings(unsigned char, unsigned char, int, unsigned char, unsigned char)
00000000      DF *UND*	00000000              Json::Value::isConvertibleTo(Json::ValueType) const
00086f14 g    DF .text	00000008  Base        libstepper::CacheBuffer()
00000000      DO *UND*	00000000  GLIBCXX_3.4 std::cout
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::basic_formatter<char> boost::log::v2_mt_posix::parse_formatter<char>(char const*, char const*)
000b2458  w   DO .data.rel.ro	00000024  Base        vtable for boost::exception_detail::error_info_injector<boost::thread_resource_error>
00000000      DF *UND*	00000000  CXXABI_1.3  __cxa_call_unexpected
00000000      DF *UND*	00000000  GLIBCXX_3.4 operator delete[](void*)
000432c0 g    DF .text	00000088  Base        Machine::UpdateToolUsageStats(unsigned char)
00068108  w   DF .text	00000008  Base        non-virtual thunk to boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::text_file_backend>::~synchronous_sink()
0008d2ac g    DF .text	0000000c  Base        PRUMap::GetRuntimeState()
00046600 g    DF .text	00000108  Base        crc16(unsigned char*, unsigned short)
00000000      DO *UND*	00000000  CXXABI_1.3  vtable for __cxxabiv1::__si_class_type_info
00000000      DF *UND*	00000000              Json::Value::asBool() const
00082e18  w   DF .text	00000274  Base        boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<wchar_t>::formatting_context::formatting_context(unsigned int, std::locale const&, boost::log::v2_mt_posix::basic_formatter<wchar_t> const&)
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::string::_M_replace_safe(unsigned int, unsigned int, char const*, unsigned int)
000b0c54  w   DO .data.rel.ro	00000008  Base        typeinfo for boost::detail::empty_base<boost::posix_time::ptime>
0003fdbc  w   DF .text	00000034  Base        boost::gregorian::bad_day_of_month::~bad_day_of_month()
0006cf18  w   DF .text	00000258  Base        boost::log::v2_mt_posix::basic_formatting_ostream<char, std::char_traits<char>, std::allocator<char> >& boost::log::v2_mt_posix::basic_formatting_ostream<char, std::char_traits<char>, std::allocator<char> >::formatted_write<char>(char const*, int)
00000000      DF *UND*	00000000  GLIBCXX_3.4.9 std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, int)
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::string::assign(std::string const&)
00000000      DF *UND*	00000000  GLIBC_2.4   roundf
00061d14  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_month>::~error_info_injector()
0005f03c g    DF .text	000000d4  Base        Machine::GetSyncState(unsigned char, bool*) const
0003fbc0  w   DF .text	0000003c  Base        boost::gregorian::bad_day_of_year::~bad_day_of_year()
000b1a1c  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>
00040860  w   DF .text	00000034  Base        boost::detail::sp_counted_base::~sp_counted_base()
000453e4  w   DF .text	000000a4  Base        boost::condition_error::~condition_error()
0004c0c8 g    DF .text	00000048  Base        BronxToolheadManager::EndHESLog()
0004be34 g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::ConfigureJamDetection(float)
0007d1b8 g    DF .text	00000020  Base        SetPositionReference
0003a414 g    DF .text	00000190  Base        NullTransceiver::MoveTrapezoid(std::array<std::vector<AbstractTransceiver::ConvertedMove, std::allocator<AbstractTransceiver::ConvertedMove> >, 3u> const&)
00000000      DF *UND*	00000000  GLIBC_2.4   pthread_attr_destroy
000b1380 g    DO .data.rel.ro	0000000c  Base        typeinfo for acceleration::TemperatureCommand
000b1090  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::log::v2_mt_posix::sources::aux::logger_holder<boost::log::v2_mt_posix::sources::severity_channel_logger<boost::log::v2_mt_posix::trivial::severity_level, std::string> >
000b0c80  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::less_than_comparable<boost::posix_time::ptime, boost::equality_comparable<boost::posix_time::ptime, boost::posix_time::ptime, boost::detail::empty_base<boost::posix_time::ptime>, boost::detail::false_t>, boost::detail::empty_base<boost::posix_time::ptime>, boost::detail::true_t>
00065d04 g    DF .text	00000028  Base        Machine::Move(float const*, float)
000b1aa8  w   DO .data.rel.ro	00000008  Base        VTT for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_year> >
00053c98 g    DF .text	00000008  Base        Machine::SetKnobBlink(float)
00043f20  w   DF .text	00000054  Base        boost::exception::~exception()
0009e89c  w   DO .rodata	00000036  Base        typeinfo name for boost::log::v2_mt_posix::aux::visible_type<log_obj>
00056af0 g    DF .text	00000014  Base        ToolheadManager::Power12V(bool)
000396d4 g    DF .text	00000020  Base        BirdwingTransceiver::SetFilamentFanDuty(unsigned char, float)
000b1bf8  w   DO .data.rel.ro	00000014  Base        vtable for boost::gregorian::bad_weekday
0003e078  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_weekday> >::~clone_impl()
0007c8d8 g    DF .text	00000024  Base        SetPosition
00039484 g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::GetToolUsageStats() const
0008978c g    DF .text	000000ac  Base        SimpleRotatingLogger::FileExists(unsigned char)
00094338  w   DO .rodata	00000014  Base        typeinfo name for ExtruderInterface
00040634  w   DF .text	00000020  Base        boost::detail::sp_counted_impl_pd<boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<wchar_t>::formatting_context>::delete_data*, boost::detail::do_heap_delete<boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<wchar_t>::formatting_context>::delete_data> >::dispose()
0004c7ec g    DF .text	000001a0  Base        BronxToolheadManager::MoveTrapezoid(short const (&) [3], int const (&) [3], int const (&) [3], unsigned int const (&) [3], int const (&) [3], bool const (&) [3])
000b19e0  w   DO .data.rel.ro	00000020  Base        vtable for boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>
000711bc g    DF .text	00000020  Base        UnitConverter::MMtoSteps(machine::AxisName, float) const
000688d0  w   DF .text	00000008  Base        non-virtual thunk to boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> >::~synchronous_sink()
0007f0e4 g    DF .text	00000094  Base        Machine::AbortAndUpdatePosition()
000a09f4  w   DO .rodata	00000038  Base        typeinfo name for boost::log::v2_mt_posix::aux::visible_type<telem_obj>
0003b144 g    DF .text	0000002c  Base        ChamberToolheadManager::SpecificPrintLogTitles() const
00000000      DF *UND*	00000000              Json::Value::isUInt() const
0003fb60  w   DF .text	00000060  Base        boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::text_file_backend*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::text_file_backend> >::~sp_counted_impl_pd()
000b23c0  w   DO .data.rel.ro	00000010  Base        vtable for boost::exception
00047024 g    DF .text	00000038  Base        PowerMonitor::GetPowerValue(machine::PowerMonitorRail, machine::PowerMonitorValue, unsigned short*, float*, float*)
00000000      DF *UND*	00000000  GLIBC_2.4   sleep
00046bac g    DF .text	00000048  Base        BronxToolheadManager::BronxSelfCheckState::BronxSelfCheckState()
0004ccec g    DF .text	000000f8  Base        BronxToolheadManager::ResetToolUsage()
00000000      DF *UND*	00000000  GLIBC_2.4   lseek
000b2d50  w   DO .data.rel.ro	00000008  Base        typeinfo for telem_obj
0004caa4 g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::RetrieveToolUsageStats()
000745a0 g    DF .text	0000004c  Base        DebugGPIO::Initialize()
0007cc34 g    DF .text	00000020  Base        ToggleAccelerationLookahead
00095010  w   DO .rodata	00000058  Base        typeinfo name for std::_Sp_counted_ptr<acceleration::TemperatureCommand*, (__gnu_cxx::_Lock_policy)1>
00094800  w   DO .rodata	0000002f  Base        typeinfo name for boost::log::v2_mt_posix::sinks::file::collector
00040044  w   DF .text	00000038  Base        boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::text_file_backend*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::text_file_backend> >::get_deleter(std::type_info const&)
0007d170 g    DF .text	00000024  Base        GetToolId
0006a354 g    DF .text	00000034  Base        AccelerationManager::~AccelerationManager()
0003f980  w   DF .text	00000060  Base        boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char>*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> > >::~sp_counted_impl_pd()
000b0f18  w   DO .data.rel.ro	00000008  Base        typeinfo for boost::log::v2_mt_posix::aux::visible_type<boost::log::v2_mt_posix::aux::id<boost::log::v2_mt_posix::aux::process> >
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::attribute::impl::operator delete(void*, unsigned int)
00094d58  w   DO .rodata	0000003a  Base        typeinfo name for boost::log::v2_mt_posix::attributes::counter<unsigned int>::impl_dec
000b0f48  w   DO .data.rel.ro	00000008  Base        typeinfo for std::_Sp_make_shared_tag
0007cde0 g    DF .text	0000002c  Base        GetHesLog
0003f83c  w   DF .text	00000034  Base        boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::text_file_backend>::try_lock()
0007d278 g    DF .text	00000020  Base        DestroyMachine
000b26b8  w   DO .data.rel.ro	00000014  Base        vtable for boost::thread_exception
000b3efc g    D  .bss	00000000  Base        __bss_start__
000497e0  w   DF .text	00000074  Base        boost::detail::spinlock::lock()
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_ios<char, std::char_traits<char> >::init(std::basic_streambuf<char, std::char_traits<char> >*)
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::seekpos(std::fpos<__mbstate_t>, std::_Ios_Openmode)
00086c88 g    DF .text	00000004  Base        BirdwingTransceiver::CurrentCommandIndex() const
00000000      DF *UND*	00000000  GLIBCXX_3.4.18 std::this_thread::__sleep_for(std::chrono::duration<long long, std::ratio<1ll, 1ll> >, std::chrono::duration<long long, std::ratio<1ll, 1000000000ll> >)
000954ec  w   DO .rodata	0000003a  Base        typeinfo name for boost::log::v2_mt_posix::sources::aux::logger_holder_base
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::sinks::file::aux::make_collector(boost::filesystem::path const&, unsigned long long, unsigned long long)
0004a018 g    DF .text	00000018  Base        Machine::ToolheadOk(unsigned char, bool*) const
000403e0  w   DF .text	00000024  Base        boost::detail::sp_counted_impl_pd<boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<wchar_t>::formatting_context>::delete_data*, boost::detail::do_heap_delete<boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<wchar_t>::formatting_context>::delete_data> >::~sp_counted_impl_pd()
0008e308 g    DF .text	00000630  Base        BirdwingTransceiver::GetAxesPositions(std::vector<int, std::allocator<int> >*) const
000401d0  w   DF .text	00000034  Base        boost::log::v2_mt_posix::aux::basic_ostringstreambuf<char, std::char_traits<char>, std::allocator<char> >::~basic_ostringstreambuf()
000b0f00  w   DO .data.rel.ro	00000008  Base        typeinfo for boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> > >
0004ec04 g    DF .text	00000034  Base        ToolheadProgrammer::ToolheadProgrammer(unsigned char)
0007d298 g    DF .text	00000064  Base        CreateParserInterface
0003fc6c  w   DF .text	00000034  Base        boost::gregorian::bad_month::~bad_month()
00061f08  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_year> >::~clone_impl()
0008120c g    DF .text	0000008c  Base        libstepper::Off(std::set<machine::AxisName, std::less<machine::AxisName>, std::allocator<machine::AxisName> > const&)
0003ff64  w   DF .text	00000038  Base        boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char>*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> > >::get_deleter(std::type_info const&)
0007c8b8 g    DF .text	00000020  Base        IsInitialized
00040598  w   DF .text	00000024  Base        boost::log::v2_mt_posix::aux::locking_ptr_counter_base::~locking_ptr_counter_base()
00057844 g    DF .text	00000024  Base        ToolheadManager::Disable()
0004c98c g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::MoveTrapezoid(short const (&) [3], int const (&) [3], int const (&) [3], unsigned int const (&) [3], int const (&) [3], bool const (&) [3])
000b22b0  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::gregorian::bad_weekday
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::flush()
000b1a14  w   DO .data.rel.ro	00000008  Base        typeinfo for boost::log::v2_mt_posix::aux::locking_ptr_counter_base
00094a94  w   DO .rodata	0000005b  Base        typeinfo name for boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> >
00040798  w   DF .text	0000003c  Base        boost::bad_weak_ptr::~bad_weak_ptr()
0007c304 g    DF .text	00000024  Base        SyncStateConfirmed
0007ce58 g    DF .text	00000024  Base        ToolheadAcknowledgedHes
0006defc g    DF .text	00000194  Base        AccelerationMath::EnforceExtruderSpeed(std::vector<float, std::allocator<float> > const&)
000b1374 g    DO .data.rel.ro	0000000c  Base        typeinfo for acceleration::FanCommand
00000000      DF *UND*	00000000  GCC_3.5     __aeabi_fcmplt
00069b18 g    DF .text	00000040  Base        AccelerationManager::AccelerationManager(std::shared_ptr<StepperConversions>)
0004d79c g    DF .text	00000598  Base        gpio::GPIO::SetLEDTrigger(char const*, char const*)
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::runtime_error::what() const
0003fe28  w   DF .text	00000024  Base        boost::log::v2_mt_posix::attribute_value::impl::~impl()
00046b90 g    DF .text	0000001c  Base        BronxToolheadManager::ToolSelfCheckState::ToolSelfCheckState()
0003def8  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_month> >::~clone_impl()
00049fd4 g    DF .text	0000000c  Base        ToolheadManager::IsConnected() const
00000000      DF *UND*	00000000  GLIBC_2.4   pthread_attr_init
00050164 g    DF .text	00000500  Base        HAL::ToolheadSPI::Initialize(unsigned char)
0008d57c g    DF .text	00000028  Base        Timer64P::Timer64P(int)
0006d4a4  w   DF .text	00000190  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::thread_resource_error> >::clone() const
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::core::add_sink(boost::shared_ptr<boost::log::v2_mt_posix::sinks::sink> const&)
00046fb8 g    DF .text	0000006c  Base        BirdwingTransceiver::BirdwingTransceiver()
00000000      DF *UND*	00000000              Json::ValueIteratorBase::deref() const
0009e65c  w   DO .rodata	00000058  Base        typeinfo name for boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> >
000405fc  w   DF .text	00000008  Base        boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::text_file_backend>*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::text_file_backend> > >::get_untyped_deleter()
0007fb34 g    DF .text	0000007c  Base        Machine::Abort()
0008924c g    DF .text	000001e4  Base        SimpleRotatingLogger::GetName(unsigned char)
000b0c5c  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::equality_comparable1<boost::posix_time::ptime, boost::detail::empty_base<boost::posix_time::ptime> >
0006e5fc g    DF .text	000000b4  Base        AccelerationMath::GetIntersectionDistance(float, float, float, float)
00062058  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_year> >::~clone_impl()
000944dc  w   DO .rodata	0000002f  Base        typeinfo name for boost::log::v2_mt_posix::aux::id<boost::log::v2_mt_posix::aux::thread>
000b4f2c g    D  .bss	00000000  Base        _end
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::core::get_logging_enabled() const
00086c44 g    DF .text	00000044  Base        libstepper::GetCurrentCommandIndex()
0006e4f8 g    DF .text	0000005c  Base        AccelerationMath::GetStartSpeed(float, float, float)
0004a584 g    DF .text	00000048  Base        Machine::GetToolheadSelfCheckResults(unsigned char, char const*, bool*) const
0007d03c g    DF .text	00000024  Base        IsToolConnected
0004f154 g    DF .text	00000024  Base        operator/(q14 const&, q14 const&)
00061e4c  w   DF .text	000000b4  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_year> >::~clone_impl()
0006a7dc g    DF .text	00000310  Base        Machine::~Machine()
00084708  w   DF .text	000001f4  Base        boost::array<std::pair<boost::log::v2_mt_posix::type_info_wrapper, void*>, 2u> const& boost::log::v2_mt_posix::aux::type_sequence_dispatcher<boost::mpl::vector2<std::string, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > > >::get_dispatching_map<boost::log::v2_mt_posix::binder1st<boost::log::v2_mt_posix::output_fun, boost::log::v2_mt_posix::basic_formatting_ostream<char, std::char_traits<char>, std::allocator<char> >&> >()
000396f4 g    DF .text	0000001c  Base        BirdwingTransceiver::SetFilamentFan(unsigned char, bool)
0004eafc g    DF .text	00000020  Base        gpio::GPIO::~GPIO()
000b4d14 g    DO .bss	00000001  Base        shuttingDown
00087d14 g    DF .text	00000128  Base        AccelerationManager::Iterate()
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::core::push_record_move(boost::log::v2_mt_posix::record&)
00000000      DF *UND*	00000000  GLIBC_2.4   calloc
0008f694 g    DF .text	00000f10  Base        InitializationHelpers::BuildSettings(Json::Value const&, Machine*)
000b2374  w   DO .data.rel.ro	00000020  Base        typeinfo for boost::exception_detail::error_info_injector<boost::condition_error>
0009e700  w   DO .rodata	00000035  Base        typeinfo name for boost::log::v2_mt_posix::sinks::basic_sink_frontend
0009e770  w   DO .rodata	00000043  Base        typeinfo name for boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>
0004fd38 g    DF .text	0000042c  Base        ToolheadManager::ToolheadManager(unsigned char)
00081e04 g    DF .text	00000148  Base        L3RAMMap::BufferMove(int, unsigned int, unsigned int, unsigned int, bool, bool, bool, int, int, unsigned int)
0005e83c g    DF .text	0000000c  Base        Machine::PerformToolheadSelfCheck(unsigned char)
0006e6b0 g    DF .text	00000054  Base        AccelerationMath::GetAccelerationTime(float, float, float)
0008921c g    DF .text	0000000c  Base        AccelerationManager::ToggleAcceleration(bool)
000b0f64  w   DO .data.rel.ro	00000008  Base        typeinfo for boost::log::v2_mt_posix::trivial::severity_level
0004ec38 g    DF .text	000000b0  Base        HAL::ToolheadCommPins::Setup(HAL::ToolheadCommPins::CommPinsTarget, unsigned char)
00000000      DF *UND*	00000000  GLIBC_2.4   ftell
00066f54 g    DF .text	00000394  Base        Machine::WaitForHeatersAtTarget(unsigned char, unsigned char, bool)
0006ac4c  w   DF .text	00000068  Base        std::_Deque_iterator<char, char&, char*>::operator-(int) const
00044910  w   DF .text	000000f0  Base        boost::exception_detail::error_info_injector<boost::condition_error>::~error_info_injector()
00062308  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_month> >::~clone_impl()
0007c740 g    DF .text	0000003c  Base        SetMoveBufferPosition
00000000      DO *UND*	00000000  GLIBCXX_3.4 typeinfo for std::bad_cast
00053cf8 g    DF .text	00000278  Base        InterfaceLED::SetChannel(unsigned char, unsigned char, unsigned char, InterfaceLED::Channel)
000b1a00  w   DO .data.rel.ro	00000008  Base        typeinfo for boost::log::v2_mt_posix::sinks::sink
00053cf0 g    DF .text	00000008  Base        Machine::SetChamberBlink(float)
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::locale::~locale()
000b0e38  w   DO .data.rel.ro	00000020  Base        typeinfo for boost::exception_detail::error_info_injector<std::length_error>
00061b4c  w   DF .text	00000070  Base        boost::exception_detail::error_info_injector<std::out_of_range>::~error_info_injector()
0008d5a4 g    DF .text	000001c8  Base        libstepper::ToggleSyncing(bool)
0003f53c  w   DF .text	00000068  Base        boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::text_file_backend>*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::text_file_backend> > >::~sp_counted_impl_pd()
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::string::assign(char const*)
0009cefc g    DO .rodata	00000025  Base        typeinfo name for acceleration::TemperatureCommand
00038b2c g    DF .text	00000008  Base        NullTransceiver::GetAxesPositions(std::vector<int, std::allocator<int> >*) const
0003db88  w   DF .text	00000024  Base        boost::system::error_category::~error_category()
000408b8  w   DF .text	00000034  Base        boost::exception_detail::clone_base::~clone_base()
00044b00  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::error_info_injector<boost::thread_resource_error>::~error_info_injector()
000455d8  w   DF .text	000000ac  Base        boost::system::system_error::~system_error()
0004cce4 g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::UpdateToolUsageStats()
0003e1b0  w   DF .text	000000ac  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_weak_ptr> >::~clone_impl()
000b0dc8  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::log::v2_mt_posix::sources::basic_composite_logger<char, boost::log::v2_mt_posix::sources::severity_channel_logger<boost::log::v2_mt_posix::trivial::severity_level, std::string>, boost::log::v2_mt_posix::sources::single_thread_model, boost::log::v2_mt_posix::sources::features<boost::log::v2_mt_posix::sources::severity<boost::log::v2_mt_posix::trivial::severity_level>, boost::log::v2_mt_posix::sources::channel<std::string> > >
00000000      DF *UND*	00000000              Json::Value::operator=(Json::Value const&)
0008d284 g    DF .text	00000020  Base        libstepper::SetSyncDelay(unsigned char)
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_ofstream<char, std::char_traits<char> >::close()
0009d640 g    DO .rodata	00000017  Base        typeinfo name for BronxToolheadManager
000891c0 g    DF .text	0000000c  Base        AccelerationManager::BufferSize() const
00000000      DF *UND*	00000000  GCC_3.5     __aeabi_fsub
00046720 g    DF .text	000003dc  Base        BronxToolheadManager::LogExtruderInfo()
0007c77c g    DF .text	00000048  Base        GetTemperatureSettings
00000000      DF *UND*	00000000  GCC_3.5     __aeabi_uidiv
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_ios<wchar_t, std::char_traits<wchar_t> >::clear(std::_Ios_Iostate)
00069564 g    DF .text	00000014  Base        Machine::ToggleFan(unsigned char, bool, int)
000451e8  w   DF .text	000000ac  Base        boost::thread_resource_error::~thread_resource_error()
0004a17c g    DF .text	0000017c  Base        ToolheadManager::LogPacketError(std::string)
0003e318  w   DF .text	00000028  Base        boost::log::v2_mt_posix::attribute_value::impl::get_value()
00055ef4  w   DF .text	00000118  Base        void boost::throw_exception<boost::thread_resource_error>(boost::thread_resource_error const&)
0004be68 g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::SetLEDBrightness(unsigned char)
000b1c18  w   DO .data.rel.ro	00000054  Base        vtable for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<std::out_of_range> >
0003a768 g    DF .text	00000020  Base        Machine::ClearAllZPause()
000691b0 g    DF .text	000003ac  Base        AccelerationManagerImpl::QueueFilamentFan(unsigned char, bool, unsigned int)
000684f8  w   DF .text	00000100  Base        boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<wchar_t>::~basic_formatting_sink_frontend()
00000000      DF *UND*	00000000              Json::Reader::parse(std::string const&, Json::Value&, bool)
000b289c  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::log::v2_mt_posix::aux::basic_ostringstreambuf<char, std::char_traits<char>, std::allocator<char> >
0007fbb8 g    DF .text	00000dd8  Base        AccelerationManagerImpl::GetMoveTrapezoid(acceleration::Block const&)
0004810c g    DF .text	000003bc  Base        HAL::ToolheadSPI::Receive(unsigned char*, unsigned short)
000542e4 g    DF .text	0000036c  Base        InterfaceLED::SetKnobColor(float, float, float, float)
0009eb54  w   DO .rodata	00000055  Base        typeinfo name for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<std::out_of_range> >
000b0cb8  w   DO .data.rel.ro	00000008  Base        typeinfo for boost::log::v2_mt_posix::sinks::file::collector
0004a154 g    DF .text	00000028  Base        Heater::Heater()
0007c410 g    DF .text	0000002c  Base        ChangeHesSampleRate
00049dcc g    DF .text	00000020  Base        ToolheadManager::Pack32BitTo8Bit(unsigned int, unsigned char*)
000956ec  w   DO .rodata	0000004b  Base        typeinfo name for boost::log::v2_mt_posix::aux::visible_type<boost::log::v2_mt_posix::trivial::severity_level>
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::__throw_out_of_range(char const*)
00066c24 g    DF .text	00000018  Base        BronxToolheadManager::ProgramReset()
000845cc  w   DF .text	0000013c  Base        boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>::formatting_context>::reset(boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>::formatting_context*)
000827f0  w   DF .text	00000014  Base        GpioMem::~GpioMem()
000390d0 g    DF .text	0000000c  Base        ChamberToolheadManager::PacketContainsStatus(toolhead::Commands)
0007c4dc g    DF .text	00000020  Base        ChangeTool
00076874 g    DF .text	0000070c  Base        ChamberToolheadManager::Program(char const*)
000445a8  w   DF .text	00000120  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::thread_resource_error> >::~clone_impl()
000711dc g    DF .text	00000050  Base        UnitConverter::GetMoveTicks(float, float, machine::AxisName) const
00049dec g    DF .text	000000d8  Base        ToolheadManager::GetNextCommand()
0004711c g    DF .text	0000004c  Base        InterfaceLED::period_ms_to_uint8(float) const
00000000      DF *UND*	00000000  CXXABI_1.3  __cxa_rethrow
00094540  w   DO .rodata	00000053  Base        typeinfo name for boost::equality_comparable1<boost::posix_time::ptime, boost::detail::empty_base<boost::posix_time::ptime> >
000943f8  w   DO .rodata	0000005a  Base        typeinfo name for std::_Sp_counted_ptr_inplace<ChamberToolheadManager, std::allocator<ChamberToolheadManager>, (__gnu_cxx::_Lock_policy)1>
0005d0f0 g    DF .text	000000fc  Base        ToolheadManager::DumpToolEEPROM(unsigned char)
00086c20 g    DF .text	00000024  Base        libstepper::DebugReadPruByte(int)
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::logic_error::what() const
0007cb78 g    DF .text	00000024  Base        ToggleFan
0003f6a4  w   DF .text	00000090  Base        boost::log::v2_mt_posix::aux::type_sequence_dispatcher<boost::mpl::vector2<std::string, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > > >::get_callback(boost::log::v2_mt_posix::type_dispatcher*, std::type_info const&)
00066060 g    DF .text	00000028  Base        Machine::HomingSettings::~HomingSettings()
000950b0  w   DO .rodata	00000034  Base        typeinfo name for std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)1>
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_ofstream<char, std::char_traits<char> >::~basic_ofstream()
00065e8c g    DF .text	00000008  Base        Machine::GetMaxSequentialIterates() const
00046b04 g    DF .text	00000058  Base        BronxToolheadManager::ToolSelfCheckState::succeeded()
000b2170  w   DO .data.rel.ro	00000024  Base        vtable for boost::exception_detail::error_info_injector<boost::bad_weak_ptr>
000b0ccc  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::log::v2_mt_posix::attributes::basic_clock<boost::log::v2_mt_posix::attributes::local_time_traits>::impl
00038ad0 g    DF .text	00000024  Base        AccelerationMath::IsSmall(float)
00000000      DF *UND*	00000000  GCC_3.5     __aeabi_fcmpgt
000626f4  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::error_info_injector<boost::gregorian::bad_year>::~error_info_injector()
0006d8c4  w   DF .text	00000118  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<std::runtime_error> >::clone() const
00062060  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_year> >::~clone_impl()
0009f574  w   DO .rodata	00000093  Base        typeinfo name for boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> >*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> > > >
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_streambuf<char, std::char_traits<char> >::seekpos(std::fpos<__mbstate_t>, std::_Ios_Openmode)
00000000      DF *UND*	00000000  GLIBC_2.4   memcpy
000949d0  w   DO .rodata	0000004f  Base        typeinfo name for boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::text_file_backend>
00055d0c  w   DF .text	00000008  Base        non-virtual thunk to boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> >::unlock()
0006ad90  w   DF .text	00000048  Base        std::_Deque_base<char, std::allocator<char> >::~_Deque_base()
000506f4 g    DF .text	00000434  Base        InitializationHelpers::InitializeEndstop(machine::AxisName, std::string, bool)
00039420 g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::ToggleExtrusionPercentUpdate(bool)
0003948c g    DF .text	00000008  Base        BronxToolheadManager::GetToolID() const
00095390  w   DO .rodata	000000cc  Base        typeinfo name for boost::log::v2_mt_posix::sources::basic_composite_logger<char, boost::log::v2_mt_posix::sources::severity_channel_logger<boost::log::v2_mt_posix::trivial::severity_level, std::string>, boost::log::v2_mt_posix::sources::single_thread_model, boost::log::v2_mt_posix::sources::features<boost::log::v2_mt_posix::sources::severity<boost::log::v2_mt_posix::trivial::severity_level>, boost::log::v2_mt_posix::sources::channel<std::string> > >
00039d9c g    DF .text	000000f0  Base        Machine::GetExtrusionDistancePercent(float*) const
00039218 g    DF .text	00000014  Base        Machine::SetPositionReference(machine::AxisName)
000b197c  w   DO .data.rel.ro	00000020  Base        typeinfo for boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> >
0003f614  w   DF .text	00000030  Base        boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> >*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> > > >::dispose()
00039354 g    DF .text	0000004c  Base        Machine::ScanToolheads()
00039710 g    DF .text	0000000c  Base        BirdwingTransceiver::SetVref(machine::AxisName, bool)
000b0ddc  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::log::v2_mt_posix::sources::aux::severity_level<boost::log::v2_mt_posix::trivial::severity_level>::impl
0009ac4c  w   DO .rodata	00000076  Base        typeinfo name for boost::log::v2_mt_posix::sources::aux::logger_holder<boost::log::v2_mt_posix::sources::severity_channel_logger<boost::log::v2_mt_posix::trivial::severity_level, std::string> >
000b0d38  w   DO .data.rel.ro	0000000c  Base        typeinfo for std::_Sp_counted_ptr_inplace<BirdwingTransceiver, std::allocator<BirdwingTransceiver>, (__gnu_cxx::_Lock_policy)1>
0004cb9c g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::CheckToolEEPROMVersion()
00089918 g    DF .text	000000a0  Base        SimpleRotatingLogger::~SimpleRotatingLogger()
000b0c3c  w   DO .data.rel.ro	0000000c  Base        typeinfo for std::_Sp_counted_ptr_inplace<ChamberToolheadManager, std::allocator<ChamberToolheadManager>, (__gnu_cxx::_Lock_policy)1>
00061784  w   DF .text	000000b8  Base        std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::~basic_stringbuf()
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::attribute_value_set::end() const
0004c028 g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::ConfigureHES(unsigned char, unsigned short)
000b3efc g    D  .bss	00000000  Base        __bss_start
0007cedc g    DF .text	00000024  Base        EndstopTriggered
0006876c  w   DF .text	00000164  Base        boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> >::~synchronous_sink()
00040768  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_weak_ptr> >::rethrow() const
000b11f0  w   DO .data.rel.ro	00000014  Base        vtable for boost::detail::tss_cleanup_function
0009f16c  w   DO .rodata	00000060  Base        typeinfo name for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::thread_resource_error> >
00000000      DF *UND*	00000000              Json::Value::asInt() const
00000000      DO *UND*	00000000  GLIBCXX_3.4 vtable for std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >
0008d278 g    DF .text	0000000c  Base        PRUMap::SetPruSyncDelay(unsigned char)
000b0e78  w   DO .data.rel.ro	00000008  Base        typeinfo for boost::log::v2_mt_posix::aux::id<boost::log::v2_mt_posix::aux::thread>
00000000      DF *UND*	00000000  GLIBC_2.4   malloc
0008c5e4 g    DF .text	0000005c  Base        L3RAMMap::BufferVref(int, bool)
0007c91c g    DF .text	00000020  Base        SetKnobBlink
00070de4 g    DF .text	00000114  Base        Machine::ChangeTool(unsigned char)
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::aux::stream_provider<char>::allocate_compound(boost::log::v2_mt_posix::record&)
0003dfb4  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_month> >::~clone_impl()
000b1fc0  w   DO .data.rel.ro	00000024  Base        vtable for boost::exception_detail::error_info_injector<boost::gregorian::bad_weekday>
00000000      DO *UND*	00000000  GLIBCXX_3.4 vtable for std::basic_filebuf<char, std::char_traits<char> >
00065378 g    DF .text	00000008  Base        ToolheadProgrammer::GetState()
0003f8f0  w   DF .text	00000028  Base        boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char>*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> > >::dispose()
00000000      DF *UND*	00000000  GLIBC_2.4   strlen
0003e128  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<std::runtime_error> >::~clone_impl()
0003e368  w   DF .text	0000003c  Base        boost::bad_lexical_cast::~bad_lexical_cast()
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_stringstream()
00045fd8 g    DF .text	00000008  Base        Machine::ResetHeaterWatchdog()
000391d8 g    DF .text	00000040  Base        Machine::SetFanDuty(unsigned char, float)
000b2098  w   DO .data.rel.ro	00000024  Base        vtable for boost::exception_detail::error_info_injector<std::runtime_error>
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::pbackfail(unsigned int)
00059014 g    DF .text	0000015c  Base        BronxToolheadManager::BronxToolheadManager(unsigned char)
00057868 g    DF .text	00000038  Base        Machine::CloseAndCleanup()
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::ios_base::Init::Init()
0008c8a0 g    DF .text	00000060  Base        Timer64P::configure32WithFreq(unsigned int)
0003e66c  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::error_info_injector<boost::bad_weak_ptr>::~error_info_injector()
00045e94 g    DF .text	00000024  Base        HeaterManager::GetTemperature(unsigned char) const
00039160 g    DF .text	0000003c  Base        Machine::SetHeaterDuty(unsigned char, float)
0004fb0c g    DF .text	0000001c  Base        BronxToolheadManager::~BronxToolheadManager()
00071050 g    DF .text	0000007c  Base        UnitConverter::GetStepsPerPeriodSq(machine::AxisName, float) const
0003922c g    DF .text	0000001c  Base        Machine::MotorEnable(machine::AxisName, bool)
0005b034 g    DF .text	00000038  Base        HexParser::str2byte(char*)
0007c2bc g    DF .text	00000024  Base        SetPrintContext
0009f150  w   DO .rodata	0000001a  Base        typeinfo name for boost::condition_error
00000000      DF *UND*	00000000  GLIBC_2.4   munmap
00044a08  w   DF .text	000000f8  Base        boost::exception_detail::error_info_injector<boost::thread_resource_error>::~error_info_injector()
0003f224  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_weekday> >::rethrow() const
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::type_info::before(std::type_info const&) const
000b2820 g    DO .data.rel.ro	0000006c  Base        vtable for BirdwingTransceiver
000b0d9c  w   DO .data.rel.ro	00000008  Base        typeinfo for boost::log::v2_mt_posix::sources::single_thread_model
000b0f6c  w   DO .data.rel.ro	00000008  Base        typeinfo for boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sources::aux::logger_holder<boost::log::v2_mt_posix::sources::severity_channel_logger<boost::log::v2_mt_posix::trivial::severity_level, std::string> > >
000b0d64  w   DO .data.rel.ro	0000000c  Base        typeinfo for std::_Mutex_base<(__gnu_cxx::_Lock_policy)1>
0007122c g    DF .text	00000758  Base        Machine::Machine(std::shared_ptr<MachineTransceiverInterface>&&)
0006d634  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::thread_resource_error> >::clone() const
0008c0ec g    DF .text	0000037c  Base        AccelerationManagerImpl::SplitAndAddRawMove(acceleration::RawMove&)
00000000      DF *UND*	00000000  GLIBC_2.4   usleep
0003f040  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_month> >::rethrow() const
00058f90 g    DF .text	00000084  Base        ChamberToolheadManager::ChamberToolheadManager(unsigned char)
00061f00  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_year> >::~clone_impl()
000890bc g    DF .text	00000010  Base        AccelerationManagerImpl::BufferIsEmpty() const
0003db88  w   DF .text	00000024  Base        boost::system::error_category::~error_category()
000518ec g    DF .text	00000490  Base        BronxToolheadManager::ProgramYonkers(char const*)
00064e0c  w   DF .text	000001b0  Base        boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::text_file_backend>::flush()
000710cc g    DF .text	00000078  Base        UnitConverter::GetStepsPerPeriod(machine::AxisName, float) const
00000000      DO *UND*	00000000  GLIBCXX_3.4 vtable for std::basic_ofstream<char, std::char_traits<char> >
000b0c8c  w   DO .data.rel.ro	00000018  Base        typeinfo for boost::date_time::base_time<boost::posix_time::ptime, boost::date_time::counted_time_system<boost::date_time::counted_time_rep<boost::posix_time::millisec_posix_time_system_config> > >
00095150  w   DO .rodata	00000003  Base        typeinfo name for std::string
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_filebuf<char, std::char_traits<char> >::~basic_filebuf()
0003dfbc  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_month> >::~clone_impl()
000431a8 g    DF .text	00000088  Base        Machine::ResetToolUsage(unsigned char)
00000000      DF *UND*	00000000  GLIBC_2.4   fclose
000b2408  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::condition_error
00049ce8 g    DF .text	00000050  Base        Machine::ImmediateToolheadError() const
000b2108  w   DO .data.rel.ro	00000020  Base        typeinfo for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::condition_error> >
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
00000000      DF *UND*	00000000  GLIBC_2.4   write
000b0d20  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::log::v2_mt_posix::attributes::current_thread_id::impl
000819f4 g    DF .text	00000258  Base        libstepper::Abort(bool)
0003f0fc  w   DF .text	00000128  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_weekday> >::rethrow() const
00089a00 g    DF .text	00000070  Base        MemRegion::~MemRegion()
0009c26c g    DO .rodata	00000032  Base        typeinfo name for ChamberToolheadManager::ChamberSelfCheckState
00044910  w   DF .text	000000f0  Base        boost::exception_detail::error_info_injector<boost::condition_error>::~error_info_injector()
000402fc  w   DF .text	00000034  Base        boost::detail::sp_counted_impl_pd<std::basic_ostream<wchar_t, std::char_traits<wchar_t> >*, boost::log::v2_mt_posix::empty_deleter>::~sp_counted_impl_pd()
0003dbbc  w   DF .text	00000028  Base        boost::system::error_category::equivalent(boost::system::error_code const&, int) const
0008adf0 g    DF .text	00000020  Base        GpioMem::GpioMem()
00039414 g    DF .text	0000000c  Base        BronxToolheadManager::ToggleExtrusionPercentUpdate(bool)
00039400 g    DF .text	0000000c  Base        BronxToolheadManager::FilamentIsPresent()
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::runtime_error::runtime_error(std::string const&)
00086790 g    DF .text	000000d0  Base        PRUMap::InitAxis(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned int)
000621c8  w   DF .text	00000084  Base        boost::exception_detail::error_info_injector<boost::gregorian::bad_weekday>::~error_info_injector()
000b2200  w   DO .data.rel.ro	00000054  Base        vtable for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::thread_resource_error> >
000b0c1c  w   DO .data.rel.ro	00000008  Base        typeinfo for HESInterface
000848fc  w   DF .text	00000134  Base        boost::log::v2_mt_posix::aux::light_function<void (boost::log::v2_mt_posix::record_view const&, boost::log::v2_mt_posix::basic_formatting_ostream<char, std::char_traits<char>, std::allocator<char> >&)>::impl<boost::log::v2_mt_posix::basic_formatter<char>::default_formatter>::invoke_impl(boost::log::v2_mt_posix::aux::light_function<void (boost::log::v2_mt_posix::record_view const&, boost::log::v2_mt_posix::basic_formatting_ostream<char, std::char_traits<char>, std::allocator<char> >&)>::impl_base*, boost::log::v2_mt_posix::record_view const&, boost::log::v2_mt_posix::basic_formatting_ostream<char, std::char_traits<char>, std::allocator<char> >&)
0009ecf8  w   DO .rodata	00000024  Base        typeinfo name for boost::gregorian::bad_day_of_year
00094bc0  w   DO .rodata	00000029  Base        typeinfo name for boost::log::v2_mt_posix::empty_deleter
00065b70 g    DF .text	0000003c  Base        Machine::LogError(machine::Error)
0007d230 g    DF .text	00000024  Base        HasValidPositionReference
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
00000000      DF *UND*	00000000              Json::Value::asString() const
0007ccbc g    DF .text	00000020  Base        SetMooseChamberBrightness
00088fbc g    DF .text	0000007c  Base        AccelerationManagerImpl::ScaleEndSpeed(acceleration::Block&, float)
0004a7a8 g    DF .text	00000110  Base        ToolheadManager::SetBlockWatchdog(toolhead::Commands)
0003927c g    DF .text	00000018  Base        Machine::ClearPositionReference()
000820a0 g    DF .text	0000017c  Base        libstepper::SetPosition(machine::AxisName, unsigned int)
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::bad_cast::~bad_cast()
000400b4  w   DF .text	00000038  Base        boost::detail::sp_counted_impl_pd<boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>::formatting_context>::delete_data*, boost::detail::do_heap_delete<boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>::formatting_context>::delete_data> >::get_deleter(std::type_info const&)
000396cc g    DF .text	00000008  Base        BirdwingTransceiver::AxisCount() const
0004a11c g    DF .text	00000014  Base        ToolheadManager::HESConfigureAcknowledged()
0004dd34 g    DF .text	0000001c  Base        HAL::LED::InitializeLEDs()
000b0ef8  w   DO .data.rel.ro	00000008  Base        typeinfo for boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> >
00000000      DF *UND*	00000000  GLIBC_2.4   sprintf
00062320  w   DF .text	00000084  Base        boost::exception_detail::error_info_injector<boost::gregorian::bad_month>::~error_info_injector()
00039294 g    DF .text	0000002c  Base        Machine::GetMoveBufferPosition(float*) const
00086064  w   DF .text	00000090  Base        boost::log::v2_mt_posix::aux::light_function<bool (boost::log::v2_mt_posix::attribute_value_set const&)>::impl<boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_and, boost::proto::argsns_::list2<boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::greater_equal, boost::proto::argsns_::list2<boost::log::v2_mt_posix::expressions::attribute_actor<boost::log::v2_mt_posix::trivial::severity_level, boost::log::v2_mt_posix::fallback_to_none, boost::log::v2_mt_posix::trivial::tag::severity, boost::phoenix::actor>, boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::log::v2_mt_posix::trivial::severity_level>, 0l> > >, 2l> >, boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::not_equal_to, boost::proto::argsns_::list2<boost::log::v2_mt_posix::expressions::attribute_actor<std::string, boost::log::v2_mt_posix::fallback_to_default<std::string>, void, boost::phoenix::actor>, boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<char [10]>, 0l> > >, 2l> > >, 2l> > >::destroy_impl(boost::log::v2_mt_posix::aux::light_function<bool (boost::log::v2_mt_posix::attribute_value_set const&)>::impl_base*)
00040388  w   DF .text	00000024  Base        boost::detail::sp_counted_impl_pd<boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>::formatting_context>::delete_data*, boost::detail::do_heap_delete<boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>::formatting_context>::delete_data> >::~sp_counted_impl_pd()
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::showmanyc()
0004c994 g    DF .text	00000110  Base        BronxToolheadManager::RetrieveToolUsageStats()
000b1880  w   DO .data.rel.ro	00000020  Base        vtable for boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<wchar_t>
00000000      DF *UND*	00000000  GCC_3.5     __aeabi_ui2d
0008d2a4 g    DF .text	00000008  Base        BirdwingTransceiver::SetExtruderDelay(unsigned short)
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >::basic_ostringstream(std::_Ios_Openmode)
0006a7dc g    DF .text	00000310  Base        Machine::~Machine()
0008c95c g    DF .text	00000020  Base        Timer64P::halt()
0006ca4c g    DF .text	00000174  Base        Machine::HasValidPositionReference(unsigned char, bool*) const
000b11d0  w   DO .data.rel.ro	00000008  Base        typeinfo for boost::detail::tss_cleanup_function
000b2198  w   DO .data.rel.ro	00000020  Base        typeinfo for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::lock_error> >
00049fbc g    DF .text	00000010  Base        ToolheadManager::IsIdle() const
00067d30  w   DF .text	00000100  Base        boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>::~basic_formatting_sink_frontend()
0003f53c  w   DF .text	00000068  Base        boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::text_file_backend>*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::text_file_backend> > >::~sp_counted_impl_pd()
0008d52c g    DF .text	00000024  Base        libstepper::Resume()
0003fca0  w   DF .text	0000003c  Base        boost::gregorian::bad_year::~bad_year()
0007c43c g    DF .text	0000002c  Base        ConfigureHes
00000000      DF *UND*	00000000  GCC_3.5     __aeabi_unwind_cpp_pr1
00000000      DF *UND*	00000000              Json::Value::Value(Json::Value const&)
0004bfe0 g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::SetFanDuty(float, unsigned char)
0003e478  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<std::out_of_range> >::~clone_impl()
000b11d8  w   DO .data.rel.ro	00000014  Base        vtable for boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>::formatting_context>::delete_data
00000000      DF *UND*	00000000              boost::system::generic_category()
000b2580  w   DO .data.rel.ro	00000020  Base        vtable for boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::text_file_backend*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::text_file_backend> >
0007d0fc g    DF .text	00000024  Base        ToolheadBlocking
00000000      DO *UND*	00000000  GLIBCXX_3.4 vtable for std::istream
00000000      DF *UND*	00000000              boost::thread::start_thread_noexcept()
00000000      DF *UND*	00000000  GLIBCXX_3.4.9 std::ostream& std::ostream::_M_insert<double>(double)
00000000      DF *UND*	00000000  GCC_3.5     __aeabi_d2iz
000b1a90  w   DO .data.rel.ro	00000008  Base        typeinfo for boost::thread_interrupted
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::attribute_set::attribute_set(boost::log::v2_mt_posix::attribute_set const&)
000621b0  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_weekday> >::~clone_impl()
00044e28  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::thread_resource_error> >::~clone_impl()
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::attribute_set::insert(boost::log::v2_mt_posix::attribute_name, boost::log::v2_mt_posix::attribute const&)
0007a848 g    DF .text	000002f8  Base        AccelerationManagerImpl::PopMoveTrapezoid()
00000000      DF *UND*	00000000  GLIBC_2.4   __xstat
0007d0d8 g    DF .text	00000024  Base        UpdateToolRefurbCount
000b19a0  w   DO .data.rel.ro	0000001c  Base        vtable for boost::log::v2_mt_posix::aux::locking_ptr_counter_base
0008d57c g    DF .text	00000028  Base        Timer64P::Timer64P(int)
000400ec  w   DF .text	00000038  Base        boost::detail::sp_counted_impl_pd<boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<wchar_t>::formatting_context>::delete_data*, boost::detail::do_heap_delete<boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<wchar_t>::formatting_context>::delete_data> >::get_deleter(std::type_info const&)
00000000      DF *UND*	00000000  GLIBCXX_3.4.15 std::out_of_range::~out_of_range()
0006f514 g    DF .text	00000460  Base        AccelerationManagerImpl::LookAheadCore(acceleration::Block&, acceleration::Block&, bool, bool)
0006a388 g    DF .text	000003d4  Base        AccelerationManagerImpl::VectorizeJunction(acceleration::Block const&, acceleration::Block const&)
00000000      DO *UND*	00000000  CXXABI_1.3  typeinfo for unsigned int
0003fdbc  w   DF .text	00000034  Base        boost::gregorian::bad_day_of_month::~bad_day_of_month()
00082a5c  w   DF .text	00000028  Base        boost::log::v2_mt_posix::aux::cleanup_guard<std::string>::~cleanup_guard()
00000000      DF *UND*	00000000              Json::Value::size() const
00049558  w   DF .text	000001a4  Base        boost::detail::sp_counted_base::release()
00095528  w   DO .rodata	0000005a  Base        typeinfo name for boost::log::v2_mt_posix::sources::aux::severity_level<boost::log::v2_mt_posix::trivial::severity_level>::impl
0007c468 g    DF .text	00000020  Base        GetHeaterProgressPercent
00089a00 g    DF .text	00000070  Base        MemRegion::~MemRegion()
00095618  w   DO .rodata	00000016  Base        typeinfo name for AbstractTransceiver
0007c7fc g    DF .text	00000024  Base        GetTemperature
00000000      DF *UND*	00000000  CXXABI_1.3  __cxa_end_catch
000b18c0  w   DO .data.rel.ro	00000048  Base        vtable for boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> >
00086c98 g    DF .text	00000098  Base        BirdwingTransceiver::GetTickTimes() const
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::ostream::sentry::sentry(std::ostream&)
00070ffc g    DF .text	00000054  Base        UnitConverter::TicksToUs(machine::AxisName, unsigned int) const
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::trivial::logger::get()
00000000      DO *UND*	00000000  GLIBCXX_3.4 vtable for std::iostream
0007abe4 g    DF .text	00000734  Base        AccelerationManagerImpl::PopMoveFlat()
00000000      DF *UND*	00000000  GLIBCXX_3.4.9 std::ostream& std::ostream::_M_insert<bool>(bool)
0003e3d8  w   DF .text	00000098  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<std::out_of_range> >::~clone_impl()
00094ef8  w   DO .rodata	00000054  Base        typeinfo name for boost::log::v2_mt_posix::attributes::attribute_value_impl<boost::posix_time::ptime>
0009ec3c  w   DO .rodata	00000056  Base        typeinfo name for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<std::runtime_error> >
00000000      DO *UND*	00000000  GLIBCXX_3.4 VTT for std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >
00045684 g    DF .text	00000290  Base        HeaterManager::GetTemperatureLogLine(unsigned char)
00000000      DF *UND*	00000000              boost::detail::set_tss_data(void const*, boost::shared_ptr<boost::detail::tss_cleanup_function>, void*, bool)
00000000      DF *UND*	00000000  CXXABI_1.3  __gxx_personality_v0
0003f234  w   DF .text	0000009c  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_month> >::rethrow() const
00000000      DF *UND*	00000000  GLIBC_2.4   pthread_rwlock_init
00062788  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::error_info_injector<boost::gregorian::bad_month>::~error_info_injector()
000b0d44  w   DO .data.rel.ro	0000000c  Base        typeinfo for std::_Sp_counted_ptr<acceleration::FanDutyCommand*, (__gnu_cxx::_Lock_policy)1>
0009f81c g    DO .rodata	00000012  Base        typeinfo name for NullTransceiver
000b2264  w   DO .data.rel.ro	00000020  Base        typeinfo for boost::exception_detail::error_info_injector<boost::gregorian::bad_year>
00000000      DO *UND*	00000000  CXXABI_1.3  vtable for __cxxabiv1::__enum_type_info
00056a88 g    DF .text	00000050  Base        Machine::EndstopTriggered(machine::AxisName) const
000a09b8  w   DO .rodata	00000030  Base        typeinfo name for boost::log::v2_mt_posix::attribute_value::impl
00000000      DF *UND*	00000000              Json::Value::isArray() const
000899b8 g    DF .text	00000048  Base        SimpleRotatingLogger::SimpleRotatingLogger(unsigned char, int)
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_streambuf<char, std::char_traits<char> >::xsgetn(char*, int)
0003a7dc g    DF .text	00000070  Base        BirdwingTransceiver::GetRadices() const
00066d48 g    DF .text	000001fc  Base        Machine::MoveWithinAxisBounds(float (&) [4])
0005e5a4 g    DF .text	000000f4  Base        ToolheadManager::Resume()
0004b3f0 g    DF .text	00000554  Base        InitializationHelpers::ContainsAllAxes(Json::Value const&, std::string, std::function<bool (Json::Value const&)>)
00057900 g    DF .text	00001634  Base        Machine::ProgramToolhead(char const*, unsigned char)
000b266c  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::system::system_error
00046b90 g    DF .text	0000001c  Base        BronxToolheadManager::ToolSelfCheckState::ToolSelfCheckState()
000b2654  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::text_file_backend*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::text_file_backend> >
0006c430 g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::IncrementExtrusionDistance(unsigned short)
000b11c4  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>::formatting_context>::delete_data
0006a75c g    DF .text	00000080  Base        Machine::ClearAllBuffers()
000640d8  w   DF .text	00000068  Base        boost::log::v2_mt_posix::aux::light_function<bool (boost::log::v2_mt_posix::attribute_value_set const&)>::impl<boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::logical_and, boost::proto::argsns_::list2<boost::phoenix::actor<boost::log::v2_mt_posix::expressions::aux::unary_function_terminal<boost::log::v2_mt_posix::expressions::has_attribute<std::string> > >, boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::log::v2_mt_posix::expressions::attribute_actor<std::string, boost::log::v2_mt_posix::fallback_to_none, tag::tag_attr, boost::phoenix::actor>, boost::phoenix::actor<boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<char const*>, 0l> > >, 2l> > >, 2l> > >::clone_impl(boost::log::v2_mt_posix::aux::light_function<bool (boost::log::v2_mt_posix::attribute_value_set const&)>::impl_base const*)
0003b170 g    DF .text	0000002c  Base        BronxToolheadManager::SpecificPrintLogTitles() const
00086f74 g    DF .text	0000075c  Base        AbstractTransceiver::ConvertedMove::to_string() const
0004ec04 g    DF .text	00000034  Base        ToolheadProgrammer::ToolheadProgrammer(unsigned char)
0003de44  w   DF .text	000000ac  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_month> >::~clone_impl()
00095938  w   DO .rodata	00000042  Base        typeinfo name for boost::exception_detail::error_info_injector<std::length_error>
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::core::set_filter(boost::log::v2_mt_posix::filter const&)
000530a4 g    DF .text	000002c4  Base        I2C::SendPacket(unsigned char*, int)
00072b74 g    DF .text	0000073c  Base        Machine::Move(float const*, float, bool const*, MakerBot::AxisUnit const*, int, MakerBot::ToolpathTag const*, int)
00043ec4  w   DF .text	0000005c  Base        boost::exception::~exception()
000625e8  w   DF .text	00000078  Base        boost::exception_detail::error_info_injector<std::runtime_error>::~error_info_injector()
00000000      DF *UND*	00000000  GLIBC_2.4   pthread_create
00061c80  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_month> >::~clone_impl()
0007d6d0  w   DF .text	000003d4  Base        void boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>::feed_record<boost::mutex, boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> >(boost::log::v2_mt_posix::record_view const&, boost::mutex&, boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char>&)
0003ed48  w   DF .text	00000124  Base        boost::log::v2_mt_posix::aux::basic_ostringstreambuf<char, std::char_traits<char>, std::allocator<char> >::overflow(int)
00000000      DF *UND*	00000000  GCC_3.5     __aeabi_l2d
000b1e28  w   DO .data.rel.ro	00000054  Base        vtable for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_weak_ptr> >
00059170 g    DF .text	00000414  Base        BuildToolheadFromKey(std::string, unsigned char, machine::MachineResponseStatus*)
00039248 g    DF .text	00000008  Base        Machine::ToggleAccelerationLookahead(bool)
00082b00  w   DF .text	0000029c  Base        boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>::formatting_context::formatting_context(unsigned int, std::locale const&, boost::log::v2_mt_posix::basic_formatter<char> const&)
000b19c0  w   DO .data.rel.ro	00000020  Base        typeinfo for boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::text_file_backend>
00073960  w   DF .text	00000a64  Base        void std::deque<char, std::allocator<char> >::_M_insert_aux<char const*>(std::_Deque_iterator<char, char&, char*>, char const*, char const*, unsigned int)
00055574  w   DF .text	000000e8  Base        boost::detail::shared_count::shared_count(boost::detail::shared_count const&)
00068d94 g    DF .text	00000014  Base        Machine::SetFanDuty(unsigned char, float, int)
00055c74  w   DF .text	00000098  Base        boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> >::unlock()
0007cc14 g    DF .text	00000020  Base        ToggleExpendBuffer
00000000      DO *UND*	00000000  GLIBCXX_3.4 typeinfo for std::length_error
00095080  w   DO .rodata	0000002f  Base        typeinfo name for std::_Mutex_base<(__gnu_cxx::_Lock_policy)1>
0004f19c g    DF .text	00000024  Base        operator*(q14 const&, q14 const&)
0003ece4  w   DF .text	00000064  Base        boost::log::v2_mt_posix::aux::basic_ostringstreambuf<char, std::char_traits<char>, std::allocator<char> >::sync()
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)
00086860 g    DF .text	0000039c  Base        libstepper::libLock()
0008308c  w   DF .text	00000260  Base        boost::log::v2_mt_posix::basic_formatting_ostream<char, std::char_traits<char>, std::allocator<char> >& boost::log::v2_mt_posix::basic_formatting_ostream<char, std::char_traits<char>, std::allocator<char> >::formatted_write<wchar_t>(wchar_t const*, int)
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_ofstream<char, std::char_traits<char> >::basic_ofstream()
00000000      DF *UND*	00000000              Json::Value::operator[](char const*) const
00061b34  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<std::out_of_range> >::~clone_impl()
00000000      DO *UND*	00000000  GLIBCXX_3.4 vtable for std::logic_error
0007d084 g    DF .text	00000014  Base        ScanToolheads
0007f874 g    DF .text	000002ac  Base        Machine::ConnectTool(unsigned char, bool)
000b4d18 g    DO .bss	0000003c  Base        l3Map
000b0c30  w   DO .data.rel.ro	0000000c  Base        typeinfo for std::_Sp_counted_ptr_inplace<StepperConversions, std::allocator<StepperConversions>, (__gnu_cxx::_Lock_policy)1>
00000000      DF *UND*	00000000  CXXABI_1.3  __cxa_throw
00062310  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_month> >::~clone_impl()
00055e54  w   DF .text	00000098  Base        boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> >::lock()
000b1fa0  w   DO .data.rel.ro	00000020  Base        typeinfo for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_weekday> >
00065be8 g    DF .text	00000024  Base        Machine::MoveAxis(machine::AxisName, float, float)
0007c560 g    DF .text	00000024  Base        ProgramYonkers
00087a5c g    DF .text	00000014  Base        BirdwingTransceiver::Paused() const
000b4e60  w   DO .bss	00000004  Base        guard variable for boost::array<std::pair<boost::log::v2_mt_posix::type_info_wrapper, void*>, 2u> const& boost::log::v2_mt_posix::aux::type_sequence_dispatcher<boost::mpl::vector2<std::string, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > > >::get_dispatching_map<boost::log::v2_mt_posix::binder1st<boost::log::v2_mt_posix::output_fun, boost::log::v2_mt_posix::basic_formatting_ostream<char, std::char_traits<char>, std::allocator<char> >&> >()::instance
00083588  w   DF .text	000001a4  Base        void boost::log::v2_mt_posix::sinks::basic_sink_frontend::flush_backend_impl<boost::mutex, boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> >(boost::mutex&, boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char>&, mpl_::bool_<true>)
0003a7d4 g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::GetHESLog(unsigned short, int*)
0004c0c0 g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::UploadAccelSettings()
000b0f28  w   DO .data.rel.ro	00000008  Base        typeinfo for boost::log::v2_mt_posix::aux::visible_type<boost::posix_time::ptime>
00086494 g    DF .text	0000001c  Base        PRUMap::RequestStatus()
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::string::swap(std::string&)
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::ostream::operator<<(int)
00000000      DF *UND*	00000000  GLIBCXX_3.4.13 std::basic_ofstream<char, std::char_traits<char> >::basic_ofstream(std::string const&, std::_Ios_Openmode)
000b2b18 g    DO .data.rel.ro	000001cc  Base        vtable for Machine
00040604  w   DF .text	00000008  Base        boost::detail::sp_counted_impl_pd<boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>::formatting_context>::delete_data*, boost::detail::do_heap_delete<boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>::formatting_context>::delete_data> >::get_untyped_deleter()
0009ca6c  w   DO .rodata	0000007f  Base        typeinfo name for boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<wchar_t>::formatting_context>::delete_data
00000000      DF *UND*	00000000  GLIBC_2.4   __errno_location
000b20e0  w   DO .data.rel.ro	00000024  Base        vtable for boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_year>
000392d0 g    DF .text	00000010  Base        Machine::EnableZPause()
0009450c  w   DO .rodata	00000034  Base        typeinfo name for boost::detail::empty_base<boost::posix_time::ptime>
000b1e80  w   DO .data.rel.ro	00000014  Base        vtable for boost::bad_weak_ptr
00054880 g    DF .text	00000008  Base        Machine::LedWake()
00065354 g    DF .text	00000010  Base        ToolheadProgrammer::ClearProgramFile()
0005d1ec g    DF .text	00000030  Base        Machine::LogToolEeprom(unsigned char)
00000000      DO *UND*	00000000  GLIBCXX_3.4 vtable for std::runtime_error
00000000      DF *UND*	00000000  GCC_3.5     __aeabi_dcmpgt
0003def0  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_month> >::~clone_impl()
00070fd8 g    DF .text	00000024  Base        UnitConverter::TicksToSeconds(machine::AxisName, unsigned int) const
000732b0 g    DF .text	0000003c  Base        Machine::Move(float const*, float, bool const*)
00039250 g    DF .text	0000002c  Base        Machine::SetMoveBufferPosition(float const*)
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::istream::getline(char*, int)
0007c2e0 g    DF .text	00000024  Base        GetSyncState
0009ceb8 g    DO .rodata	00000021  Base        typeinfo name for acceleration::FanDutyCommand
0005e7d4 g    DF .text	00000024  Base        ToolheadManager::GetAPIVersion()
0008af1c g    DF .text	000011d0  Base        AccelerationManagerImpl::SplitAndAddRawMove(acceleration::RawMove&, float, unsigned int)
0008c510 g    DF .text	0000002c  Base        L3RAMMap::PruLogBuffer::PruLogBuffer(unsigned char*)
000625e0  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_year>::~error_info_injector()
000948cc  w   DO .rodata	0000009c  Base        typeinfo name for boost::detail::do_heap_delete<boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>::formatting_context>::delete_data>
00040330  w   DF .text	00000024  Base        boost::detail::sp_counted_impl_pd<std::basic_ostream<wchar_t, std::char_traits<wchar_t> >*, boost::log::v2_mt_posix::empty_deleter>::~sp_counted_impl_pd()
000824a4 g    DF .text	0000030c  Base        BirdwingTransceiver::MoveTrapezoid(std::array<std::vector<AbstractTransceiver::ConvertedMove, std::allocator<AbstractTransceiver::ConvertedMove> >, 3u> const&)
00083fa0  w   DF .text	0000060c  Base        void boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<wchar_t>::feed_record<boost::mutex, boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> >(boost::log::v2_mt_posix::record_view const&, boost::mutex&, boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t>&)
0008a084 g    DF .text	00000a48  Base        Machine::HomeAxis(machine::AxisName, float, bool, bool, bool)
0006dda8  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_month> >::clone() const
00000000      DO *UND*	00000000              vtable for boost::detail::thread_data_base
00000000      DO *UND*	00000000  GLIBCXX_3.4 typeinfo for std::out_of_range
00000000      DO *UND*	00000000  CXXABI_1.3  vtable for __cxxabiv1::__vmi_class_type_info
00000000  w   D  *UND*	00000000              _ITM_deregisterTMCloneTable
0004ef54 g    DF .text	00000010  Base        operator>(q14, q14)
000444fc  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::error_info_injector<boost::lock_error>::~error_info_injector()
00068110  w   DF .text	0000016c  Base        boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> >::~synchronous_sink()
00039620 g    DF .text	00000008  Base        BronxToolheadManager::IsPositionRetrieved() const
0006531c g    DF .text	00000038  Base        ChamberToolheadManager::ChamberSelfCheckState::ChamberSelfCheckState()
000b3f40  w   DO .bss	00000008  Base        boost::log::v2_mt_posix::aux::lazy_singleton<boost::log::v2_mt_posix::sources::aux::logger_singleton<log_obj>, boost::shared_ptr<boost::log::v2_mt_posix::sources::aux::logger_holder<boost::log::v2_mt_posix::sources::severity_channel_logger<boost::log::v2_mt_posix::trivial::severity_level, std::string> > > >::get_instance()::instance
00039088 g    DF .text	00000004  Base        BronxToolheadManager::BufferIsFull() const
0007122c g    DF .text	00000758  Base        Machine::Machine(std::shared_ptr<MachineTransceiverInterface>&&)
00055bd4  w   DF .text	00000098  Base        boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::text_file_backend>::unlock()
00064610  w   DF .text	000001f0  Base        boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>::basic_formatting_sink_frontend(bool)
000958e0  w   DO .rodata	00000055  Base        typeinfo name for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<std::length_error> >
0003dc88  w   DF .text	00000034  Base        boost::system::error_category::~error_category()
0006db30  w   DF .text	00000134  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_year> >::clone() const
00000000      DF *UND*	00000000  GLIBC_2.4   pthread_attr_setschedparam
00089188 g    DF .text	00000008  Base        AccelerationManagerImpl::ToggleAcceleration(bool)
0005b0b4 g    DF .text	00000d14  Base        HexParser::ParseFile(char const*, unsigned char**, unsigned int*, unsigned short)
000b2308  w   DO .data.rel.ro	00000020  Base        typeinfo for boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_month>
00000000      DF *UND*	00000000  GCC_3.0     _Unwind_Resume
00059584 g    DF .text	00000604  Base        InitializationHelpers::BuildToolheadFromSettings(Json::Value const&, std::string, unsigned char, machine::MachineResponseStatus*, std::array<std::shared_ptr<ToolheadManager>, 2u>&, std::map<int, std::shared_ptr<ExtruderInterface>, std::less<int>, std::allocator<std::pair<int const, std::shared_ptr<ExtruderInterface> > > >&, std::map<int, std::shared_ptr<HESInterface>, std::less<int>, std::allocator<std::pair<int const, std::shared_ptr<HESInterface> > > >&)
0004ece8 g    DF .text	0000000c  Base        HAL::ToolheadSPI::EnableSPI()
0005e698 g    DF .text	000000f4  Base        ToolheadManager::Pause()
0004c478 g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::ReadHESLog()
0008ae64 g    DF .text	000000b8  Base        acceleration::RawMove::RawMove(std::vector<float, std::allocator<float> > const&, float, float, int, bool)
0006ddb8  w   DF .text	00000134  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_year> >::clone() const
00084a30 g    DF .text	00001584  Base        Logging::ChangeLevel(std::string, bool)
0003dd68  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_year> >::~clone_impl()
00089190 g    DF .text	00000030  Base        AccelerationManager::BufferSpaceFor(unsigned int) const
00000000      DF *UND*	00000000  GLIBC_2.4   memcmp
000441a4  w   DF .text	0000001c  Base        std::ctype<char>::do_widen(char const*, char const*, char*) const
00043480 g    DF .text	000000e4  Base        Machine::SetLedBrightness(unsigned char, float)
00056ad8 g    DF .text	00000018  Base        Machine::EndstopTriggered(machine::AxisName, bool*) const
000b22bc  w   DO .data.rel.ro	00000020  Base        typeinfo for boost::exception_detail::error_info_injector<boost::gregorian::bad_weekday>
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::uflow()
000b1068  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::log::v2_mt_posix::attributes::attribute_value_impl<std::string>
0009fd18 g    DO .rodata	00000009  Base        typeinfo name for Machine
0007c62c g    DF .text	00000014  Base        ResetHeaterWatchdog
000b0cac  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::system::error_category
0007c1ac g    DF .text	00000110  Base        MemRegion::MemRegion(long, unsigned int)
0004c1ac g    DF .text	00000114  Base        BronxToolheadManager::Idle()
0009c9e8  w   DO .rodata	00000044  Base        typeinfo name for boost::log::v2_mt_posix::attributes::mutable_constant<std::string, void, void, void>::impl
0004419c  w   DF .text	00000008  Base        std::ctype<char>::do_narrow(char, char) const
0007c3e4 g    DF .text	0000002c  Base        SamplePower
00047c58 g    DF .text	000001b0  Base        PowerMonitor::CheckValidEnums(machine::PowerMonitorRail, machine::PowerMonitorValue)
0009e9dc  w   DO .rodata	0000005c  Base        typeinfo name for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_year> >
0003dd80  w   DF .text	000000ac  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_year> >::~clone_impl()
00000000      DF *UND*	00000000  GCC_3.5     __aeabi_d2f
000b1190  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::log::v2_mt_posix::attributes::mutable_constant<std::string, void, void, void>::impl
00061f9c  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::error_info_injector<boost::gregorian::bad_year>::~error_info_injector()
000534b8 g    DF .text	00000114  Base        PowerMonitor::SetCalibrationValue(unsigned short)
00099f68  w   DO .rodata	0000002c  Base        typeinfo name for ToolheadManager::ToolheadSelfCheckState
000771cc g    DF .text	00000188  Base        json_config::safe_get(Json::Value const&, std::string const&, Json::Value const*&)
0008d2b8 g    DF .text	00000020  Base        PRUMap::SetRuntimeState(unsigned char, bool)
00094d18  w   DO .rodata	0000003f  Base        typeinfo name for boost::log::v2_mt_posix::attributes::counter<unsigned int>::impl_generic
00000000      DF *UND*	00000000  GLIBC_2.4   timer_gettime
00000000      DF *UND*	00000000  GCC_3.5     __aeabi_unwind_cpp_pr0
0004092c  w   DF .text	00000010  Base        boost::bad_weak_ptr::what() const
00067c48  w   DF .text	000000e8  Base        std::vector<std::string, std::allocator<std::string> >::~vector()
00000000      DF *UND*	00000000              Json::Value::isBool() const
000395bc g    DF .text	00000014  Base        BronxToolheadManager::SpecializedInit()
00069fa4 g    DF .text	00000014  Base        AccelerationManager::Initialize()
000390dc g    DF .text	00000004  Base        ChamberToolheadManager::SpecializedInit()
0003dc54  w   DF .text	00000034  Base        boost::log::v2_mt_posix::sinks::file::collector::~collector()
000b23f0  w   DO .data.rel.ro	00000014  Base        vtable for boost::lock_error
00000000      DF *UND*	00000000  CXXABI_1.3  __cxa_guard_acquire
0004a8b8 g    DF .text	000003ec  Base        JsonTools::ReadFileStringWithDefault(char const*, char const*, Json::Value*)
000b18a0  w   DO .data.rel.ro	00000020  Base        vtable for boost::log::v2_mt_posix::sinks::sink
00070cbc g    DF .text	00000128  Base        StepperConversions::ChangeTool(std::shared_ptr<ExtruderInterface>)
00069fd0 g    DF .text	00000384  Base        AccelerationManagerImpl::~AccelerationManagerImpl()
0003fc6c  w   DF .text	00000034  Base        boost::gregorian::bad_month::~bad_month()
00049f14 g    DF .text	00000008  Base        ToolheadManager::SetStatusStruct(machine::ToolheadStatus*)
00061c90  w   DF .text	00000084  Base        boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_month>::~error_info_injector()
00082b00  w   DF .text	0000029c  Base        boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>::formatting_context::formatting_context(unsigned int, std::locale const&, boost::log::v2_mt_posix::basic_formatter<char> const&)
000737d0  w   DF .text	000000f8  Base        std::deque<char, std::allocator<char> >::_M_new_elements_at_front(unsigned int)
000b0ce4  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::log::v2_mt_posix::attributes::counter<unsigned int>::impl_dec
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::string::append(char const*)
000952c4  w   DO .rodata	000000cc  Base        typeinfo name for boost::log::v2_mt_posix::sources::basic_severity_logger<boost::log::v2_mt_posix::sources::basic_channel_logger<boost::log::v2_mt_posix::sources::basic_logger<char, boost::log::v2_mt_posix::sources::severity_channel_logger<boost::log::v2_mt_posix::trivial::severity_level, std::string>, boost::log::v2_mt_posix::sources::single_thread_model>, std::string>, boost::log::v2_mt_posix::trivial::severity_level>
000b0cc0  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::bad_lexical_cast
00040598  w   DF .text	00000024  Base        boost::log::v2_mt_posix::aux::locking_ptr_counter_base::~locking_ptr_counter_base()
0003fcdc  w   DF .text	00000034  Base        boost::gregorian::bad_year::~bad_year()
00047088 g    DF .text	00000070  Base        PowerMonitor::PowerMonitor(std::unique_ptr<I2C, std::default_delete<I2C> >)
00046708 g    DF .text	00000018  Base        BronxToolheadManager::PackMoveBitfield(bool)
00070f6c g    DF .text	00000018  Base        StepperConversions::SetFilamentFanDuty(unsigned char, float)
00038b44 g    DF .text	00000008  Base        NullTransceiver::SetFilamentFan(unsigned char, bool)
0009f6c4  w   DO .rodata	0000006e  Base        typeinfo name for boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::text_file_backend*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::text_file_backend> >
000b4ce8 g    DO .bss	0000002c  Base        pruMap
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t>::flush()
0004eb1c g    DF .text	00000014  Base        gpio::GPIO::GPIO(GpioId const*)
0004edb0 g    DF .text	00000030  Base        HAL::ToolheadSPI::Deinitialize()
0008d574 g    DF .text	00000008  Base        BirdwingTransceiver::SetPaused(bool)
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::aux::once_block_sentry::enter_once_block() const
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_ifstream<char, std::char_traits<char> >::basic_ifstream(char const*, std::_Ios_Openmode)
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::sources::aux::global_storage::get_or_init(std::type_info const&, boost::shared_ptr<boost::log::v2_mt_posix::sources::aux::logger_holder_base> (*)())
00040404  w   DF .text	00000034  Base        boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<wchar_t>::formatting_context>::delete_data::~delete_data()
0007c348 g    DF .text	00000020  Base        PruIsPaused
0008912c g    DF .text	00000030  Base        AccelerationManagerImpl::BufferIsFull() const
000b1160 g    DO .data.rel.ro	0000000c  Base        typeinfo for ChamberToolheadManager::ChamberSelfCheckState
0007d120 g    DF .text	00000024  Base        GetCachedToolUsageStats
00060394 g    DF .text	000000d8  Base        BirdwingTransceiver::~BirdwingTransceiver()
00055b34  w   DF .text	00000098  Base        boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> >::unlock()
0004edec g    DF .text	00000008  Base        ToolheadManager::DisableSPI()
0006459c  w   DF .text	00000074  Base        void boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>::set_formatter<boost::log::v2_mt_posix::basic_formatter<char> >(boost::log::v2_mt_posix::basic_formatter<char> const&)
000896fc g    DF .text	00000090  Base        SimpleRotatingLogger::Log(std::string const&)
000a09e8  w   DO .rodata	0000000b  Base        typeinfo name for telem_obj
0003949c g    DF .text	00000120  Base        BronxToolheadManager::PacketContainsStatus(toolhead::Commands)
00077888 g    DF .text	000001bc  Base        json_config::safe_get(Json::Value const&, std::string const&, float&)
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::exception::~exception()
00069ca0 g    DF .text	00000024  Base        AccelerationManagerImpl::TestOnlyExtruders(acceleration::Block const&)
0005543c g    DF .text	00000080  Base        PowerMonitor::Init()
00041be0 g    DF .text	000001d0  Base        Machine::EnableToolheadIdle()
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::ostream::sentry::~sentry()
0007d01c g    DF .text	00000020  Base        SetZPauseMm
00000000      DF *UND*	00000000  GCC_3.5     __aeabi_fcmpge
00000000      DF *UND*	00000000  GLIBC_2.4   pthread_attr_setinheritsched
0004d16c g    DF .text	00000068  Base        ToolheadManager::Send(unsigned char const*, int)
000496fc  w   DF .text	000000e4  Base        boost::detail::sp_counted_base::weak_release()
0006531c g    DF .text	00000038  Base        ChamberToolheadManager::ChamberSelfCheckState::ChamberSelfCheckState()
000b16a8 g    DO .data.rel.ro	0000000c  Base        typeinfo for ChamberToolheadManager
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::__basic_file<char>::~__basic_file()
00086e68 g    DF .text	000000a4  Base        libstepper::BufferIsFull()
00055eec  w   DF .text	00000008  Base        non-virtual thunk to boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> >::lock()
00040354  w   DF .text	00000034  Base        boost::detail::sp_counted_impl_pd<boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>::formatting_context>::delete_data*, boost::detail::do_heap_delete<boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>::formatting_context>::delete_data> >::~sp_counted_impl_pd()
0007b354 g    DF .text	00000e58  Base        Machine::InitializeFromSettings(char const*)
0003fd80  w   DF .text	0000003c  Base        boost::gregorian::bad_day_of_month::~bad_day_of_month()
0003e7fc  w   DF .text	00000084  Base        boost::log::v2_mt_posix::sinks::basic_sink_frontend::~basic_sink_frontend()
00000000      DO *UND*	00000000  GLIBCXX_3.4 typeinfo for std::basic_streambuf<char, std::char_traits<char> >
0004c030 g    DF .text	0000002c  Base        BronxToolheadManager::UpdateToolRefurbCount(bool)
000569f4 g    DF .text	00000070  Base        HAL::ToolheadCommPins::GetState(HAL::ToolheadCommPins::CommPinsTarget, unsigned char)
0006b7c4 g    DF .text	0000065c  Base        Machine::GetToolUsageStats(unsigned char, unsigned char, machine::ToolUsage*)
0009f1f8  w   DO .rodata	0000001e  Base        typeinfo name for boost::system::system_error
0004060c  w   DF .text	00000020  Base        boost::detail::sp_counted_impl_pd<boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>::formatting_context>::delete_data*, boost::detail::do_heap_delete<boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>::formatting_context>::delete_data> >::dispose()
00068284  w   DF .text	00000164  Base        boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> >::~synchronous_sink()
000b2ce8  w   DO .data.rel.ro	00000008  Base        typeinfo for boost::log::v2_mt_posix::intrusive_ref_counter
000890f8 g    DF .text	00000014  Base        AccelerationManager::BufferIsEmpty() const
000b0f10  w   DO .data.rel.ro	00000008  Base        typeinfo for boost::log::v2_mt_posix::empty_deleter
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::string::_M_mutate(unsigned int, unsigned int, unsigned int)
0006abe8  w   DF .text	00000064  Base        std::_Deque_iterator<char, char&, char*> std::copy<char const*, std::_Deque_iterator<char, char&, char*> >(char const*, char const*, std::_Deque_iterator<char, char&, char*>)
00082d9c  w   DF .text	0000007c  Base        boost::log::v2_mt_posix::basic_formatting_ostream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::~basic_formatting_ostream()
00040124  w   DF .text	0000003c  Base        boost::log::v2_mt_posix::aux::basic_ostringstreambuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::~basic_ostringstreambuf()
00061d1c  w   DF .text	000000a0  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<std::runtime_error> >::~clone_impl()
0007c328 g    DF .text	00000020  Base        GetCurrentCommandIndex
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::aux::default_attribute_names::line_id()
00040894  w   DF .text	00000024  Base        boost::detail::sp_counted_base::~sp_counted_base()
00000000      DF *UND*	00000000  GLIBC_2.4   getenv
0003f464  w   DF .text	00000068  Base        boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> >*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> > > >::~sp_counted_impl_pd()
0006d494  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::lock_error> >::clone() const
0003e5d8  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::error_info_injector<boost::bad_weak_ptr>::~error_info_injector()
0004bd04 g    DF .text	00000044  Base        BronxToolheadManager::SetPosition(int)
000b2d28  w   DO .data.rel.ro	00000014  Base        vtable for boost::log::v2_mt_posix::attribute::impl
00088a60 g    DF .text	00000018  Base        AccelerationManagerImpl::BufferLengthAbovePop()
00044170  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_weak_ptr> >::clone() const
00000000      DF *UND*	00000000              Json::Value::asFloat() const
0008d2d8 g    DF .text	00000224  Base        PRUMap::Abort()
00000000      DO *UND*	00000000  GLIBCXX_3.4 typeinfo for std::exception
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::record_view::public_data::destroy(boost::log::v2_mt_posix::record_view::public_data const*)
0003eb04  w   DF .text	0000010c  Base        boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<wchar_t>::formatting_context>::delete_data::operator()(void*)
000b1d48  w   DO .data.rel.ro	00000008  Base        VTT for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_year> >
0004739c g    DF .text	000000d4  Base        HeaterManager::HeaterManager()
00089228 g    DF .text	00000014  Base        Machine::ToggleAcceleration(bool)
00042c58 g    DF .text	0000027c  Base        Machine::GetHesLog(unsigned char, unsigned short, int*)
0006ab08  w   DF .text	000000e0  Base        std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::_Deque_iterator<char, char&, char*> >(std::_Deque_iterator<char, char&, char*>, std::_Deque_iterator<char, char&, char*>, std::allocator<char> const&)
00054e98 g    DF .text	000004a4  Base        PowerMonitor::SamplePower(machine::PowerMonitorRail, machine::PowerMonitorValue, unsigned short)
000b2648  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::detail::sp_counted_impl_pd<boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>::formatting_context>::delete_data*, boost::detail::do_heap_delete<boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<char>::formatting_context>::delete_data> >
0003dbac  w   DF .text	00000010  Base        boost::bad_lexical_cast::what() const
00068dcc g    DF .text	000003a4  Base        AccelerationManagerImpl::QueueTemperatureTarget(unsigned char, short, unsigned int)
00081c84 g    DF .text	00000180  Base        libstepper::Shutdown()
00082e18  w   DF .text	00000274  Base        boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<wchar_t>::formatting_context::formatting_context(unsigned int, std::locale const&, boost::log::v2_mt_posix::basic_formatter<wchar_t> const&)
0004ed2c g    DF .text	00000084  Base        HAL::ToolheadCommPins::Teardown(HAL::ToolheadCommPins::CommPinsTarget, unsigned char)
0006cbc0 g    DF .text	0000012c  Base        Machine::ToggleToolheadSyncing(bool)
000683e8  w   DF .text	00000008  Base        non-virtual thunk to boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> >::~synchronous_sink()
00000000  w   D  *UND*	00000000              __gmon_start__
000b2b0c g    DO .data.rel.ro	0000000c  Base        typeinfo for Machine
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::attribute::impl::operator new(unsigned int)
00065bac g    DF .text	00000024  Base        Machine::GetToolId(unsigned char) const
0007cf68 g    DF .text	00000020  Base        ToggleFilamentJam
00069b18 g    DF .text	00000040  Base        AccelerationManager::AccelerationManager(std::shared_ptr<StepperConversions>)
00062254  w   DF .text	000000b4  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_month> >::~clone_impl()
0006c438 g    DF .text	00000338  Base        ChamberToolheadManager::ProcessStatusBytes()
00000000      DF *UND*	00000000  GCC_3.5     __aeabi_fadd
0006254c  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::error_info_injector<std::out_of_range>::~error_info_injector()
000405e4  w   DF .text	00000008  Base        boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t>*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> > >::get_untyped_deleter()
000574b0 g    DF .text	00000208  Base        Machine::CheckToolheadInitialization()
000b26d0  w   DO .data.rel.ro	00000014  Base        vtable for boost::thread_resource_error
0004bde4 g    DF .text	00000050  Base        BronxToolheadManager::ConfigureJamDetection(float)
0009e738  w   DO .rodata	00000038  Base        typeinfo name for boost::log::v2_mt_posix::aux::locking_ptr_counter_base
00039610 g    DF .text	00000008  Base        BronxToolheadManager::GetPosition() const
0003f980  w   DF .text	00000060  Base        boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char>*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> > >::~sp_counted_impl_pd()
000933d0 g    DF .text	00000028  Base        __prussintc_set_cmr
000b0e14  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sources::aux::logger_holder<boost::log::v2_mt_posix::sources::severity_channel_logger<boost::log::v2_mt_posix::trivial::severity_level, std::string> >*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sources::aux::logger_holder<boost::log::v2_mt_posix::sources::severity_channel_logger<boost::log::v2_mt_posix::trivial::severity_level, std::string> > > >
00000000      DF *UND*	00000000  CXXABI_1.3  __cxa_pure_virtual
00086f0c g    DF .text	00000008  Base        libstepper::LoadCachedBuffer()
00071acc g    DF .text	00000620  Base        Machine::Initialize()
000447d8  w   DF .text	00000120  Base        boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::condition_error> >::~clone_impl()
00055a1c  w   DF .text	00000118  Base        void boost::throw_exception<boost::lock_error>(boost::lock_error const&)
0009cb6c  w   DO .rodata	00000026  Base        typeinfo name for boost::detail::tss_cleanup_function
00000000  w   D  *UND*	00000000              _ITM_registerTMCloneTable
000991f0  w   DO .rodata	00000036  Base        typeinfo name for boost::exception_detail::error_info_container_impl
000845ac  w   DF .text	00000020  Base        boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> >::consume(boost::log::v2_mt_posix::record_view const&)
0004083c  w   DF .text	00000024  Base        boost::log::v2_mt_posix::intrusive_ref_counter::~intrusive_ref_counter()
0009f1cc  w   DO .rodata	00000013  Base        typeinfo name for boost::exception
00056128  w   DF .text	000001cc  Base        boost::gregorian::date::date(boost::gregorian::greg_year, boost::gregorian::greg_month, boost::gregorian::greg_day)
0009ee68  w   DO .rodata	00000049  Base        typeinfo name for boost::exception_detail::error_info_injector<boost::gregorian::bad_year>
00094d94  w   DO .rodata	00000036  Base        typeinfo name for boost::log::v2_mt_posix::attributes::counter<unsigned int>::impl
000b0d5c  w   DO .data.rel.ro	00000008  Base        typeinfo for __gnu_cxx::__mutex
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_streambuf<char, std::char_traits<char> >::showmanyc()
00000000      DO *UND*	00000000  GLIBCXX_3.4 vtable for std::basic_ostream<wchar_t, std::char_traits<wchar_t> >
000b1b08  w   DO .data.rel.ro	00000014  Base        vtable for boost::gregorian::bad_year
00000000  w   DF *UND*	00000000  GLIBC_2.4   __cxa_finalize
00049868  w   DF .text	00000014  Base        std::hex(std::ios_base&)
0006db20  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_weekday> >::clone() const
0004cba4 g    DF .text	00000140  Base        BronxToolheadManager::UpdateToolUsageStats()
000b2480  w   DO .data.rel.ro	00000020  Base        vtable for boost::detail::sp_counted_impl_pd<boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<wchar_t>::formatting_context>::delete_data*, boost::detail::do_heap_delete<boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<wchar_t>::formatting_context>::delete_data> >
00045d44 g    DF .text	00000078  Base        HeaterManager::UpdateStatus()
000401d0  w   DF .text	00000034  Base        boost::log::v2_mt_posix::aux::basic_ostringstreambuf<char, std::char_traits<char>, std::allocator<char> >::~basic_ostringstreambuf()
0003fef4  w   DF .text	00000038  Base        boost::detail::sp_counted_impl_pd<std::ostream*, boost::log::v2_mt_posix::empty_deleter>::get_deleter(std::type_info const&)
0003fea8  w   DF .text	0000004c  Base        boost::log::v2_mt_posix::aux::single_type_dispatcher<boost::log::v2_mt_posix::trivial::severity_level>::get_callback(boost::log::v2_mt_posix::type_dispatcher*, std::type_info const&)
00049f4c g    DF .text	00000038  Base        ToolheadManager::FirmwareVersion(unsigned char*, unsigned char*, unsigned short*) const
00094ca8  w   DO .rodata	0000001b  Base        typeinfo name for boost::bad_lexical_cast
0008d76c g    DF .text	00000008  Base        BirdwingTransceiver::ToggleSyncing(bool)
000b1c10  w   DO .data.rel.ro	00000008  Base        VTT for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<std::out_of_range> >
000954b8  w   DO .rodata	00000032  Base        typeinfo name for boost::log::v2_mt_posix::trivial::severity_level
0008e1a8 g    DF .text	00000160  Base        libstepper::GetPosition(machine::AxisName)
00065c0c g    DF .text	000000f8  Base        Machine::DistanceToBoundary(float const*) const
0006d9dc  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<std::runtime_error> >::clone() const
00000000      DF *UND*	00000000  GLIBC_2.4   pthread_mutex_unlock
00000000      DO *UND*	00000000  GLIBCXX_3.4 std::cerr
0003dc40  w   DF .text	0000000c  Base        boost::system::error_category::default_error_condition(int) const
000b2d58  w   DO .data.rel.ro	00000008  Base        typeinfo for boost::log::v2_mt_posix::aux::visible_type<telem_obj>
000b1c70  w   DO .data.rel.ro	00000008  Base        VTT for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_month> >
0003fa08  w   DF .text	00000068  Base        boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t>*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<wchar_t> > >::~sp_counted_impl_pd()
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_ostringstream()
00000000      DO *UND*	00000000  GLIBCXX_3.4 VTT for std::basic_ifstream<char, std::char_traits<char> >
000447d0  w   DF .text	00000008  Base        non-virtual thunk to boost::exception_detail::error_info_injector<boost::thread_resource_error>::~error_info_injector()
0007cbc0 g    DF .text	00000014  Base        EnableToolheadIdle
0004fd38 g    DF .text	0000042c  Base        ToolheadManager::ToolheadManager(unsigned char)
0005e7b0 g    DF .text	00000024  Base        ToolheadManager::GetFirmwareVersion()
0004f114 g    DF .text	00000040  Base        operator/=(q14&, q14 const&)
0004f08c g    DF .text	00000078  Base        sqrt(q14 const&)
000b16b8 g    DO .data.rel.ro	00000054  Base        vtable for ToolheadManager
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char>::auto_flush(bool)
0008c900 g    DF .text	0000005c  Base        Timer64P::configure32WithPeriodMicros(unsigned int)
0004a5cc g    DF .text	000001dc  Base        ToolheadManager::ResetPacketStats()
0004050c  w   DF .text	00000034  Base        boost::log::v2_mt_posix::sinks::sink::~sink()
000819cc g    DF .text	00000028  Base        BirdwingTransceiver::Initialize()
000b2618  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::detail::sp_counted_impl_pd<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char>*, boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> > >
000b0ed0  w   DO .data.rel.ro	00000008  Base        typeinfo for boost::detail::do_heap_delete<boost::thread_specific_ptr<boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<wchar_t>::formatting_context>::delete_data>
0004f000 g    DF .text	00000054  Base        operator>=(q14, q14)
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::attribute_set::attribute_set()
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::string::erase(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>)
00000000      DF *UND*	00000000  GLIBC_2.4   vsnprintf
00039314 g    DF .text	00000024  Base        Machine::PruIsPaused(bool*) const
00062070  w   DF .text	00000084  Base        boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_year>::~error_info_injector()
000947e0  w   DO .rodata	00000020  Base        typeinfo name for boost::system::error_category
000b0f08  w   DO .data.rel.ro	00000008  Base        typeinfo for boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> >
00061dd4  w   DF .text	00000070  Base        boost::exception_detail::error_info_injector<std::runtime_error>::~error_info_injector()
00094b64  w   DO .rodata	0000005b  Base        typeinfo name for boost::detail::sp_ms_deleter<boost::log::v2_mt_posix::sinks::basic_text_ostream_backend<char> >
00086c8c g    DF .text	0000000c  Base        libstepper::MicrosecondsPerTick()
000392e0 g    DF .text	00000010  Base        Machine::ResetZPauseIndex()
00073384  w   DF .text	0000014c  Base        std::deque<char, std::allocator<char> >::_M_reallocate_map(unsigned int, bool)
00000000      DO *UND*	00000000  GLIBCXX_3.4 typeinfo for std::runtime_error
0007c820 g    DF .text	00000014  Base        Shutdown
00038c30 g    DF .text	00000008  Base        acceleration::TemperatureCommand::ProcessCommand()
000684f8  w   DF .text	00000100  Base        boost::log::v2_mt_posix::sinks::basic_formatting_sink_frontend<wchar_t>::~basic_formatting_sink_frontend()
00000000      DF *UND*	00000000              boost::log::v2_mt_posix::aux::default_attribute_names::timestamp()
00094374  w   DO .rodata	0000000f  Base        typeinfo name for HESInterface
000b0cf0  w   DO .data.rel.ro	0000000c  Base        typeinfo for boost::log::v2_mt_posix::attributes::counter<unsigned int>::impl
0009ef50  w   DO .rodata	00000042  Base        typeinfo name for boost::exception_detail::error_info_injector<std::out_of_range>
000b0e58  w   DO .data.rel.ro	00000014  Base        vtable for boost::bad_function_call
0004c110 g    DF .text	00000008  Base        non-virtual thunk to BronxToolheadManager::EndHESLog()
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::string::compare(std::string const&) const
0003e130  w   DF .text	00000010  Base        virtual thunk to boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<std::runtime_error> >::~clone_impl()
0004440c  w   DF .text	000000f0  Base        boost::exception_detail::error_info_injector<boost::lock_error>::~error_info_injector()
00067fa4  w   DF .text	00000164  Base        boost::log::v2_mt_posix::sinks::synchronous_sink<boost::log::v2_mt_posix::sinks::text_file_backend>::~synchronous_sink()
0009470c  w   DO .rodata	00000092  Base        typeinfo name for boost::date_time::base_time<boost::posix_time::ptime, boost::date_time::counted_time_system<boost::date_time::counted_time_rep<boost::posix_time::millisec_posix_time_system_config> > >
00072a1c g    DF .text	00000024  Base        Machine::MoveAxis(machine::AxisName, float, float, bool)
000b1180 g    DO .data.rel.ro	0000000c  Base        typeinfo for BronxToolheadManager::BronxSelfCheckState
00044504  w   DF .text	000000a4  Base        boost::system::system_error::~system_error()
00045144  w   DF .text	000000a4  Base        boost::lock_error::~lock_error()
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::string::append(unsigned int, char)
0009edd0  w   DO .rodata	00000017  Base        typeinfo name for boost::bad_weak_ptr
00000000      DF *UND*	00000000  GLIBC_2.4   sched_yield
0007ebf0 g    DF .text	00000014  Base        AccelerationManager::LogChannelName()
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::locale::locale()
0003e2cc  w   DF .text	0000004c  Base        boost::log::v2_mt_posix::aux::light_function<bool (boost::log::v2_mt_posix::attribute_value_set const&)>::impl<boost::log::v2_mt_posix::filter::default_filter>::clone_impl(boost::log::v2_mt_posix::aux::light_function<bool (boost::log::v2_mt_posix::attribute_value_set const&)>::impl_base const*)
00000000      DF *UND*	00000000  GLIBCXX_3.4 std::ios_base::Init::~Init()
0004bf54 g    DF .text	0000008c  Base        BronxToolheadManager::SetFanDuty(float, unsigned char)
00038b4c g    DF .text	00000004  Base        NullTransceiver::ChangeTool(std::shared_ptr<ExtruderInterface>)
000b1b80  w   DO .data.rel.ro	00000014  Base        vtable for boost::gregorian::bad_month
000b2030  w   DO .data.rel.ro	00000020  Base        typeinfo for boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::gregorian::bad_day_of_month> >


